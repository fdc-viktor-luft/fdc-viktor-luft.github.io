{"version":3,"sources":["globals.ts","util/util.ts","components/icons/icon.tsx","sw-logic.tsx","intl.tsx","util/url.ts","admin/Admin.tsx","games/Again/again-store.ts","admin/AdminEntry.tsx","App.tsx","games/Again/data.ts","games/Again/types.ts","games/Again/Box.tsx","games/Again/ColorPoints.tsx","games/Again/again-logic.ts","util/hof-util.ts","hooks/useWindowResizeEffect.ts","hooks/useEventListener.ts","games/Again/again-resize.ts","games/Again/Letters.tsx","games/Again/Jokers.tsx","games/Again/RowPoints.tsx","games/Again/Grid.tsx","games/Again/Cube.tsx","footer/Footer.tsx","games/Again/Turn.tsx","games/Again/Total.tsx","games/Again/CompletionPopup.tsx","games/Again/ActionSplash.tsx","games/Again/AgainStarted.tsx","components/form/DisplayError.tsx","util/event-util.ts","components/form/select.tsx","games/Again/DataSelection.tsx","components/ErrorBoundary.tsx","footer/FooterUndo.tsx","games/VeryClever/data.ts","footer/FooterRestart.tsx","games/Again/index.tsx","mission/MissionControl.tsx","components/form/input.tsx","games/SpadeIsTrump/sit-store.ts","players/player-store.ts","players/PlayerRow.tsx","players/AddPlayer.tsx","players/PlayerSelection.tsx","games/SpadeIsTrump/StartupInfoPicker.tsx","games/SpadeIsTrump/Points.tsx","games/SpadeIsTrump/ClickableDescription.tsx","games/SpadeIsTrump/SpadeIsTrumpStarted.tsx","games/SpadeIsTrump/index.tsx","games/VeryClever/VeryClever-store.ts","games/Decrypto/NotifyResult.tsx","games/VeryClever/VeryClever-logic.ts","games/VeryClever/AvailableBonus.tsx","games/VeryClever/RoundOverview.tsx","games/VeryClever/ValueSelection.tsx","games/VeryClever/Bonus.tsx","games/VeryClever/Box.tsx","games/VeryClever/BoxRow.tsx","games/VeryClever/BoxGrid.tsx","games/VeryClever/Points.tsx","games/VeryClever/ActivatedBonus.tsx","games/VeryClever/VeryCleverInner.tsx","games/VeryClever/index.tsx","games/Decrypto/Decrypto-store.ts","games/Decrypto/CodeWordsSelection.tsx","components/form/SelectOverlay.tsx","games/Decrypto/GuessCode.tsx","games/Decrypto/GuessResult.tsx","games/Decrypto/KnowledgeView.tsx","games/Decrypto/QrCode.tsx","games/Decrypto/QrCodeScanner.tsx","games/Decrypto/QrCodeOverlay.tsx","games/Decrypto/ShowQrCode.tsx","games/Decrypto/DecryptoMe.tsx","games/Decrypto/DecryptoEnemy.tsx","games/Gimmick/gimmick-store.ts","games/Decrypto/Decrypto.tsx","games/Decrypto/index.tsx","games/Quixx/quixx-data.ts","games/Gimmick/StartupInfoPicker.tsx","games/Gimmick/ValueSelection.tsx","games/Gimmick/GimmickRowView.tsx","games/Gimmick/GimmickStarted.tsx","games/Gimmick/index.tsx","games/Quixx/quixx-store.ts","AppNavigation.tsx","games/Quixx/QuixxStarted.tsx","games/Quixx/index.tsx","index.tsx"],"names":["Globals","window","document","navigator","onLine","ClientHistory","back","history","classNamesFilter","arg","Util","array","num","defaultValue","Array","fill","classNames","classes","filter","join","undefined","nextArray","before","index","value","copy","splice","uuid","a","Math","random","toString","replace","arrayFill","arr","indices","forEach","i","arrayShuffle","length","j","floor","sum","values","reduce","cur","res","_Icon","symbol","props","width","className","viewBox","d","Icons","Icon","Alert","ArrowRight","ChevronUp","ChevronDown","ArrowDown","Ban","Crown","Exchange","Forward","Glasses","Home","Key","Mask","Menu","Undo","PowerOff","QrCode","Refresh","Refresh2","Settings","Times","Trash","Unlock","reloadPage","open","location","href","newSWInstalledCb","registerServiceWorker","serviceWorker","register","then","reg","onupdatefound","installingWorker","installing","activeWorker","active","onstatechange","state","catch","console","error","doAfter","ms","cb","Promise","resolve","setTimeout","ServiceWorkerUpdater","useState","content","setContent","contentDelayed","useCallback","delay","initRefresh","all","useEffect","addEventListener","_persist","chosen","Persistore","set","addIntlData","deIntl","currentLang","saved","get","_getPersisted","lang","language","startsWith","_detectPreferred","enIntl","Updater","setKey","key","toggleIntl","IntlRoot","children","UrlUtil","search","s","substr","params","split","result","param","pair","decodeURIComponent","allReportedErrors","oldConsoleError","push","onerror","e","SplashIconType","TurnType","Admin","close","map","message","String","Object","keys","localStorage","JSON","stringify","getItem","onClick","_AdminEntry","lastClicked","successCount","margin","timing","AdminEntry","setActive","now","Date","diff","App","src","alt","AppNavigation","Link","loc","NavLoc","AGAIN","loading","__","SIT","VERY_CLEVER","DECRYPTO","GIMMICK","QUIXX","parseRawData","starPositions","rowColors","label","grid","stars","backgroundColor","row","Number","AllRawData","AllData","black","blue","green","orange","pink","violet","yellow","dataOptions","DataSelectionOptions","COLOR","O","B","G","R","Y","Box","color","customColor","circled","crossed","star","borderColor","flicker","xmlns","x","y","height","rx","ry","stroke","strokeWidth","points","textAnchor","fontSize","cx","cy","r","x1","y1","x2","y2","blockColorPoints","AgainStore","ColorList","ColorPoints","colorPointsBlocked","completedColors","rowPoints1","rowPoints2","getCompletedRows","every","checked","getCompletedColors","gridData","boxIndex","getClickable","allowMiddle","rowIndex","calculate","again","completedRows","totalPoints","rowPointsBlocked","takenJokers","completed","getTotalPoints","getLastTurn","turns","turnsWithIndex","turn","HofUtil","func","lastPending","args","clearTimeout","useWindowResizeEffect","callbackRef","useRef","current","type","listener","capture","ref","wrapped","removeEventListener","useEventListener","innerWidth","applyPadding","padding","ratioDiscrepancy","innerHeight","calculateNecessaryPadding","paddingValue","from","getElementsByClassName","elem","style","setProperty","allLetters","Letters","letter","uncrossedRow","uncrossedGrid","unblockedRowPoints","unblockedColorPoints","initialAgainState","option","initialAgainStartedState","turnCrossed","completedColor","createStore","againSplash","againData","againStarted","useAgainSub","store","getHistory","states","parse","randomDataKey","limit","setStarted","updates","skipCrossedUpdate","updatedState","unshift","pop","againState","init","undo","shift","UNDO","restart","chooseData","selectedOption","dataOption","setSplash","icon","onCross","currentRow","count","updatedRow","updatedTurnRow","onFinish","lastTurn","lastTurnIndex","madeTurn","lastCrossed","lastIndex","newCompletedRows","nextCompletedColors","newCompletedColor","findIndex","Boolean","CHOSEN","data","SKIP","calculateTurn","SUBMIT","onAbort","CANCEL","onClosePopup","takeJoker","JOKER","blockRowPoints","ROW","BoxWrapper","NumberJoker","fontWeight","ColorJoker","JokerSeparator","EqualSign","JokerPlaceholder","taken","Jokers","_","rowWasCompleted","RowPoints","Grid","clickable","onClickHandler","starPosition","crossedRow","isMiddleRow","isClickable","VALUE_SVG","Cube","innerValue","FooterButton","description","FooterHome","applyFooterHeight","getElementById","Footer","expandable","hideHome","setOpen","toggle","o","Abort","Finish","SkipTurn","ChosenTurnDisplay","FooterTurnControl","Success","isCompleted","Turn","hideIndex","Turns","Total","CompletionPopup","onClose","hide","ActionSplash","iconView","iconType","renderIcon","AgainStarted","DisplayError","EventUtil","preventDefault","event","original","target","Option","__string","Select","serialize","required","onChange","onBlur","options","disabled","name","optionValues","v","getOptionValues","handlerRemapped","handler","optionValue","indexOf","currentValue","find","currentIndex","onSelect","OptionsWithRandom","DataSelection","ErrorBoundary","hasError","this","fix","Component","getDerivedStateFromError","Color","FooterUndo","FooterRestart","FooterStarted","Again","missions","title","text","MissionControl","processed","selected","interval","processNextLetter","clearInterval","setState","runLetters","setInterval","select","mission","m","isSelected","substring","transformHandler","trim","Input","placeholder","inputClassName","onFocus","autoFocus","forwardedRef","readOnly","FormInput","Field","rest","players","gameState","useSpadeIsTrumpSub","update","_set","SitStore","reset","rearrange","cleared","player","total","_clear","slice","_get","usePlayerSub","next","_moveTo","after","PlayerStore","add","shortcut","remove","p","moveDown","moveUp","PlayerRow","pos","initialValues","Morfi","create","Form","Fields","initialData","errors","validation","id","AddPlayerForm","onAdd","setData","onSubmit","AddPlayer","focus","setFocus","PlayerSelection","playersFromStartup","startupInfo","rounds","numberOfCards","numberOfPlayers","playerIdx","newPlayer","StartupInfoValidations","isNaN","min","max","submit","StartupInfoPicker","parseNum","parsed","_tipToString","tip","Points","activeRound","checkable","currentTip","setCurrentTip","onChangeTip","setEarned","earned","onSuccess","onFailed","clazzName","readyToPlay","ClickableDescription","desc","short","tag","showName","setShowName","displayed","React","createElement","onPointsChange","roundIdx","onPlayerChange","SpadeIsTrumpStarted","earnings","round","getActiveRound","earnedPoints","val","isActiveRound","activeReady","activeRoundReady","cards","positives","roundHasError","earnedIdx","SpadeIsTrumpFooter","started","SpadeIsTrump","BONUS","orangeFactors","Data","YELLOW","contents","rowBonus","BLUE","ORANGE_4","GREEN","FOX","columnBonus","YELLOW_10","YELLOW_14","YELLOW_16","YELLOW_20","PLUS_1","ORANGE_5","REFRESH","PURPLE","bonus","ORANGE","factors","f","ORANGE_6","_setHistoryLocal","_getHistory","isArray","initialGameState","useVeryCleverSub","_Store","Status","VeryCleverStore","_takeBonus","list","firstFalse","_allCrossed","nums","_getRowBonus","_getBonus","collected","includes","_getYellowBonus","_getBlueBonus","_crossableClicked","earnedBonus","_getNextIndex","_selectValue","factor","_sumPoints","red","ROUND_BONUS","ULTIMATE","_getRoundBonus","VeryCleverLogic","takeReshuffleBonus","reshuffle","takePlusOneBonus","plusOne","boxClicked","_isCrossed","_isNextIndex","selection","selectValue","clearSelection","yPoints","bPoints","gPoints","_greenPoints","oPoints","pPoints","foxes","useBonus","_useBonus","nextRound","AvailableBonus","c","AvailableReshuffleBonus","AvailablePlusOneBonus","RoundOverview","ValueSelectionOption","ValueSelection","prevVal","currentIdx","CONTENT_AND_COLOR","BLACK","CROSS","Bonus","gePrefix","highlight","_isHighLight","newContent","BoxRow","bonusList","point","array6","BoxGrid","rowBonusList","columnBonusList","ActivatedBonus","VeryCleverInner","VeryCleverFooter","VeryClever","NoKnowledge","initialDecryptoState","results","losses","wins","me","knowledge","enemy","raw","_fetch","useDecryptoSub","Store","DecryptoStore","initialCodeWords","first","second","third","initialCodeWordsData","codeWordValidator","btoa","codeWordValidation","CodeWordsSelection","code","codeWordsData","setCodeWordsData","hasErrors","SelectOverlayValue","SelectOverlay","isOpen","node","GuessOptions","GuessCode","codeWords","setFirst","setSecond","setThird","duplicated","duplicate","_getDuplicated","_getAllDuplicated","wasGuessed","useMemo","onGuessedMe","GuessResult","guessed","firstIncorrect","secondIncorrect","thirdIncorrect","KnowledgeView","rows","k","idx","QrCodeColorOptions","white","dark","light","info","setError","canvas","QRCode","toCanvas","QrCodeScanner","onInput","prepareClose","permissionDenied","setPermissionDenied","stream","setStream","streamRef","video","isRunning","isFinished","createSnap","clearStream","getTracks","track","removeTrack","srcObject","mediaDevices","getUserMedia","audio","facingMode","pause","startScanning","requestAnimationFrame","videoElem","URL","createObjectURL","setAttribute","handleQrCodeResult","atob","context","getContext","qr","drawImage","imageData","getImageData","callback","decode","initialQrCodeState","scanning","closingScanner","useQrCodeInfo","qrCodeInfoStore","closeQrCodeOverlay","_onScanInput","QrCodeOverlay","display","ShowQrCode","_generateCode","_setCodeWords","_setGuessed","wrongGuess","updatedMe","DecryptoMe","disableGeneration","finishedEnemyRound","meRound","noCodeOrFinishedGuessing","correctGuess","updatedEnemy","DecryptoEnemy","disableCatch","meUpdates","GimmickRow","NotifyResult","status","setStatus","last","WON","LOST","DecryptoInternal","showEnemy","setShowEnemy","onSwitch","DecryptoFooter","Decrypto","QuixxColor","GIMMICK_ROW_SETTINGS","M1","multiplier","M2","M3","M4","M5","M6","TRIPLE","FOURSOME","FULL_HOUSE","fixedValue","SMALL_STREET","BIG_STREET","SENSATION","CHANCE","initialGimmickState","useGimmickSub","_newPlayer","getCurrentActivePlayer","minSelected","_finishedPoints","gimmickRows","calculateBonus","calculateSum","GimmickStore","prevState","selectPlayers","gimmickRow","_updatePlayer","finishedMultiplier","allFinished","playerWithMostPoints","playersWithSums","ValueSelectionValidations","GIMMICK_NODES","GimmickRowView","activePlayer","GimmickStarted","setSelection","closeSelection","firstPartRows","secondPartRows","winner","GimmickFooter","Gimmick","initialQuixxState","badThrows","closed","useQuixxSub","POINTS_BY_CROSSES","_setCross","field","QuixxStore","onBadThrow","rowCrossed","lastIndexOf","QUIXX_DEFAULT_DATA","RED","QuixxFieldView","fieldIdx","deactivated","onClickWrapped","QuixxRow","rowIdx","rowClosed","lastCrossedIdx","QuixxStarted","QuixxFooter","Quixx","_getCurrentNavLoc","useNavSub","NavStore","Root","MISSION","pushState","ReactDOM","render"],"mappings":"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","file":"static/js/main.d82233df.chunk.js","sourcesContent":["export const Globals = {\n    window: () => window,\n    document: () => document,\n    navigator: (): any => navigator,\n    onLine: (): boolean => !('onLine' in Globals.navigator()) || Globals.navigator().onLine,\n};\n\nexport const ClientHistory = {\n    back: () => window.history.back(),\n};\n","const classNamesFilter = (arg: any) => !!arg && typeof arg === 'string';\nconst classNames = (...classes: any[]): string | undefined => classes.filter(classNamesFilter).join(' ') || undefined;\n\nconst array = <T>(num: number, defaultValue?: T): Array<T> => Array(num).fill(defaultValue);\n\nconst arrayFill = <T>(arr: T[], indices: number[], value: T): T[] => {\n    const copy = [...arr];\n    indices.forEach((i) => {\n        copy[i] = value;\n    });\n    return copy;\n};\n\nconst nextArray = <T>(before: T[], index: number, value: T): T[] => {\n    const copy = [...before];\n    copy.splice(index, 1, value);\n    return copy;\n};\n\nconst arrayShuffle = <T>(arr: T[]): T[] => {\n    const copy = [...arr];\n    const start = copy.length - 1;\n    for (let i = start; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [copy[i], copy[j]] = [copy[j], copy[i]];\n    }\n    return copy;\n};\n\n// optimized as much as possible\n// call this function without arguments to generate a new uuid\ntype UuidParam = void;\nconst uuid = (a: UuidParam): string =>\n    (a as any)\n        ? ((a as any) ^ ((Math.random() * 16) >> ((a as any) / 4))).toString(16)\n        : (([1e7] as any) + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, uuid);\n\nconst sum = (...values: (number | undefined)[]): number => (values as any).reduce((cur = 0, res = 0) => res + cur, 0);\n\nexport const Util = { array, classNames, nextArray, uuid, arrayFill, arrayShuffle, sum };\n","import React from 'react';\nimport Icons from './icon-path.json';\nimport { Util } from '../../util/util';\n\ntype IconProps = { className?: string };\n\nconst _Icon = (symbol: keyof typeof Icons, props: IconProps = {}, width: number = 512) => (\n    <svg className={props.className ? props.className + ' icon' : 'icon'} viewBox={`0 0 ${width} 512`}>\n        <path fill=\"currentColor\" d={Icons[symbol]} />\n    </svg>\n);\n\nconst ArrowDown = ({ className }: IconProps) => <Icon.ArrowRight className={Util.classNames('rotate-90', className)} />;\nconst ChevronDown = ({ className }: IconProps) => (\n    <Icon.ChevronUp className={Util.classNames('rotate-180', className)} />\n);\n\nexport const Icon = {\n    Alert: (props?: IconProps) => _Icon('ALERT', props, 576),\n    ArrowRight: (props?: IconProps) => _Icon('ARROW_RIGHT', props, 448),\n    ChevronUp: (props?: IconProps) => _Icon('CHEVRON_UP', props, 448),\n    ChevronDown,\n    ArrowDown,\n    Ban: (props?: IconProps) => _Icon('BAN', props),\n    Crown: (props?: IconProps) => _Icon('CROWN', props, 640),\n    Exchange: (props?: IconProps) => _Icon('EXCHANGE', props),\n    Forward: (props?: IconProps) => _Icon('FORWARD', props),\n    Glasses: (props?: IconProps) => _Icon('GLASSES', props, 576),\n    Home: (props?: IconProps) => _Icon('HOME', props, 576),\n    Key: (props?: IconProps) => _Icon('KEY', props),\n    Mask: (props?: IconProps) => _Icon('MASK', props, 640),\n    Menu: (props?: IconProps) => _Icon('MENU', props, 448),\n    Undo: (props?: IconProps) => _Icon('UNDO', props),\n    PowerOff: (props?: IconProps) => _Icon('POWER_OFF', props),\n    QrCode: (props?: IconProps) => _Icon('QR_CODE', props, 448),\n    Refresh: (props?: IconProps) => _Icon('REFRESH', props, 640),\n    Refresh2: (props?: IconProps) => _Icon('REFRESH_2', props),\n    Settings: (props?: IconProps) => _Icon('SETTINGS', props),\n    Times: (props?: IconProps) => _Icon('TIMES', props),\n    Trash: (props?: IconProps) => _Icon('TRASH', props, 448),\n    Unlock: (props?: IconProps) => _Icon('UNLOCK', props, 448),\n};\n","import React, { ReactNode, useEffect, useCallback, useState } from 'react';\nimport { Globals } from './globals';\nimport { Icon } from './components/icons/icon';\n\nconst reloadPage = () => {\n    Globals.window().open(window.location.href, '_self');\n};\n\nlet newSWInstalledCb = () => {};\n\nconst registerServiceWorker = () =>\n    Globals.navigator()\n        .serviceWorker.register('/sw.js')\n        .then((reg: any /* ServiceWorkerRegistration */) => {\n            reg.onupdatefound = () => {\n                // reg.installing -> the installing worker, or undefined\n                // reg.waiting -> the waiting worker, or undefined\n                // reg.active -> the active worker, or undefined\n                const installingWorker = reg.installing;\n                const activeWorker = reg.active;\n                installingWorker.onstatechange = () => {\n                    // \"installing\" - the install event has fired, but not yet complete\n                    // \"installed\"  - install complete\n                    // \"activating\" - the activate event has fired, but not yet complete\n                    // \"activated\"  - fully active\n                    // \"redundant\"  - discarded. Either failed install, or it's been\n                    //                replaced by a newer version\n                    if (installingWorker.state === 'installed' && activeWorker) newSWInstalledCb();\n                };\n            };\n        })\n        .catch(() => Globals.window().console.error('some service worker registration failed'));\n\nconst initServiceWorker = () => {\n    if (process.env.NODE_ENV !== 'development') {\n        'serviceWorker' in navigator && window.addEventListener('load', registerServiceWorker);\n    }\n};\n\nconst doAfter = (ms: number, cb: () => void): Promise<void> =>\n    new Promise((resolve) =>\n        Globals.window().setTimeout(() => {\n            cb();\n            resolve();\n        }, ms)\n    );\n\nexport const ServiceWorkerUpdater = () => {\n    const [content, setContent] = useState<ReactNode | void>();\n\n    const contentDelayed = useCallback(\n        (delay: number, content: ReactNode): Promise<void> => doAfter(delay, () => setContent(content)),\n        []\n    );\n\n    const initRefresh = useCallback(\n        () =>\n            Promise.all([\n                contentDelayed(0, 'Update gefunden'),\n                contentDelayed(1000, 'Update anwenden'),\n                contentDelayed(1300, 'Update anwenden.'),\n                contentDelayed(1600, 'Update anwenden..'),\n                contentDelayed(1900, 'Update anwenden...'),\n                contentDelayed(2200, <Icon.Undo />),\n                doAfter(2500, reloadPage),\n            ]),\n        [] // eslint-disable-line react-hooks/exhaustive-deps\n    );\n\n    useEffect(() => {\n        newSWInstalledCb = initRefresh;\n        initServiceWorker();\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    if (!content) return null;\n\n    return (\n        <div className=\"sw-update\">\n            <div className=\"sw-update-overlay\" />\n            <div className=\"sw-update-content\">{content}</div>\n        </div>\n    );\n};\n","import React, { Fragment, ReactNode, useEffect, useState } from 'react';\nimport { addIntlData } from 'first-intl';\nimport deIntl from './intl-de.json';\nimport enIntl from './intl-en.json';\nimport { Persistore } from 'persistore';\n\ntype SupportedLanguage = 'de' | 'en';\n\nconst _key = 'lang';\n\nconst _persist = (chosen: SupportedLanguage) => Persistore.set(_key, chosen);\nconst _getPersisted = (): SupportedLanguage | undefined => {\n    const saved = Persistore.get(_key);\n    return saved === 'de' || saved === 'en' ? saved : undefined;\n};\n\naddIntlData(deIntl);\n\nconst _detectPreferred = (): SupportedLanguage => {\n    const lang = navigator.language;\n    return lang && lang.startsWith('en') ? 'en' : 'de';\n};\n\nlet currentLang = _getPersisted() || _detectPreferred();\n\nif (currentLang !== 'de') {\n    addIntlData(enIntl);\n}\n\nconst Updater = { setKey: (key: SupportedLanguage) => {} };\n\nexport const toggleIntl = () => {\n    if (currentLang === 'de') {\n        currentLang = 'en';\n        addIntlData(enIntl);\n        Updater.setKey('en');\n        _persist('en');\n    } else {\n        currentLang = 'de';\n        addIntlData(deIntl);\n        Updater.setKey('de');\n        _persist('de');\n    }\n};\n\nexport const IntlRoot: React.FC<{ children: ReactNode }> = ({ children }) => {\n    const [key, setKey] = useState<SupportedLanguage>(currentLang);\n\n    useEffect(() => {\n        Updater.setKey = setKey;\n    }, []);\n\n    return <Fragment key={key}>{children}</Fragment>;\n};\n\nexport const getCurrentIntl = (): SupportedLanguage => currentLang;\n","/**\n * Wording conventions:\n * 1) search string => Part of the url preceded by the pathname.\n *      e.g.: ?uuid=whatever&page=4\n * 2) query string => search string without \"?\"\n *      e.g.: uuid=whatever&page=4\n * 3) query => the associated object of the query string\n *      e.g.: {uuid: 'whatever', page: '4'}\n *\n * ATTENTION: All values will be strings!!!\n */\n\n/**\n * Transforms location search string into query object.\n */\nconst locationSearchToQuery = (search: string = ''): { [key: string]: any } => {\n    const s = search.startsWith('?') ? search.substr(1) : search; // hash history not considered for now\n    const params = s.split('&');\n    const result = {} as { [key: string]: any };\n    for (let i = 0; i < params.length; i++) {\n        const param = params[i];\n        if (param) {\n            const pair = param.split('=');\n            const value = pair[1];\n            if (value !== undefined) result[decodeURIComponent(pair[0])] = decodeURIComponent(value);\n        }\n    }\n    return result;\n};\n\n/**\n * Transforms query object to query string.\n */\nconst queryToString = (query: { [key: string]: any }): string =>\n    Object.keys(query)\n        .map((key) => {\n            const value = query[key];\n            if (value !== undefined && value !== null) {\n                return `${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`;\n            }\n            return undefined;\n        })\n        .filter(Boolean)\n        .join('&');\n\n/**\n * Transforms query object to search string.\n */\nconst queryToSearch = (query: Object): string => {\n    const queryString = queryToString(query);\n    return queryString ? `?${queryString}` : '';\n};\n\nexport const UrlUtil = { queryToString, locationSearchToQuery, queryToSearch };\n","import React, { Fragment } from 'react';\n\nconst allReportedErrors: any[] = [];\nconst oldConsoleError = window.console.error;\nwindow.console.error = (...args: any[]) => {\n    allReportedErrors.push(...args);\n    oldConsoleError(...args);\n};\nwindow.onerror = (e) => {\n    allReportedErrors.push(e);\n};\n\nexport type AdminProps = { close: () => void };\n\nexport const Admin: React.FC<AdminProps> = ({ close }) => (\n    <div className=\"admin\">\n        <div className=\"console-error\">\n            <h1>console.error</h1>\n            {allReportedErrors.map((message, index) => (\n                <p key={index}>{String(message)}</p>\n            ))}\n        </div>\n        <div className=\"localStorage\">\n            <h1>localStorage</h1>\n            {Object.keys(localStorage).map((key) => (\n                <Fragment key={key}>\n                    <h3>{key}</h3>\n                    <p>{JSON.stringify(localStorage.getItem(key))}</p>\n                </Fragment>\n            ))}\n        </div>\n        <button onClick={close}>Close</button>\n    </div>\n);\n","import { Persistore } from 'persistore';\nimport { Util } from '../../util/util';\nimport { AllData, Data, dataOptions, DataOption } from './data';\nimport { Color } from './types';\nimport { createStore } from 'react-use-sub';\nimport { calculateTurn, getLastTurn } from './again-logic';\nimport { allLetters } from './Letters';\nimport { ColorList } from './ColorPoints';\n\nexport enum SplashIconType {\n    CANCEL = 'cancel',\n    UNDO = 'undo',\n    SUBMIT = 'submit',\n    SKIP = 'skip',\n}\n\nexport enum TurnType {\n    ROW = 'row',\n    COLOR = 'color',\n    JOKER = 'joker',\n    SKIP = 'skip',\n    CHOSEN = 'chosen',\n}\n\nexport type ChosenTurn = { color: Color; count: number; completedColor?: Color; completedRows?: boolean[] };\n\nexport type TurnState =\n    | { type: TurnType.ROW; data: string }\n    | { type: TurnType.COLOR; data: Color }\n    | { type: TurnType.JOKER }\n    | { type: TurnType.SKIP; index: number }\n    | { type: TurnType.CHOSEN; data: ChosenTurn; index: number };\n\nexport type AgainState = {\n    crossed: boolean[][];\n    rowPointsBlocked: boolean[];\n    colorPointsBlocked: boolean[];\n    takenJokers: number;\n    turns: TurnState[];\n    option: DataOption | null;\n};\n\nconst uncrossedRow: boolean[] = Util.array(7).map(() => false);\nexport const uncrossedGrid: boolean[][] = Util.array(15).map(() => uncrossedRow);\nconst unblockedRowPoints: boolean[] = Util.array(15).map(() => false);\nconst unblockedColorPoints: boolean[] = Util.array(5).map(() => false);\nconst initialAgainState: AgainState = {\n    crossed: uncrossedGrid,\n    rowPointsBlocked: unblockedRowPoints,\n    colorPointsBlocked: unblockedColorPoints,\n    takenJokers: 0,\n    turns: [],\n    option: null,\n};\n\nexport type Chosen = { color: Color; count: number };\nexport type AgainStartedState = {\n    crossed: boolean[][];\n    turnCrossed: boolean[][];\n    chosen: Chosen | null;\n    completedColor: Color | null;\n};\nconst initialAgainStartedState: AgainStartedState = {\n    crossed: uncrossedGrid,\n    turnCrossed: uncrossedGrid,\n    chosen: null,\n    completedColor: null,\n};\n\ntype State = {\n    againSplash: SplashIconType | null;\n    again: AgainState;\n    againData: Data | null;\n    againStarted: AgainStartedState;\n};\n\nconst [useAgainSub, store] = createStore<State>({\n    againSplash: null,\n    again: initialAgainState,\n    againData: null,\n    againStarted: initialAgainStartedState,\n});\n\nexport { useAgainSub };\n\nconst setSplash = (icon: SplashIconType | null) => store.set({ againSplash: icon });\n\nconst _key = 'again';\n\nconst getHistory = (): AgainState[] => {\n    try {\n        const states = Persistore.get(_key);\n        return JSON.parse(states as any);\n    } catch (e) {\n        return [];\n    }\n};\n\nconst randomNum = (limit: number) => Math.floor(Math.random() * limit);\nconst randomDataKey = (): DataOption => dataOptions[randomNum(dataOptions.length)];\n\nconst dataOption = (option: DataOption | 'random'): DataOption => (option === 'random' ? randomDataKey() : option);\n\nconst chooseData = (option: DataOption | 'random'): void => {\n    const selectedOption = dataOption(option);\n    store.set({ againData: AllData[selectedOption] });\n    set({ option: selectedOption });\n};\n\nconst setStarted = (updates: Partial<AgainStartedState>): void =>\n    store.set(({ againStarted }) => ({ againStarted: { ...againStarted, ...updates } }));\n\nconst set = (state: Partial<AgainState>, skipCrossedUpdate?: boolean): void => {\n    store.set(({ again }) => ({ again: { ...again, ...state } }));\n    const updatedState = store.get().again;\n\n    // update the crossed of the again started state\n    skipCrossedUpdate || setStarted({ crossed: updatedState.crossed });\n\n    const history = getHistory();\n    history.unshift(updatedState);\n    if (history.length > 20) history.pop();\n    Persistore.set(_key, JSON.stringify(history));\n};\n\nconst undo = (): void => {\n    if (!store.get().againSplash) {\n        const history = getHistory();\n        if (history.length > 1) {\n            history.shift();\n            Persistore.set(_key, JSON.stringify(history));\n            const again = history[0];\n            store.set({\n                again,\n                againSplash: SplashIconType.UNDO,\n                againData: again.option ? AllData[again.option] : null,\n            });\n            setStarted({ crossed: again.crossed });\n        }\n    }\n};\n\nconst get = (): AgainState => getHistory()[0] || initialAgainState;\n\nconst init = () => {\n    const againState = get();\n    store.set({\n        again: againState,\n        againData: againState.option ? AllData[againState.option] : null,\n        againStarted: { ...initialAgainStartedState, crossed: againState.crossed },\n    });\n};\n\nconst restart = (): void => {\n    set(initialAgainState);\n    setStarted(initialAgainStartedState);\n    store.set({ againData: null });\n};\n\ninit();\n\nconst onCross = (boxIndex: number, rowIndex: number): void => {\n    const {\n        againStarted: { crossed, turnCrossed, chosen },\n        againData,\n    } = store.get();\n    const currentRow = crossed[rowIndex];\n    if (!currentRow[boxIndex] && againData) {\n        const color = againData.grid[rowIndex][boxIndex];\n        if (chosen) {\n            if (color !== chosen.color) return; // many colors is not allowed\n            const alreadyPicked = chosen.count;\n            if (alreadyPicked > 4) return; // no more than 5 per color and turn\n        }\n        const updatedRow = Util.nextArray(currentRow, boxIndex, true);\n        const updatedTurnRow = Util.nextArray(turnCrossed[rowIndex], boxIndex, true);\n        const count = chosen ? chosen.count + 1 : 1;\n        AgainStore.setStarted({\n            crossed: Util.nextArray(crossed, rowIndex, updatedRow),\n            turnCrossed: Util.nextArray(turnCrossed, rowIndex, updatedTurnRow),\n            chosen: { color, count },\n        });\n    }\n};\n\nconst onFinish = () => {\n    const {\n        againStarted: { crossed, chosen },\n        againSplash,\n        again,\n        againData,\n    } = store.get();\n    if (!againSplash && againData) {\n        const lastTurn = getLastTurn(again.turns);\n        const lastTurnIndex = lastTurn ? (lastTurn as any).index : 0;\n        const madeTurn = calculateTurn(chosen, again.crossed, crossed, againData, lastTurnIndex);\n\n        AgainStore.set({ crossed, turns: [...again.turns, madeTurn] });\n        AgainStore.setSplash(madeTurn.type === TurnType.SKIP ? SplashIconType.SKIP : SplashIconType.SUBMIT);\n        AgainStore.setStarted({\n            turnCrossed: uncrossedGrid,\n            chosen: null,\n            completedColor: madeTurn.type === TurnType.CHOSEN ? madeTurn.data.completedColor : undefined,\n        });\n    }\n};\n\nconst onAbort = () => {\n    const { againSplash, again } = store.get();\n    if (!againSplash) {\n        AgainStore.setSplash(SplashIconType.CANCEL);\n        AgainStore.setStarted({\n            turnCrossed: uncrossedGrid,\n            chosen: null,\n            crossed: again.crossed,\n            completedColor: null,\n        });\n    }\n};\n\nconst onClosePopup = () => AgainStore.setStarted({ completedColor: null });\n\nconst takeJoker = () => {\n    const { takenJokers, turns } = get();\n    AgainStore.set(\n        {\n            takenJokers: takenJokers + 1,\n            turns: [...turns, { type: TurnType.JOKER }],\n        },\n        true\n    );\n};\n\nconst blockRowPoints = (index: number) => {\n    const { rowPointsBlocked, turns } = get();\n    AgainStore.set(\n        {\n            rowPointsBlocked: Util.nextArray(rowPointsBlocked, index, true),\n            turns: [...turns, { type: TurnType.ROW, data: allLetters[index] }],\n        },\n        true\n    );\n};\n\nconst blockColorPoints = (index: number) => {\n    const { colorPointsBlocked, turns } = get();\n    AgainStore.set(\n        {\n            colorPointsBlocked: Util.nextArray(colorPointsBlocked, index, true),\n            turns: [...turns, { type: TurnType.COLOR, data: ColorList[index] }],\n        },\n        true\n    );\n};\n\nexport const AgainStore = {\n    set,\n    undo,\n    restart,\n    chooseData,\n    setSplash,\n    setStarted,\n    onCross,\n    onFinish,\n    onAbort,\n    onClosePopup,\n    takeJoker,\n    blockRowPoints,\n    blockColorPoints,\n};\n","import React, { useCallback, useState } from 'react';\nimport { Admin } from './Admin';\n\nconst _AdminEntry = {\n    lastClicked: 0,\n    successCount: 0,\n    margin: 100,\n    timing: [474, 405, 135, 464, 919, 446], // TODO(VL): Rework this entry strategy. Does not work reliably on all devices\n};\n\n// TODO(VL): Should be possible everywhere to open the admin panel. Not only on first page\nexport const AdminEntry: React.FC = () => {\n    const [active, setActive] = useState(false);\n    const onClick = useCallback(() => {\n        const now = Date.now();\n        const diff = now - _AdminEntry.lastClicked;\n        if (diff > 2000) {\n            // console.log('First');\n            _AdminEntry.successCount = 0;\n        } else {\n            const timing = _AdminEntry.timing[_AdminEntry.successCount];\n            if (diff - _AdminEntry.margin < timing && timing < diff + _AdminEntry.margin) {\n                // console.log('Success');\n                if (_AdminEntry.successCount === 5) {\n                    _AdminEntry.successCount = 0;\n                    setActive(true);\n                } else {\n                    _AdminEntry.successCount++;\n                }\n            } else {\n                // console.log('Failed');\n                _AdminEntry.successCount = 0;\n            }\n        }\n        _AdminEntry.lastClicked = now;\n    }, []);\n\n    const close = useCallback(() => setActive(false), []);\n\n    return active ? <Admin close={close} /> : <div className=\"admin-entry\" onClick={onClick} />;\n};\n","import React from 'react';\nimport { __ } from 'first-intl';\nimport { getCurrentIntl, toggleIntl } from './intl';\nimport { AppNavigation, NavLoc } from './AppNavigation';\nimport { AdminEntry } from './admin/AdminEntry';\n\nexport const App: React.FC = () => (\n    <div className=\"App\">\n        <header className=\"App-header\">\n            <img src=\"/logo.svg\" className=\"App-logo\" alt=\"logo\" />\n            <img\n                src={getCurrentIntl() === 'de' ? '/flag.germany.svg' : '/flag.usa.svg'}\n                className=\"App-logo\"\n                alt=\"toggle language\"\n                onClick={toggleIntl}\n            />\n        </header>\n        <div className=\"App-content\">\n            <div className=\"preview\">\n                <AppNavigation.Link loc={NavLoc.AGAIN}>\n                    <img src=\"/preview-again.jpg\" alt=\"preview again\" loading=\"lazy\" />\n                    <h2>{__('AGAIN')}</h2>\n                </AppNavigation.Link>\n            </div>\n            <div className=\"preview\">\n                <AppNavigation.Link loc={NavLoc.SIT}>\n                    <img src=\"/preview-sit.jpg\" alt=\"preview sit\" loading=\"lazy\" />\n                    <h2>{__('SIT')}</h2>\n                </AppNavigation.Link>\n            </div>\n            <div className=\"preview\">\n                <AppNavigation.Link loc={NavLoc.VERY_CLEVER}>\n                    <img src=\"/preview-veryClever.jpg\" alt=\"preview veryClever\" loading=\"lazy\" />\n                    <h2>{__('VC')}</h2>\n                </AppNavigation.Link>\n            </div>\n            <div className=\"preview\">\n                <AppNavigation.Link loc={NavLoc.DECRYPTO}>\n                    <img src=\"/preview-decrypto.jpg\" alt=\"preview decrypto\" loading=\"lazy\" />\n                    <h2>{__('DECRYPTO')}</h2>\n                </AppNavigation.Link>\n            </div>\n            <div className=\"preview\">\n                <AppNavigation.Link loc={NavLoc.GIMMICK}>\n                    <img src=\"/preview-gimmick.jpg\" alt=\"preview gimmick\" loading=\"lazy\" />\n                    <h2>{__('GIMMICK')}</h2>\n                </AppNavigation.Link>\n            </div>\n            <div className=\"preview\">\n                <AppNavigation.Link loc={NavLoc.QUIXX}>\n                    <img src=\"/preview-quixx.jpg\" alt=\"preview quixx\" loading=\"lazy\" />\n                    <h2>{__('QUIXX')}</h2>\n                </AppNavigation.Link>\n            </div>\n        </div>\n        <AdminEntry />\n    </div>\n);\n","import { Color } from './types';\nimport { SelectOption } from '../../components/form/select';\nimport { StringMessage } from 'first-intl';\n\ntype RawData = { label: StringMessage; grid: string[]; stars: string; backgroundColor: string };\nexport type Data = { label: StringMessage; grid: Color[][]; stars: number[]; backgroundColor: string };\n\nconst parseRawGridData = (rowColors: string[]): Color[][] => rowColors.map((row: any) => row.split(''));\nconst parseRawStarPositions = (starPositions: string): number[] => starPositions.split('').map(Number);\nconst parseRawData = ({ label, grid, stars, backgroundColor }: RawData): Data => ({\n    label,\n    grid: parseRawGridData(grid),\n    stars: parseRawStarPositions(stars),\n    backgroundColor,\n});\n\nconst AllRawData = {\n    black: {\n        label: 'AGAIN.color.black',\n        backgroundColor: '#222222',\n        stars: '251513205150635',\n        grid: [\n            'GOBBRRY',\n            'GGGROBY',\n            'GYRROBB',\n            'YGGGORB',\n            'YYGOORB',\n            'YYGORRB',\n            'YOGBBRR',\n            'GORBBYY',\n            'BRRGOYY',\n            'BBRGOOY',\n            'BBYYORG',\n            'OOYYRBG',\n            'YOOORBG',\n            'YGGRRBO',\n            'YGGBROO',\n        ],\n    },\n    blue: {\n        label: 'AGAIN.color.blue',\n        backgroundColor: '#64a8ff',\n        stars: '125161046141324',\n        grid: [\n            'ROBBGGY',\n            'RROBBGY',\n            'GROOBYY',\n            'GBBORYY',\n            'YBGORRR',\n            'YGGGRBO',\n            'YYGRBBO',\n            'GGRRBYO',\n            'GGOOBYR',\n            'RRGOBYY',\n            'RGGOOBY',\n            'RYGOBBB',\n            'RRGBYOO',\n            'OOGBYYR',\n            'OOYYGBR',\n        ],\n    },\n    green: {\n        label: 'AGAIN.color.green',\n        backgroundColor: '#22b244',\n        stars: '044266214405344',\n        grid: [\n            'OGBBBRY',\n            'GGBORRY',\n            'BGOOORY',\n            'BGGORRY',\n            'RRYOBBG',\n            'RYYGOBB',\n            'RGGGOBY',\n            'GRBBOYY',\n            'GGRBBYO',\n            'GGRBYYO',\n            'YRRBOOG',\n            'YYROOBG',\n            'YYORRGB',\n            'RROOYGB',\n            'RYYOOGB',\n        ],\n    },\n    orange: {\n        label: 'AGAIN.color.orange',\n        backgroundColor: '#d03b09',\n        stars: '030414031051652',\n        grid: [\n            'OBYYRGG',\n            'OOBYYGR',\n            'YOBBGGR',\n            'OOGYBRR',\n            'RGGYBBO',\n            'RRRYGBO',\n            'RGGYYBO',\n            'GGYBOOR',\n            'OYYBBGR',\n            'RRYYBGO',\n            'GRRYBOO',\n            'GGRRBYO',\n            'GBBOOYR',\n            'GYYOBBR',\n            'GYOOBBR',\n        ],\n    },\n    pink: {\n        label: 'AGAIN.color.pink',\n        backgroundColor: '#9c2271',\n        stars: '206201230315514',\n        grid: [\n            'GRBBBOY',\n            'GOBBRYY',\n            'OOBRRGY',\n            'OYRRBGG',\n            'OGGRBBY',\n            'RGGGBOY',\n            'RBBGOOY',\n            'RYYOBGG',\n            'YYROBBG',\n            'BYRROOG',\n            'BGRYYOO',\n            'BOOGYYR',\n            'BOGGYRR',\n            'BOOGYRR',\n            'RROGBYY',\n        ],\n    },\n    violet: {\n        label: 'AGAIN.color.violet',\n        backgroundColor: '#701fa7',\n        stars: '530420214213612',\n        grid: [\n            'YOOOGBR',\n            'YBOGGGR',\n            'OBBYGRR',\n            'OBBYRGG',\n            'ORYYYGB',\n            'GRRYOOB',\n            'BROOGGY',\n            'BROGGYY',\n            'BROOYGG',\n            'YYBBORG',\n            'YYBBORG',\n            'RBBOOYG',\n            'RRRBOYG',\n            'GRBBOYY',\n            'GOBRRRY',\n        ],\n    },\n    yellow: {\n        label: 'AGAIN.color.yellow',\n        backgroundColor: '#d09012',\n        stars: '625062536324220',\n        grid: [\n            'RRBOYYG',\n            'GGROBYY',\n            'GRROBBY',\n            'YRBOOGG',\n            'YRBBOGG',\n            'YYGBROO',\n            'YYGBROO',\n            'OOGBRYY',\n            'RRGGBYO',\n            'RRGYBOO',\n            'GGRYBBO',\n            'GGBBRYO',\n            'GBORRYY',\n            'BBBROYG',\n            'YBRROOG',\n        ],\n    },\n};\n\nexport type DataOption = keyof typeof AllRawData;\nexport const AllData: { [key in DataOption]: Data } = {\n    black: parseRawData(AllRawData.black),\n    blue: parseRawData(AllRawData.blue),\n    green: parseRawData(AllRawData.green),\n    orange: parseRawData(AllRawData.orange),\n    pink: parseRawData(AllRawData.pink),\n    violet: parseRawData(AllRawData.violet),\n    yellow: parseRawData(AllRawData.yellow),\n};\nexport const dataOptions: DataOption[] = Object.keys(AllData) as any;\n\nexport const DataSelectionOptions: Array<SelectOption<DataOption>> = dataOptions.map(\n    (key: DataOption): SelectOption<DataOption> => ({\n        label: AllData[key].label,\n        value: key,\n    })\n);\n","export const COLOR = {\n    O: '#d65c0c',\n    B: '#0f63ff',\n    G: '#03860b',\n    R: '#cd0b1b',\n    Y: '#ffdf10',\n};\n\nexport type Color = keyof typeof COLOR;\n","import React from 'react';\nimport { Color, COLOR } from './types';\nimport { Util } from '../../util/util';\n\ntype BoxProps = {\n    content?: string | number;\n    color?: Color;\n    customColor?: string;\n    borderColor?: string;\n    star?: boolean;\n    circled?: boolean;\n    crossed?: boolean;\n    onClick?: () => void;\n    flicker?: boolean;\n};\nexport const Box: React.FC<BoxProps> = ({\n    content,\n    color,\n    customColor,\n    circled,\n    crossed,\n    onClick,\n    star,\n    borderColor,\n    flicker,\n}) => (\n    <div>\n        <div className={Util.classNames('box box-bordered', flicker && 'box-flicker')} onClick={onClick}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\">\n                <rect\n                    x=\"0\"\n                    y=\"0\"\n                    width=\"50\"\n                    height=\"50\"\n                    rx=\"10\"\n                    ry=\"10\"\n                    fill={(color && COLOR[color]) || customColor || 'white'}\n                />\n                {borderColor && (\n                    <rect\n                        x=\"1\"\n                        y=\"1\"\n                        width=\"48\"\n                        height=\"48\"\n                        rx=\"10\"\n                        ry=\"10\"\n                        fill=\"none\"\n                        stroke={borderColor}\n                        strokeWidth=\"3\"\n                    />\n                )}\n                {star && <polygon points=\"25 5 32 20 45 20 35 28 42 45 25 35 8 45 15 28 2 20 18 20\" fill=\"white\" />}\n                {content !== undefined && (\n                    <text textAnchor=\"middle\" x=\"25\" y=\"35\" fontSize=\"30\">\n                        {content}\n                    </text>\n                )}\n                {circled && <circle cx=\"25\" cy=\"25\" r=\"23\" fill=\"none\" stroke=\"black\" strokeWidth=\"2\" />}\n                {crossed && (\n                    <g stroke=\"black\" strokeWidth=\"4\">\n                        <line x1=\"5\" y1=\"5\" x2=\"45\" y2=\"45\" />\n                        <line x1=\"5\" y1=\"45\" x2=\"45\" y2=\"5\" />\n                    </g>\n                )}\n            </svg>\n        </div>\n    </div>\n);\n","import React from 'react';\nimport { AgainStore } from './again-store';\nimport { Box } from './Box';\nimport { Util } from '../../util/util';\nimport { Color } from './types';\n\nconst blockColorPoints = (index: number) => () => AgainStore.blockColorPoints(index);\n\nexport const ColorList: Color[] = 'OBGRY'.split('') as any;\n\ntype ColorPointsProps = { colorPointsBlocked: boolean[]; completedColors: boolean[] };\nexport const ColorPoints: React.FC<ColorPointsProps> = ({ colorPointsBlocked, completedColors }) => (\n    <div className={Util.classNames('again-color-points')}>\n        <div className=\"again-color-points-1\">\n            {ColorList.map((color: any, index) => (\n                <Box\n                    key={index}\n                    content={5}\n                    color={color}\n                    crossed={colorPointsBlocked[index]}\n                    onClick={blockColorPoints(index)}\n                    circled={!colorPointsBlocked[index] && completedColors[index]}\n                />\n            ))}\n        </div>\n        <div className=\"again-color-points-2\">\n            {ColorList.map((color, index) => (\n                <Box\n                    key={index}\n                    content={3}\n                    color={color}\n                    circled={colorPointsBlocked[index] && completedColors[index]}\n                />\n            ))}\n        </div>\n    </div>\n);\n","import { Data } from './data';\nimport { AgainState, Chosen, TurnState, TurnType } from './again-store';\nimport { ColorList } from './ColorPoints';\nimport { Util } from '../../util/util';\n\nconst rowPoints1 = '533322212223335'.split('').map(Number);\nconst rowPoints2 = '322211101112223'.split('').map(Number);\n\nexport const getCompletedRows = (crossed: boolean[][]): boolean[] =>\n    crossed.map((row) => row.every((checked) => checked));\nexport const getCompletedColors = (crossed: boolean[][], gridData: Data): boolean[] =>\n    'OBGRY'\n        .split('')\n        .map((color) =>\n            crossed.every((row, index) =>\n                row.every((checked, boxIndex) => gridData.grid[index][boxIndex] !== color || checked)\n            )\n        );\n\nconst getTotalPoints = (\n    again: AgainState,\n    gridData: Data,\n    completedRows: boolean[],\n    completedColors: boolean[]\n): number => {\n    const { rowPointsBlocked, colorPointsBlocked, crossed, takenJokers } = again;\n    const rowPoints = Util.sum(\n        ...completedRows.map((completed, index) =>\n            !completed ? 0 : rowPointsBlocked[index] ? rowPoints2[index] : rowPoints1[index]\n        )\n    );\n    const colorPoints = Util.sum(\n        ...completedColors.map((completed, index) => (!completed ? 0 : colorPointsBlocked[index] ? 3 : 5))\n    );\n    const jokerPoints = -takenJokers;\n    const starPoints = Util.sum(...crossed.map((row, index) => (row[gridData.stars[index]] ? 2 : 0)));\n\n    return rowPoints + colorPoints + jokerPoints + starPoints;\n};\n\nexport const getClickable = (crossed: boolean[][], allowMiddle: boolean = true): boolean[][] =>\n    crossed.map((row, rowIndex) =>\n        row.map(\n            (checked, boxIndex) =>\n                !checked &&\n                ((allowMiddle && rowIndex === 7) || // is allowed middle row\n                (crossed[rowIndex - 1] || {})[boxIndex] || // left box is checked\n                (crossed[rowIndex + 1] || {})[boxIndex] || // right box is checked\n                row[boxIndex - 1] || // upper box is checked\n                    row[boxIndex + 1]) // below box is checked\n        )\n    );\n\ntype Calculation = { completedRows: boolean[]; completedColors: boolean[]; totalPoints: number };\n\nexport const calculate = (again: AgainState, gridData: Data): Calculation => {\n    const completedRows = getCompletedRows(again.crossed);\n    const completedColors = getCompletedColors(again.crossed, gridData);\n    const totalPoints = getTotalPoints(again, gridData, completedRows, completedColors);\n    return { completedRows, completedColors, totalPoints };\n};\n\nexport const calculateTurn = (\n    chosen: Chosen | null,\n    lastCrossed: boolean[][],\n    crossed: boolean[][],\n    gridData: Data,\n    lastIndex: number\n): TurnState => {\n    if (chosen) {\n        const completedRows = getCompletedRows(lastCrossed);\n        const nextCompletedRows = getCompletedRows(crossed);\n        const newCompletedRows = nextCompletedRows.map((row, index) => row && !completedRows[index]);\n\n        const nextCompletedColors = getCompletedColors(crossed, gridData);\n        const completedColors = getCompletedColors(lastCrossed, gridData);\n\n        const newCompletedColor = nextCompletedColors\n            .map((row, index) => row && !completedColors[index])\n            .findIndex(Boolean);\n        return {\n            type: TurnType.CHOSEN,\n            data: {\n                ...chosen,\n                completedRows: newCompletedRows,\n                completedColor: ColorList[newCompletedColor] as any,\n            },\n            index: lastIndex + 1,\n        };\n    }\n    return { type: TurnType.SKIP, index: lastIndex + 1 };\n};\n\nexport const getLastTurn = (turns: TurnState[]): TurnState | undefined => {\n    const turnsWithIndex = turns.filter((turn: any) => typeof turn.index === 'number');\n    return turnsWithIndex.length > 0 ? turnsWithIndex[turnsWithIndex.length - 1] : undefined;\n};\n","import { Globals } from '../globals';\n\n/**\n * The wrapped function will be called debounced with a certain specified delay.\n */\nconst debounced = <T extends (...arg: any[]) => void>(func: T, delay: number): T => {\n    let lastPending = 0;\n    return ((...args: any[]) => {\n        Globals.window().clearTimeout(lastPending);\n        lastPending = Globals.window().setTimeout(() => func(...args), delay);\n    }) as any;\n};\n\n/*\n * Hof is a shortcut for (Higher Order Function).\n */\nexport const HofUtil = { debounced };\n","import { useRef, useCallback } from 'react';\nimport { Globals } from '../globals';\nimport { useEventListener } from './useEventListener';\nimport { HofUtil } from '../util/hof-util';\n\ntype ResizeCallback = (width: number) => void;\n\nexport const useWindowResizeEffect = (cb: ResizeCallback) => {\n    const callbackRef = useRef<ResizeCallback>(cb);\n    callbackRef.current = cb;\n\n    const callback = useCallback(\n        HofUtil.debounced(() => {\n            callbackRef.current(Globals.window().innerWidth);\n        }, 10),\n        []\n    );\n\n    useEventListener('resize', callback);\n};\n","import { useCallback, useEffect, useRef } from 'react';\nimport { Globals } from '../globals';\n\nexport const useEventListener = <K extends keyof WindowEventMap>(\n    type: K,\n    listener: (ev: WindowEventMap[K]) => any,\n    // The event propagation through the DOM happens in two phases, the capture and the bubble phase.\n    // During the capture phase the event propagates from the window down to the clicked element.\n    // After that the event \"bubbles\" up again to the window. See https://javascript.info/bubbling-and-capturing for more details.\n    // As a default the bubble phase is used to trigger the event listener.\n    // If you want to use the capture phase set the following flag.\n    capture?: boolean\n) => {\n    const ref = useRef<typeof listener>(listener);\n    ref.current = listener;\n\n    const wrapped = useCallback<typeof listener>((e) => {\n        ref.current(e);\n    }, []);\n\n    useEffect(() => {\n        Globals.window().addEventListener(type, wrapped, capture);\n        return () => Globals.window().removeEventListener(type, wrapped, capture);\n    }, [type, capture]); // eslint-disable-line react-hooks/exhaustive-deps\n};\n","import { useWindowResizeEffect } from '../../hooks/useWindowResizeEffect';\nimport { useEffect } from 'react';\n\nconst OPTIMAL_HEIGHT_WIDTH_RATIO = 0.48;\nexport const RESIZE_CLASS = 'again-resize';\n\nconst calculateNecessaryPadding = (): number => {\n    const ratioDiscrepancy = OPTIMAL_HEIGHT_WIDTH_RATIO - (window.innerHeight - 48) / window.innerWidth;\n    return ratioDiscrepancy > 0 ? ratioDiscrepancy * window.innerWidth : 0;\n};\n\nconst applyPadding = () => {\n    const padding = calculateNecessaryPadding();\n    const paddingValue = padding ? `0 ${padding}px` : '';\n    Array.from(document.getElementsByClassName(RESIZE_CLASS)).forEach((elem) => {\n        (elem as HTMLElement).style.setProperty('padding', paddingValue);\n    });\n};\n\nexport const useAgainResize = () => {\n    useEffect(applyPadding, []);\n    useWindowResizeEffect(applyPadding);\n};\n","import React from 'react';\nimport { Box } from './Box';\nimport { Util } from '../../util/util';\nimport { RESIZE_CLASS } from './again-resize';\n\nexport const allLetters = 'ABCDEFGHIJKLMNO'.split('');\n\nexport const Letters: React.FC = () => (\n    <div className={Util.classNames('again-letters', RESIZE_CLASS)}>\n        {allLetters.map((letter, index) => (\n            <Box key={index} content={letter} />\n        ))}\n    </div>\n);\n","import React, { ReactNode } from 'react';\nimport { AgainStore } from './again-store';\nimport { Util } from '../../util/util';\n\nconst BoxWrapper: React.FC<{ children: ReactNode; onClick?: () => void }> = ({ children, onClick }) => (\n    <div>\n        <div className=\"box\" onClick={onClick}>\n            {children}\n        </div>\n    </div>\n);\n\nconst NumberJoker: React.FC = () => (\n    <BoxWrapper>\n        <svg viewBox=\"0 0 50 50\">\n            <rect x=\"0\" y=\"0\" width=\"50\" height=\"50\" rx=\"10\" ry=\"10\" fill=\"black\" />\n            <text textAnchor=\"middle\" x=\"25\" y=\"38\" fontSize=\"40\" fontWeight=\"900\" fill=\"white\">\n                ?\n            </text>\n        </svg>\n    </BoxWrapper>\n);\n\nconst ColorJoker: React.FC = () => (\n    <BoxWrapper>\n        <svg viewBox=\"0 0 50 50\">\n            <rect x=\"0\" y=\"0\" width=\"50\" height=\"50\" rx=\"10\" ry=\"10\" fill=\"black\" />\n            <g stroke=\"white\" strokeWidth=\"10\">\n                <line x1=\"10\" y1=\"10\" x2=\"40\" y2=\"40\" />\n                <line x1=\"10\" y1=\"40\" x2=\"40\" y2=\"10\" />\n            </g>\n        </svg>\n    </BoxWrapper>\n);\n\nconst JokerSeparator: React.FC = () => (\n    <BoxWrapper>\n        <svg viewBox=\"0 0 50 50\">\n            <line x1=\"15\" y1=\"45\" x2=\"35\" y2=\"5\" stroke=\"black\" strokeWidth=\"10\" />\n        </svg>\n    </BoxWrapper>\n);\n\nconst EqualSign: React.FC = () => (\n    <BoxWrapper>\n        <svg viewBox=\"0 0 50 50\">\n            <line x1=\"10\" y1=\"20\" x2=\"40\" y2=\"20\" stroke=\"black\" strokeWidth=\"7\" />\n            <line x1=\"10\" y1=\"30\" x2=\"40\" y2=\"30\" stroke=\"black\" strokeWidth=\"7\" />\n        </svg>\n    </BoxWrapper>\n);\n\nexport const JokerPlaceholder: React.FC<{ taken: boolean; onClick?: () => void }> = ({ taken, onClick }) => (\n    <BoxWrapper onClick={onClick}>\n        <svg viewBox=\"0 0 50 50\">\n            <circle cx=\"25\" cy=\"25\" r=\"23\" fill=\"white\" stroke=\"black\" strokeWidth=\"2\" />\n            <text textAnchor=\"middle\" x=\"25\" y=\"38\" fontSize=\"40\" fontWeight=\"900\">\n                !\n            </text>\n            {taken && (\n                <g stroke=\"black\" strokeWidth=\"4\">\n                    <line x1=\"7\" y1=\"7\" x2=\"43\" y2=\"43\" />\n                    <line x1=\"7\" y1=\"43\" x2=\"43\" y2=\"7\" />\n                </g>\n            )}\n        </svg>\n    </BoxWrapper>\n);\n\ntype JokersProps = { takenJokers: number };\nexport const Jokers: React.FC<JokersProps> = ({ takenJokers }) => (\n    <div className=\"again-jokers\">\n        <NumberJoker />\n        <JokerSeparator />\n        <ColorJoker />\n        <EqualSign />\n        {Util.array(8).map((_, index) => (\n            <JokerPlaceholder\n                onClick={index === takenJokers ? AgainStore.takeJoker : undefined}\n                key={index}\n                taken={index < takenJokers}\n            />\n        ))}\n    </div>\n);\n","import React from 'react';\nimport { AgainStore, TurnState, TurnType } from './again-store';\nimport { Box } from './Box';\nimport { Util } from '../../util/util';\nimport { RESIZE_CLASS } from './again-resize';\n\nconst rowPoints1 = '533322212223335'.split('').map(Number);\nconst rowPoints2 = '322211101112223'.split('').map(Number);\n\nconst blockRowPoints = (index: number) => () => AgainStore.blockRowPoints(index);\n\nexport const rowWasCompleted = (index: number, lastTurn?: TurnState): boolean =>\n    Boolean(\n        lastTurn &&\n            lastTurn.type === TurnType.CHOSEN &&\n            lastTurn.data.completedRows &&\n            lastTurn.data.completedRows[index]\n    );\n\nconst COMPLETED = '#5eee61';\n\ntype RowPointsProps = { rowPointsBlocked: boolean[]; completedRows: boolean[]; lastTurn?: TurnState };\nexport const RowPoints: React.FC<RowPointsProps> = ({ rowPointsBlocked, completedRows, lastTurn }) => (\n    <div className={Util.classNames('again-row-points', RESIZE_CLASS)}>\n        <div className=\"again-row-points-1\">\n            {rowPoints1.map((num, index) => (\n                <Box\n                    key={index}\n                    content={num}\n                    crossed={rowPointsBlocked[index]}\n                    onClick={rowPointsBlocked[index] ? undefined : blockRowPoints(index)}\n                    circled={!rowPointsBlocked[index] && completedRows[index]}\n                    customColor={!rowPointsBlocked[index] && rowWasCompleted(index, lastTurn) ? COMPLETED : undefined}\n                />\n            ))}\n        </div>\n        <div className=\"again-row-points-2\">\n            {rowPoints2.map((num, index) => (\n                <Box\n                    key={index}\n                    content={num}\n                    circled={rowPointsBlocked[index] && completedRows[index]}\n                    customColor={rowPointsBlocked[index] && rowWasCompleted(index, lastTurn) ? COMPLETED : undefined}\n                />\n            ))}\n        </div>\n    </div>\n);\n","import React, { useCallback } from 'react';\nimport { Color } from './types';\nimport { Box } from './Box';\nimport { Data } from './data';\nimport { Util } from '../../util/util';\nimport { TurnState } from './again-store';\nimport { RESIZE_CLASS } from './again-resize';\nimport { rowWasCompleted } from './RowPoints';\n\ntype GridProps = {\n    gridData: Data;\n    crossed: boolean[][];\n    clickable: boolean[][];\n    onCross: (boxIndex: number, rowIndex: number) => void;\n    lastTurn?: TurnState;\n};\n\nexport const Grid: React.FC<GridProps> = ({ gridData, crossed, clickable, lastTurn, onCross }) => {\n    const onClickHandler = useCallback((boxIndex: number, rowIndex: number) => () => onCross(boxIndex, rowIndex), [\n        onCross,\n    ]);\n    return (\n        <div className={Util.classNames('again-grid', RESIZE_CLASS)}>\n            {gridData.grid.map((row: Color[], rowIndex: number) => (\n                <div\n                    className={Util.classNames('again-row', rowWasCompleted(rowIndex, lastTurn) && 'row-alert')}\n                    key={rowIndex}>\n                    {row.map((color, boxIndex) => {\n                        const starPosition = gridData.stars[rowIndex];\n                        const crossedRow = crossed[rowIndex];\n                        const isMiddleRow = rowIndex === 7;\n                        const isClickable = clickable[rowIndex][boxIndex];\n\n                        return (\n                            <Box\n                                onClick={isClickable ? onClickHandler(boxIndex, rowIndex) : undefined}\n                                key={boxIndex}\n                                color={color}\n                                star={starPosition === boxIndex}\n                                crossed={crossedRow[boxIndex]}\n                                borderColor={isMiddleRow ? 'white' : 'black'}\n                            />\n                        );\n                    })}\n                </div>\n            ))}\n        </div>\n    );\n};\n","import React from 'react';\nimport { Color, COLOR } from './types';\n\nconst VALUE_SVG = [\n    <text x=\"110\" y=\"420\" fontSize=\"500\" key=\"0\">\n        ?\n    </text>,\n    <circle cx=\"250\" cy=\"250\" r=\"50\" fill=\"black\" key=\"1\" />,\n    <g fill=\"black\" key=\"2\">\n        <circle cx=\"125\" cy=\"375\" r=\"50\" />\n        <circle cx=\"375\" cy=\"125\" r=\"50\" />\n    </g>,\n    <g fill=\"black\" key=\"3\">\n        <circle cx=\"125\" cy=\"375\" r=\"50\" />\n        <circle cx=\"250\" cy=\"250\" r=\"50\" />\n        <circle cx=\"375\" cy=\"125\" r=\"50\" />\n    </g>,\n    <g fill=\"black\" key=\"4\">\n        <circle cx=\"125\" cy=\"375\" r=\"50\" />\n        <circle cx=\"125\" cy=\"125\" r=\"50\" />\n        <circle cx=\"375\" cy=\"375\" r=\"50\" />\n        <circle cx=\"375\" cy=\"125\" r=\"50\" />\n    </g>,\n    <g fill=\"black\" key=\"5\">\n        <circle cx=\"125\" cy=\"375\" r=\"50\" />\n        <circle cx=\"125\" cy=\"125\" r=\"50\" />\n        <circle cx=\"250\" cy=\"250\" r=\"50\" />\n        <circle cx=\"375\" cy=\"375\" r=\"50\" />\n        <circle cx=\"375\" cy=\"125\" r=\"50\" />\n    </g>,\n    <g fill=\"black\" key=\"6\">\n        <circle cx=\"125\" cy=\"400\" r=\"50\" />\n        <circle cx=\"125\" cy=\"250\" r=\"50\" />\n        <circle cx=\"125\" cy=\"100\" r=\"50\" />\n        <circle cx=\"375\" cy=\"400\" r=\"50\" />\n        <circle cx=\"375\" cy=\"250\" r=\"50\" />\n        <circle cx=\"375\" cy=\"100\" r=\"50\" />\n    </g>,\n];\n\ntype CubeProps = { count?: number; color?: Color };\n\nexport const Cube: React.FC<CubeProps> = ({ count, color }) => {\n    const innerValue = count !== undefined ? VALUE_SVG[count] : undefined;\n\n    return (\n        <div className=\"cube\">\n            <svg className=\"icon\" viewBox=\"0 0 500 500\">\n                <rect x=\"0\" y=\"0\" width=\"500\" height=\"500\" rx=\"100\" ry=\"100\" fill=\"white\" />\n                {innerValue || (\n                    <g stroke={(color && COLOR[color]) || 'black'} strokeWidth=\"100\">\n                        <line x1=\"80\" y1=\"80\" x2=\"420\" y2=\"420\" />\n                        <line x1=\"80\" y1=\"420\" x2=\"420\" y2=\"80\" />\n                    </g>\n                )}\n            </svg>\n        </div>\n    );\n};\n","import React, { ReactNode, ReactNodeArray, useCallback, useEffect, useState } from 'react';\nimport { Icon } from '../components/icons/icon';\nimport { __, Message } from 'first-intl';\nimport { ClientHistory } from '../globals';\nimport { Util } from '../util/util';\n\nexport type FooterButtonProps = {\n    onClick?: () => void;\n    description?: Message;\n    children: ReactNode;\n    className?: string;\n};\n\nexport const FooterButton: React.FC<FooterButtonProps> = ({ onClick, description, children, className }) => (\n    <div className={Util.classNames('footer-action', className, !onClick && 'no-handler')} onClick={onClick}>\n        {children}\n        {description && <div className=\"small\">{__(description)}</div>}\n    </div>\n);\n\nconst FooterHome: React.FC = () => (\n    <FooterButton onClick={ClientHistory.back} description=\"APP.home\">\n        <Icon.Home />\n    </FooterButton>\n);\n\nconst applyFooterHeight = (open: boolean) =>\n    document.getElementById('root')!.style.setProperty('--footer-height', open ? '3rem' : '0px');\n\ntype FooterProps = {\n    expandable?: boolean;\n    hideHome?: boolean;\n    className?: string;\n    children?: ReactNodeArray | ReactNode;\n};\n\nexport const Footer: React.FC<FooterProps> = ({ children, expandable, hideHome, className }) => {\n    const [open, setOpen] = useState(true);\n    const toggle = useCallback(() => setOpen((o) => !o), []);\n\n    useEffect(() => {\n        if (!expandable) setOpen(true);\n    }, [expandable]);\n\n    useEffect(() => {\n        applyFooterHeight(open);\n    }, [open]);\n\n    useEffect(() => () => applyFooterHeight(false), []);\n\n    if (!open)\n        return (\n            <footer className={className}>\n                <div className=\"footer-handle closed\" onClick={toggle}>\n                    <Icon.ChevronUp />\n                </div>\n            </footer>\n        );\n\n    return (\n        <footer className={className}>\n            {expandable && (\n                <div className=\"footer-handle\" onClick={toggle}>\n                    <Icon.ChevronDown />\n                </div>\n            )}\n            <div className=\"footer-border\" />\n            <nav>\n                <div className=\"footer-actions\">\n                    {hideHome || <FooterHome />}\n                    {children}\n                </div>\n            </nav>\n        </footer>\n    );\n};\n","import React from 'react';\nimport { Cube } from './Cube';\nimport { Icon } from '../../components/icons/icon';\nimport { Box } from './Box';\nimport { allLetters } from './Letters';\nimport { AgainStore, Chosen, ChosenTurn, TurnState, TurnType } from './again-store';\nimport { __ } from 'first-intl';\nimport { Footer, FooterButton } from '../../footer/Footer';\nimport { JokerPlaceholder } from './Jokers';\n\nexport const Abort = () => (\n    <svg className=\"icon\" viewBox=\"0 0 500 500\">\n        <g stroke=\"red\" strokeWidth=\"100\">\n            <line x1=\"80\" y1=\"80\" x2=\"420\" y2=\"420\" />\n            <line x1=\"80\" y1=\"420\" x2=\"420\" y2=\"80\" />\n        </g>\n    </svg>\n);\n\nexport const Finish = () => (\n    <svg className=\"icon\" viewBox=\"0 0 500 500\">\n        <g stroke=\"darkgreen\" strokeWidth=\"100\">\n            <line x1=\"70\" y1=\"180\" x2=\"262\" y2=\"347\" />\n            <line x1=\"220\" y1=\"320\" x2=\"420\" y2=\"80\" />\n        </g>\n    </svg>\n);\n\nconst SkipTurn: React.FC = () => (\n    <>\n        <Icon.Ban className=\"cube\" />\n    </>\n);\n\ntype ChosenTurnDisplayProps = { chosen: ChosenTurn };\nconst ChosenTurnDisplay: React.FC<ChosenTurnDisplayProps> = ({ chosen: { count, color } }) => (\n    <>\n        <Cube count={count} />\n        <Cube color={color} />\n    </>\n);\n\ntype FooterTurnControlProps = { chosen: Chosen };\nexport const FooterTurnControl: React.FC<FooterTurnControlProps> = ({ chosen }) => (\n    <Footer hideHome className=\"turn-control top\">\n        <FooterButton onClick={AgainStore.onAbort}>\n            <Abort />\n        </FooterButton>\n        <FooterButton className=\"turn\">\n            <ChosenTurnDisplay chosen={chosen} />\n        </FooterButton>\n        <FooterButton onClick={AgainStore.onFinish}>\n            <Finish />\n        </FooterButton>\n    </Footer>\n);\n\nconst Success: React.FC<{ chosen: ChosenTurn }> = ({ chosen: { completedColor, completedRows } }) => {\n    const completed = [];\n    if (completedColor) completed.push(<Cube color={completedColor} key=\"color\" />);\n    if (completedRows)\n        completedRows.forEach((isCompleted, index) => {\n            if (isCompleted) completed.push(<Box content={allLetters[index]} key={index} />);\n        });\n    return completed.length > 0 ? (\n        <>\n            <Icon.ArrowRight className=\"success-arrow\" />\n            {completed}\n        </>\n    ) : null;\n};\n\nexport const Turn: React.FC<{ turn: TurnState; hideIndex?: boolean }> = ({ turn, hideIndex }) => {\n    switch (turn.type) {\n        case TurnType.CHOSEN:\n            return (\n                <div className=\"again-turn\">\n                    {hideIndex || `${turn.index}) `}\n                    <div className=\"turn-chosen\">\n                        <ChosenTurnDisplay chosen={turn.data} />\n                    </div>\n                    {hideIndex || (\n                        <div className=\"turn-success\">\n                            <Success chosen={turn.data} />\n                        </div>\n                    )}\n                </div>\n            );\n        case TurnType.SKIP:\n            return (\n                <div className=\"again-turn\">\n                    {hideIndex || `${turn.index}) `}\n                    <div className=\"turn-chosen\">\n                        <SkipTurn />\n                    </div>\n                </div>\n            );\n        case TurnType.JOKER:\n            return (\n                <div className=\"again-pseudo-turn\">\n                    <JokerPlaceholder taken />\n                </div>\n            );\n        case TurnType.COLOR:\n            return (\n                <div className=\"again-pseudo-turn\">\n                    <Box color={turn.data} crossed />\n                </div>\n            );\n        case TurnType.ROW:\n            return (\n                <div className=\"again-pseudo-turn\">\n                    <Box content={turn.data} crossed />\n                </div>\n            );\n    }\n};\n\ntype TurnsProps = { turns: TurnState[] };\nexport const Turns = ({ turns }: TurnsProps) => (\n    <div className=\"again-turns\">\n        <h4>{__('AGAIN.madeTurns')}</h4>\n        {turns.map((turn, index) => (\n            <Turn turn={turn} key={index} />\n        ))}\n    </div>\n);\n","import React from 'react';\nimport { Turn } from './Turn';\nimport { TurnState } from './again-store';\nimport { __ } from 'first-intl';\n\ntype TotalProps = { totalPoints: number; lastTurn?: TurnState };\nexport const Total: React.FC<TotalProps> = ({ totalPoints, lastTurn }) => (\n    <div className=\"again-total\">\n        {__('AGAIN.points')}\n        <div className=\"again-total-points\">{totalPoints}</div>\n        {lastTurn && (\n            <div className=\"again-last-turn\">\n                {__('AGAIN.lastTurn')}\n                <Turn hideIndex turn={lastTurn} />\n            </div>\n        )}\n    </div>\n);\n","import React from 'react';\nimport { Color } from './types';\nimport { Cube } from './Cube';\nimport { __ } from 'first-intl';\n\ntype CompletionPopupProps = { color: Color; onClose: () => void };\n\nexport const CompletionPopup = ({ color, onClose }: CompletionPopupProps) => (\n    <div className=\"again-popup\" onClick={onClose}>\n        <div className=\"popup-overlay\" />\n        <div className=\"popup-content\">\n            {__('AGAIN.color.finished')}\n            <Cube color={color} />\n        </div>\n    </div>\n);\n","import React, { ReactNode, useEffect } from 'react';\nimport { Abort, Finish } from './Turn';\nimport { Icon } from '../../components/icons/icon';\nimport { AgainStore, SplashIconType, useAgainSub } from './again-store';\n\nconst renderIcon = (iconType: SplashIconType | null): ReactNode => {\n    if (!iconType) return null;\n    switch (iconType) {\n        case 'cancel':\n            return <Abort />;\n        case 'submit':\n            return <Finish />;\n        case 'undo':\n            return <Icon.Undo className=\"reflect\" />;\n        case 'skip':\n            return <Icon.Ban />;\n        default:\n            return null;\n    }\n};\n\nconst hide = () => AgainStore.setSplash(null);\n\nexport const ActionSplash: React.FC = () => {\n    const { icon } = useAgainSub(({ againSplash }) => ({ icon: againSplash }));\n\n    useEffect(\n        () => () => {\n            window.setTimeout(hide, 500);\n        },\n        [icon]\n    );\n\n    const iconView = renderIcon(icon);\n\n    if (!iconView) return null;\n\n    return (\n        <div className=\"again-splash\">\n            <div className=\"splash-overlay\" />\n            <div className=\"splash-content\">{iconView}</div>\n        </div>\n    );\n};\n","import React from 'react';\nimport { AgainStore, useAgainSub } from './again-store';\nimport { Data } from './data';\nimport { Jokers } from './Jokers';\nimport { Grid } from './Grid';\nimport { Letters } from './Letters';\nimport { calculate, getClickable, getLastTurn } from './again-logic';\nimport { RowPoints } from './RowPoints';\nimport { ColorPoints } from './ColorPoints';\nimport { Total } from './Total';\nimport { Turns } from './Turn';\nimport { CompletionPopup } from './CompletionPopup';\nimport { ActionSplash } from './ActionSplash';\nimport { useAgainResize } from './again-resize';\n\nexport const AgainStarted: React.FC<{ gridData: Data }> = ({ gridData }) => {\n    useAgainResize();\n    const { again, againSplash, againStarted } = useAgainSub(({ again, againSplash, againStarted }) => ({\n        again,\n        againSplash,\n        againStarted,\n    }));\n    const { crossed, chosen, turnCrossed, completedColor } = againStarted;\n\n    const { rowPointsBlocked, colorPointsBlocked, takenJokers, turns } = again;\n    const { completedRows, completedColors, totalPoints } = calculate(again, gridData);\n    const { backgroundColor } = gridData;\n    const clickable = chosen ? getClickable(turnCrossed, false) : getClickable(crossed);\n    const lastTurn = getLastTurn(turns);\n\n    return (\n        <div className=\"again\" style={{ backgroundColor }}>\n            <ActionSplash />\n            {completedColor && !againSplash && (\n                <CompletionPopup color={completedColor} onClose={AgainStore.onClosePopup} />\n            )}\n            <div className=\"again-inner\">\n                <Grid\n                    gridData={gridData}\n                    crossed={crossed}\n                    clickable={clickable}\n                    onCross={AgainStore.onCross}\n                    lastTurn={lastTurn}\n                />\n                <Letters />\n                <RowPoints rowPointsBlocked={rowPointsBlocked} completedRows={completedRows} lastTurn={lastTurn} />\n                <Jokers takenJokers={takenJokers} />\n                <ColorPoints colorPointsBlocked={colorPointsBlocked} completedColors={completedColors} />\n                <Total totalPoints={totalPoints} lastTurn={lastTurn} />\n                <Turns turns={turns} />\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport { __, Message } from 'first-intl';\n\nexport const DisplayError: React.FC<{ error: Message }> = ({ error }) => (\n    <span className=\"invalid-feedback\">{__(error)}</span>\n);\n","type Event = { preventDefault: Function; target: { value: any } };\ntype EventHandler = (event: Event) => void;\n\ntype CustomInputHandling = { preventDefault?: boolean };\n\nconst inputHandler = (\n    cb: (_: any) => unknown | void,\n    { preventDefault = true }: CustomInputHandling = {}\n): EventHandler => (event) => {\n    if (preventDefault) event.preventDefault();\n    const original = event.target.value;\n    cb(original);\n};\n\nconst preventDefault = (event: any) => event.preventDefault();\n\nexport const EventUtil = { inputHandler, preventDefault };\n","import React, { ReactElement } from 'react';\nimport { __, __string, Message, StringMessage } from 'first-intl';\nimport { DisplayError } from './DisplayError';\nimport { ErrorMessage, iField } from 'morfi';\nimport { Util } from '../../util/util';\nimport { EventUtil } from '../../util/event-util';\n\nexport type SelectOption<T> = { label: StringMessage | string; value: T };\n\ntype SelectHandler<T> = (value: T) => void;\n\ntype CommonSelectProps<T> = {\n    name?: string;\n    label?: Message;\n    className?: string;\n    options: ReadonlyArray<SelectOption<T>>;\n    disabled?: boolean;\n    serialize?: (value: T) => string;\n};\n\ntype SelectProps<T> = {\n    required?: boolean;\n    onChange?: SelectHandler<T>;\n    onBlur?: SelectHandler<T>;\n    value: T;\n    error?: ErrorMessage;\n} & CommonSelectProps<T>;\n\n/**\n * ATTENTION: Since react v16.6 you have to supply strings or numbers within <option> tags.\n *            So you should not use any placeholders inside the messages you use as\n *            label for the select options.\n */\nconst Option: React.FC<{ label: StringMessage; value: string }> = ({ label, value }) => (\n    <option value={value}>{__string(label)}</option>\n);\n\ntype GetOptionValues = <T>(options: ReadonlyArray<SelectOption<T>>, serialize?: (value: T) => string) => string[];\nconst getOptionValues: GetOptionValues = (options, serialize) => {\n    const values = options.map((o) => o.value);\n    return serialize\n        ? values.map(serialize)\n        : values.map((v, i) => (v === undefined ? '' : typeof v === 'string' ? v : String(i)));\n};\n\nexport const Select: <T>(p: SelectProps<T>) => ReactElement = ({\n    value,\n    serialize,\n    label,\n    error,\n    required,\n    className,\n    onChange,\n    onBlur,\n    options,\n    disabled,\n    name,\n}) => {\n    const optionValues = getOptionValues(options, serialize);\n    const handlerRemapped = (handler?: typeof onChange) => (optionValue: string) =>\n        handler && handler(options[optionValues.indexOf(optionValue)].value);\n    const currentValue = options.find((option) => option.value === value);\n    const currentIndex = currentValue ? options.indexOf(currentValue) : 0;\n\n    return (\n        <div\n            className={Util.classNames(\n                className,\n                required && 'required',\n                !value && 'unselected',\n                error && 'has-error'\n            )}>\n            {label && <label>{__(label)}</label>}\n            <select\n                className=\"custom-select\"\n                name={name}\n                disabled={disabled}\n                onChange={EventUtil.inputHandler(handlerRemapped(onChange))}\n                onBlur={EventUtil.inputHandler(handlerRemapped(onBlur))}\n                value={optionValues[currentIndex]}>\n                {options.map((option, index: number) => (\n                    <Option label={option.label} value={optionValues[index]} key={index} />\n                ))}\n            </select>\n            {error && <DisplayError error={error} />}\n        </div>\n    );\n};\n\ntype FormSelectProps<T> = { Field: iField<T> } & CommonSelectProps<T>;\n\nexport const FormSelect: <T>(p: FormSelectProps<T>) => React.ReactElement<FormSelectProps<T>> = ({\n    Field,\n    className = 'form-control',\n    ...rest\n}) => (\n    <Field>\n        {({ onChange, onBlur, required, value, error }) => (\n            <Select {...{ value, error, required, onBlur, onChange, className }} {...rest} />\n        )}\n    </Field>\n);\n","import React from 'react';\nimport { DataOption, DataSelectionOptions } from './data';\nimport { AgainStore } from './again-store';\nimport { Select, SelectOption } from '../../components/form/select';\n\nconst placeHolderOption = { label: 'AGAIN.color.choose', value: undefined };\nconst randomOption = { label: 'AGAIN.color.random', value: 'random' as DataOption };\nconst onSelect = (option?: DataOption | 'random') => option && AgainStore.chooseData(option);\n\nconst OptionsWithRandom: SelectOption<DataOption | undefined>[] = [\n    placeHolderOption,\n    ...DataSelectionOptions,\n    randomOption,\n];\n\nexport const DataSelection: React.FC = () => (\n    <div className=\"again-selection\">\n        <Select options={OptionsWithRandom} onChange={onSelect} value={undefined} />\n    </div>\n);\n","import React, { Component, ReactNode } from 'react';\nimport { __ } from 'first-intl';\n\ntype ErrorBoundaryProps = { fix: () => void; children: ReactNode };\ntype ErrorBoundaryState = { hasError: boolean };\n\nexport class ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    state: ErrorBoundaryState = { hasError: false };\n\n    static getDerivedStateFromError = (): ErrorBoundaryState => ({ hasError: true });\n\n    render() {\n        const { hasError } = this.state;\n        const { children, fix } = this.props;\n\n        if (hasError) {\n            return (\n                <div className=\"game-error\">\n                    <h2>{__('error.boundary.unexpected')}</h2>\n                    <p>{__('error.boundary.sorry')}</p>\n                    <button type=\"button\" onClick={fix}>\n                        {__('error.boundary.fix')}\n                    </button>\n                </div>\n            );\n        }\n        return children;\n    }\n}\n","import React from 'react';\nimport { Icon } from '../components/icons/icon';\nimport { FooterButton } from './Footer';\n\nexport type FooterUndoProps = { onClick: () => void };\n\nexport const FooterUndo: React.FC<FooterUndoProps> = ({ onClick }) => (\n    <FooterButton onClick={onClick} description=\"APP.undo\">\n        <Icon.Undo className=\"reflect\" />\n    </FooterButton>\n);\n","export enum Color {\n    YELLOW = '#b18e05',\n    BLUE = '#1313b1',\n    BLACK = '#000',\n    GREEN = '#054800',\n    ORANGE = '#b85409',\n    PURPLE = '#390257',\n}\n\nexport const CROSS = '✘';\n\nexport enum BONUS {\n    FOX = 'FOX',\n    PLUS_1 = 'PLUS_1',\n    REFRESH = 'REFRESH',\n    YELLOW = 'YELLOW',\n    YELLOW_10 = 'YELLOW_10',\n    YELLOW_14 = 'YELLOW_14',\n    YELLOW_16 = 'YELLOW_16',\n    YELLOW_20 = 'YELLOW_20',\n    BLUE = 'BLUE',\n    GREEN = 'GREEN',\n    ORANGE_4 = 'ORANGE_4',\n    ORANGE_5 = 'ORANGE_5',\n    ORANGE_6 = 'ORANGE_6',\n    PURPLE = 'PURPLE',\n    ULTIMATE = 'ULTIMATE',\n}\n\nconst orangeFactors = [1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 3];\n\nexport const Data = {\n    [Color.YELLOW]: {\n        contents: [3, 6, 5, CROSS, 2, 1, CROSS, 5, 1, CROSS, 2, 4, CROSS, 3, 4, 6],\n        rowBonus: [BONUS.BLUE, BONUS.ORANGE_4, BONUS.GREEN, BONUS.FOX],\n        columnBonus: [BONUS.YELLOW_10, BONUS.YELLOW_14, BONUS.YELLOW_16, BONUS.YELLOW_20, BONUS.PLUS_1],\n    },\n    [Color.BLUE]: {\n        contents: [CROSS, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],\n        points: [0, 1, 2, 4, 7, 11, 16, 22, 29, 37, 46, 56],\n        rowBonus: [BONUS.ORANGE_5, BONUS.YELLOW, BONUS.FOX],\n        columnBonus: [BONUS.REFRESH, BONUS.GREEN, BONUS.PURPLE, BONUS.PLUS_1],\n    },\n    [Color.GREEN]: {\n        contents: [1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 6],\n        points: [1, 3, 6, 10, 15, 21, 28, 36, 45, 55, 66],\n        bonus: [\n            undefined,\n            undefined,\n            undefined,\n            BONUS.PLUS_1,\n            undefined,\n            BONUS.BLUE,\n            BONUS.FOX,\n            undefined,\n            BONUS.PURPLE,\n            BONUS.REFRESH,\n            undefined,\n        ],\n    },\n    [Color.ORANGE]: {\n        factors: orangeFactors,\n        contents: orangeFactors.map((f) => (f > 1 ? `x${f}` : '')),\n        bonus: [\n            undefined,\n            undefined,\n            BONUS.REFRESH,\n            undefined,\n            BONUS.YELLOW,\n            BONUS.PLUS_1,\n            undefined,\n            BONUS.FOX,\n            undefined,\n            BONUS.PURPLE,\n            undefined,\n        ],\n    },\n    [Color.PURPLE]: {\n        contents: ['', '', '', '', '', '', '', '', '', '', ''],\n        bonus: [\n            undefined,\n            undefined,\n            BONUS.REFRESH,\n            BONUS.BLUE,\n            BONUS.PLUS_1,\n            BONUS.YELLOW,\n            BONUS.FOX,\n            BONUS.REFRESH,\n            BONUS.GREEN,\n            BONUS.ORANGE_6,\n            BONUS.PLUS_1,\n        ],\n    },\n};\n","import React from 'react';\nimport { Icon } from '../components/icons/icon';\nimport { FooterButton } from './Footer';\n\nexport type FooterRestartProps = { onClick: () => void };\n\nexport const FooterRestart: React.FC<FooterRestartProps> = ({ onClick }) => (\n    <FooterButton onClick={onClick} description=\"APP.restart\">\n        <Icon.PowerOff />\n    </FooterButton>\n);\n","import React from 'react';\nimport { AgainStarted } from './AgainStarted';\nimport { DataSelection } from './DataSelection';\nimport { ErrorBoundary } from '../../components/ErrorBoundary';\nimport { AgainStore, useAgainSub } from './again-store';\nimport { Footer, FooterButton } from '../../footer/Footer';\nimport { FooterUndo } from '../../footer/FooterUndo';\nimport { FooterRestart } from '../../footer/FooterRestart';\nimport { Icon } from '../../components/icons/icon';\nimport { FooterTurnControl } from './Turn';\n\nconst FooterStarted = () => (\n    <Footer className=\"top\">\n        <FooterUndo onClick={AgainStore.undo} />\n        <FooterRestart onClick={AgainStore.restart} />\n        <FooterButton onClick={AgainStore.onFinish} description=\"APP.skip\">\n            <Icon.Forward />\n        </FooterButton>\n    </Footer>\n);\n\nexport const Again: React.FC = () => {\n    const { againData, chosen } = useAgainSub(({ againData, againStarted: { chosen } }) => ({ againData, chosen }));\n    if (!againData)\n        return (\n            <>\n                <DataSelection />\n                <Footer>\n                    <FooterUndo onClick={AgainStore.undo} />\n                </Footer>\n            </>\n        );\n    return (\n        <ErrorBoundary fix={AgainStore.restart}>\n            <>\n                {chosen ? <FooterTurnControl chosen={chosen} /> : <FooterStarted />}\n                <AgainStarted gridData={againData} />\n            </>\n        </ErrorBoundary>\n    );\n};\n","import React, { Component } from 'react';\nimport { Globals } from '../globals';\n\nconst missions = [\n    {\n        title: 'Save the world',\n        text:\n            'Did you never think about saving the world? You can do it. Just follow the given instructions...' +\n            'You need to modify your attitude. You have to become more optimistic and you should... bla blub foo bar',\n    },\n    {\n        title: 'Marry her',\n        text: 'It is finally the time. Get the ring. Make the first step and perform your show to win her heart <3',\n    },\n    {\n        title: 'Punch a bear',\n        text:\n            \"Yes. I'm serious. You should punch some big bear into his stomach. But possible you should first \" +\n            'think about a good plan to get away again - as fast as possible :{',\n    },\n];\n\nexport class MissionControl extends Component<{}, { processed: number; selected: number }> {\n    state = { processed: 0, selected: 0 };\n    interval = 0;\n\n    processNextLetter = () => {\n        const current = this.state.processed;\n        if (current === missions[this.state.selected].text.length) Globals.window().clearInterval(this.interval);\n        this.setState({ processed: current + 1 });\n    };\n\n    componentDidMount() {\n        this.runLetters();\n    }\n\n    runLetters = () => (this.interval = Globals.window().setInterval(this.processNextLetter, 50));\n\n    select = (mission: number) => () => {\n        Globals.window().clearInterval(this.interval);\n        this.setState({ processed: 0, selected: mission });\n        this.runLetters();\n    };\n\n    componentWillUnmount() {\n        Globals.window().clearInterval(this.interval);\n    }\n\n    render() {\n        return (\n            <div className=\"mission-control\">\n                <div className=\"mission-content\">\n                    <div className=\"mission-list\">\n                        <ul>\n                            {missions.map((m, i) => {\n                                const isSelected = this.state.selected === i;\n                                const className = isSelected ? 'selected' : undefined;\n                                const handler = isSelected ? undefined : this.select(i);\n                                return (\n                                    <li key={i} onClick={handler} className={className}>\n                                        {m.title}\n                                    </li>\n                                );\n                            })}\n                        </ul>\n                    </div>\n                    <div className=\"mission-desc\">\n                        {missions[this.state.selected].text.substring(0, this.state.processed)}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { FocusEventHandler } from 'react';\nimport { ErrorMessage, iField } from 'morfi';\nimport { __, __string, Message, StringMessage } from 'first-intl';\nimport { DisplayError } from './DisplayError';\nimport { EventUtil } from '../../util/event-util';\nimport { Util } from '../../util/util';\n\nexport type AbstractRef<T> = { current: null | T };\nexport type InputRef = AbstractRef<HTMLInputElement>;\n\nexport type InputType = 'text' | 'number' | 'password' | 'email';\n\ntype InputHandler = (value: string) => void;\n\ntype CommonInputProps = {\n    label?: Message;\n    placeholder?: StringMessage;\n    className?: string;\n    inputClassName?: string;\n    onFocus?: FocusEventHandler<HTMLInputElement>;\n    autoFocus?: boolean;\n    disabled?: boolean;\n    type?: InputType;\n    trim?: boolean;\n    name?: string;\n    forwardedRef?: InputRef;\n    readOnly?: boolean;\n};\n\ntype InputProps = {\n    required?: boolean;\n    onChange?: InputHandler;\n    onBlur?: InputHandler;\n    value: string;\n    error?: ErrorMessage;\n} & CommonInputProps;\n\nconst transformHandler = (handler: InputHandler, trim?: boolean): InputHandler => (value: string) =>\n    handler(trim ? value && value.trim() : value);\n\nexport const Input: React.FC<InputProps> = ({\n    value,\n    label,\n    placeholder,\n    error,\n    required,\n    className,\n    inputClassName,\n    onChange,\n    onBlur,\n    onFocus,\n    autoFocus,\n    disabled,\n    type = 'text',\n    trim,\n    name,\n    forwardedRef,\n    readOnly,\n}) => (\n    <div className={Util.classNames(className, required && 'required')}>\n        {label && <label>{__(label)}</label>}\n        <input\n            name={name}\n            className={Util.classNames(inputClassName, error && 'is-invalid')}\n            onChange={onChange && EventUtil.inputHandler(transformHandler(onChange, trim))}\n            onBlur={onBlur && EventUtil.inputHandler(transformHandler(onBlur, trim))}\n            onFocus={onFocus}\n            placeholder={placeholder && __string(placeholder)}\n            ref={forwardedRef}\n            readOnly={readOnly}\n            {...{ value, autoFocus, disabled, type }}\n        />\n        {error && <DisplayError error={error} />}\n    </div>\n);\n\ntype FormInputProps = { Field: iField<string> } & CommonInputProps;\n\nexport const FormInput = ({ Field, className = 'form-control', ...rest }: FormInputProps) => (\n    <Field>\n        {({ onChange, onBlur, required, value, error }) => (\n            <Input {...{ required, onBlur, onChange, className, value, error }} {...rest} />\n        )}\n    </Field>\n);\n","import { Persistore } from 'persistore';\nimport { PointsState } from './Points';\nimport { Player } from '../../players/player-store';\nimport { createStore } from 'react-use-sub';\n\nconst _key = 'SIT.history';\n\nexport type PlayerState = { player: Player; points: PointsState[]; total: number };\nexport type GameState = PlayerState[];\n\nconst getHistory = (): GameState[] => {\n    try {\n        const players = Persistore.get(_key);\n        return JSON.parse(players as any);\n    } catch (e) {\n        return [];\n    }\n};\n\nconst get = (): GameState => getHistory()[0] || [];\n\ntype SpadeIsTrumpState = { gameState: GameState };\n\nconst [useSpadeIsTrumpSub, store] = createStore<SpadeIsTrumpState>({ gameState: get() });\n\nexport { useSpadeIsTrumpSub };\n\nconst _set = (gameState: GameState): void => {\n    const history = getHistory();\n    history.unshift(gameState);\n    if (history.length > 10) history.pop();\n    Persistore.set(_key, JSON.stringify(history));\n};\n\nconst set = (update: GameState | ((gameState: GameState) => GameState)) => {\n    if (typeof update === 'function') {\n        store.set(({ gameState }) => ({ gameState: update(gameState) }));\n    } else {\n        store.set({ gameState: update });\n    }\n    _set(store.get().gameState);\n};\n\nconst reset = () => SitStore.set([]);\n\nconst undo = (): void => {\n    const history = getHistory();\n    if (history.length > 1) history.shift();\n    Persistore.set(_key, JSON.stringify(history));\n    store.set({ gameState: history[0] });\n};\n\nconst _clear = (state: GameState): GameState =>\n    state.map((player) => ({\n        ...player,\n        total: 0,\n        points: player.points.map(() => ({})),\n    }));\n\nconst rearrange = () =>\n    set((state) => {\n        const cleared = _clear(state);\n        return [...cleared.slice(1), cleared[0]];\n    });\n\nexport const SitStore = { set, get, undo, reset, rearrange };\n","import { Persistore } from 'persistore';\nimport { createStore } from 'react-use-sub';\nimport { Util } from '../util/util';\n\nconst _key = 'players';\n\nexport type Player = { uuid: string; name: string; shortcut?: string };\n\nconst _get = (): Player[] => {\n    try {\n        const players = Persistore.get(_key);\n        return JSON.parse(players as any);\n    } catch (e) {\n        return [];\n    }\n};\n\nconst [usePlayerSub, store] = createStore<{ players: Player[] }>({ players: _get() });\n\nexport { usePlayerSub };\n\nconst _set = (next: Player[]): void => Persistore.set(_key, JSON.stringify(next));\n\nconst set: typeof store['set'] = (updates) => {\n    store.set(updates);\n    _set(store.get().players);\n};\n\nconst add = (name: string, shortcut?: string) =>\n    set(({ players }) => ({ players: [{ name, shortcut, uuid: Util.uuid() }, ...players] }));\n\n// TODO: Integrate the possibility to change players\n// const update = (update: Player): void =>\n//     set(({ players }) => {\n//         const index = players.findIndex((p) => p.uuid === update.uuid);\n//         return { players: index === -1 ? players : Util.nextArray(players, index, update) };\n//     });\n\nconst remove = (player: Player): void =>\n    set(({ players }) => ({ players: players.filter((p) => p.uuid !== player.uuid) }));\n\nconst _moveTo = (before: number, after: number) =>\n    set(({ players }) => {\n        const next = players.filter((_, index) => index !== before);\n        next.splice(after, 0, players[before]);\n        return { players: next };\n    });\n\nconst moveUp = (current: number) => (current > 0 ? _moveTo(current, current - 1) : undefined);\nconst moveDown = (current: number) => _moveTo(current, current + 1);\n\nexport const PlayerStore = { add, remove, moveDown, moveUp, get: store.get };\n","import React, { useCallback } from 'react';\nimport { Icon } from '../components/icons/icon';\nimport { Player, PlayerStore } from './player-store';\n\nexport const PlayerRow: React.FC<{ player: Player; pos: number }> = ({ player, pos }) => {\n    const { name, shortcut } = player;\n\n    const moveUp = useCallback(() => PlayerStore.moveUp(pos), [pos]);\n    const moveDown = useCallback(() => PlayerStore.moveDown(pos), [pos]);\n    const remove = useCallback(() => PlayerStore.remove(player), [player]);\n\n    return (\n        <tr className=\"player-row\">\n            <td className=\"player-pos\">\n                <span className=\"player-move-down\" onClick={moveDown}>\n                    <Icon.ArrowRight />\n                </span>\n                <span className=\"player-current-pos\">{pos + 1}</span>\n                <span className=\"player-move-up\" onClick={moveUp}>\n                    <Icon.ArrowRight />\n                </span>\n            </td>\n            <td className=\"player-name\">{name}</td>\n            <td className=\"player-shortcut\">{shortcut}</td>\n            <td className=\"player-actions\">\n                <span className=\"player-remove\" onClick={remove}>\n                    <Icon.Trash />\n                </span>\n            </td>\n        </tr>\n    );\n};\n","import React, { useCallback, useState } from 'react';\nimport { Morfi, FormData } from 'morfi';\nimport { FormInput } from '../components/form/input';\nimport { __ } from 'first-intl';\n\ntype AddPlayerFormValues = { name: string; shortcut: string };\nconst initialValues: AddPlayerFormValues = { name: '', shortcut: '' };\nconst { Form, Fields } = Morfi.create<AddPlayerFormValues>(initialValues);\nconst initialData: FormData<AddPlayerFormValues> = { values: initialValues, errors: {} };\nconst validation = { name: { onChange: (v?: string) => (!v ? { id: 'players.add.name.required' } : undefined) } };\n\ntype AddPlayerFormProps = { close: () => void; onAdd: (name: string, shortcut: string) => void };\n\nexport const AddPlayerForm: React.FC<AddPlayerFormProps> = ({ close, onAdd }) => {\n    const [data, setData] = useState(initialData);\n\n    const onSubmit = useCallback(\n        ({ name, shortcut }) => {\n            onAdd(name, shortcut);\n            close();\n        },\n        [close, onAdd]\n    );\n\n    return (\n        <Form\n            className=\"startup add-players\"\n            onSubmit={onSubmit}\n            validation={validation}\n            data={data}\n            onChange={setData}>\n            <FormInput autoFocus Field={Fields.name} label=\"players.add.name\" />\n            <FormInput Field={Fields.shortcut} label=\"players.add.shortcut\" />\n            <button type=\"submit\">{__('players.add.submit')}</button>\n        </Form>\n    );\n};\n\ntype AddPlayerProps = { onAdd: (name: string, shortcut: string) => void };\n\nexport const AddPlayer: React.FC<AddPlayerProps> = ({ onAdd }) => {\n    const [focus, setFocus] = useState(false);\n\n    const onClick = useCallback(() => setFocus(true), []);\n    const close = useCallback(() => setFocus(false), []);\n\n    return focus ? (\n        <AddPlayerForm close={close} onAdd={onAdd} />\n    ) : (\n        <button className=\"add-player\" onClick={onClick} type=\"submit\">\n            {__('players.add')}\n        </button>\n    );\n};\n","import React from 'react';\nimport { PlayerStore, usePlayerSub } from './player-store';\nimport { PlayerRow } from './PlayerRow';\nimport { AddPlayer } from './AddPlayer';\n\nexport const PlayerSelection: React.FC = () => {\n    const players = usePlayerSub(({ players }) => players);\n\n    return (\n        <div className=\"players\">\n            <div className=\"registered-players\">\n                <table>\n                    <tbody>\n                        {players.map((player, index) => (\n                            <PlayerRow player={player} pos={index} key={player.uuid} />\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n            <AddPlayer onAdd={PlayerStore.add} />\n        </div>\n    );\n};\n","import React, { useState } from 'react';\nimport { Morfi, FormData } from 'morfi';\nimport { FormInput } from '../../components/form/input';\nimport { __ } from 'first-intl';\nimport { Util } from '../../util/util';\nimport { PlayerState, SitStore } from './sit-store';\nimport { PlayerSelection } from '../../players/PlayerSelection';\nimport { Player, PlayerStore } from '../../players/player-store';\n\nconst newPlayer = (player: Player, playerIdx: number, rounds: number): PlayerState => ({\n    player,\n    points: Util.array(rounds).map(() => ({})),\n    total: 0,\n});\n\nconst playersFromStartup = (startupInfo: StartupInfo): PlayerState[] => {\n    const rounds = Math.floor(startupInfo.numberOfCards / startupInfo.numberOfPlayers);\n    return PlayerStore.get()\n        .players.slice(0, startupInfo.numberOfPlayers)\n        .map((player, index) => newPlayer(player, index, rounds));\n};\n\nconst onChangeStartupInfo = (startupInfo: StartupInfo) => SitStore.set(playersFromStartup(startupInfo));\n\nexport type StartupInfo = { numberOfCards: number; numberOfPlayers: number };\nexport type StartupInfoValues = { numberOfCards: string; numberOfPlayers: string };\nconst StartupInfoValidations = {\n    numberOfCards: {\n        onChange: (v?: string) => {\n            const num = Number(v);\n            return isNaN(num) || num < 32 ? { id: 'SIT.startup.cartCount.invalid' } : undefined;\n        },\n    },\n    numberOfPlayers: {\n        onChange: (v?: string) => {\n            const num = Number(v);\n            if (isNaN(num) || num < 2 || num > 10) return { id: 'players.count.invalid', values: { min: 2, max: 10 } };\n            if (num > PlayerStore.get().players.length) return { id: 'players.count.exceedsRegistered' };\n        },\n    },\n};\n\nconst submit = ({ numberOfCards, numberOfPlayers }: StartupInfoValues) => {\n    onChangeStartupInfo({ numberOfCards: +numberOfCards, numberOfPlayers: +numberOfPlayers });\n};\n\nconst initialValues: StartupInfoValues = { numberOfCards: '52', numberOfPlayers: '' };\nconst { Form, Fields } = Morfi.create<StartupInfoValues>(initialValues);\n\nexport const StartupInfoPicker = () => {\n    const [data, setData] = useState<FormData<StartupInfoValues>>({ values: initialValues, errors: {} });\n\n    return (\n        <div className=\"spade-is-trump\">\n            <div className=\"configs\">\n                <Form\n                    className=\"startup\"\n                    onSubmit={submit}\n                    validation={StartupInfoValidations}\n                    data={data}\n                    onChange={setData}>\n                    <FormInput Field={Fields.numberOfCards} label=\"SIT.startup.cardCount\" type=\"number\" />\n                    <FormInput Field={Fields.numberOfPlayers} label=\"players.count\" type=\"number\" />\n                    <button type=\"submit\">{__('APP.start')}</button>\n                </Form>\n            </div>\n            <PlayerSelection />\n        </div>\n    );\n};\n","import React, { useState, useCallback, useEffect, FormEvent } from 'react';\nimport { Input } from '../../components/form/input';\n\nexport type PointsState = { tip?: number; checked?: boolean; earned?: number };\n\ntype PointsComponentProps = {\n    points: PointsState;\n    onChange: (player: PointsState) => void;\n    limit: number;\n    checkable?: boolean;\n    active: boolean;\n    activeRound: boolean;\n};\n\nconst parseNum = (v: string): number | undefined => {\n    if (v && v.trim()) {\n        const parsed = Number(v.trim());\n        if (!isNaN(parsed) && parsed >= 0) {\n            return parsed;\n        }\n    }\n};\n\nconst _tipToString = (tip?: number) => (tip !== undefined ? String(tip) : '');\n\nexport const Points = ({ points, activeRound, limit, onChange, checkable, active }: PointsComponentProps) => {\n    const [focus, setFocus] = useState(false);\n    const [currentTip, setCurrentTip] = useState<string>(() => _tipToString(points.tip));\n\n    const onFocus = useCallback(() => {\n        activeRound && setFocus(true);\n    }, [activeRound]);\n\n    const onChangeTip = useCallback(\n        (tip: string) => {\n            if (activeRound) {\n                const num = parseNum(tip);\n                if (num === undefined) {\n                    setCurrentTip('');\n                } else if (num >= 0 && num <= limit) {\n                    setCurrentTip(tip);\n                }\n            }\n        },\n        [activeRound, limit]\n    );\n\n    const onBlur = useCallback(\n        (tip: string) => {\n            if (activeRound) {\n                const num = parseNum(tip);\n                if (num !== undefined) {\n                    onChange({ ...points, tip: num });\n                }\n                setFocus(false);\n            }\n        },\n        [activeRound, points, onChange]\n    );\n\n    const onSubmit = useCallback(\n        (event: FormEvent) => {\n            event.preventDefault();\n            onBlur(currentTip);\n        },\n        [onBlur, currentTip]\n    );\n\n    const setEarned = useCallback(\n        (earned: number) => {\n            if (!activeRound || points.earned) return;\n            onChange({ ...points, earned });\n        },\n        [activeRound, points, onChange]\n    );\n\n    const onSuccess = useCallback(() => {\n        setEarned(Number(points.tip) + 10);\n    }, [setEarned, points]);\n\n    const onFailed = useCallback(() => {\n        setEarned(Number(points.tip) * -1);\n    }, [setEarned, points]);\n\n    useEffect(() => {\n        setCurrentTip(_tipToString(points.tip));\n    }, [points.tip]);\n\n    if (points.earned !== undefined) {\n        return points.earned > 0 ? (\n            <td className=\"points points-earned\">{points.earned}</td>\n        ) : (\n            <td className=\"points points-lost\">{points.earned}</td>\n        );\n    }\n\n    if (!focus) {\n        const clazzName = activeRound && active ? 'points active' : 'points';\n        const readyToPlay = activeRound && checkable;\n        return (\n            <td onClick={readyToPlay ? undefined : onFocus} className={clazzName}>\n                <div onClick={readyToPlay ? onFocus : undefined} className=\"points-tip\">\n                    {currentTip}\n                </div>\n                {readyToPlay && (\n                    <>\n                        <button className=\"points-success\" type=\"button\" onClick={onSuccess}>\n                            +\n                        </button>\n                        <button className=\"points-failed\" type=\"button\" onClick={onFailed}>\n                            -\n                        </button>\n                    </>\n                )}\n            </td>\n        );\n    }\n    return (\n        <td>\n            <form onSubmit={onSubmit}>\n                <Input\n                    className=\"points-input\"\n                    value={currentTip}\n                    autoFocus\n                    onChange={onChangeTip}\n                    onBlur={onBlur}\n                    type=\"number\"\n                />\n            </form>\n        </td>\n    );\n};\n","import React, { ReactNode, useCallback, useState } from 'react';\n\nexport type ClickableDescriptionProps = { desc: ReactNode; short?: ReactNode; className?: string; tag?: string };\n\nexport const ClickableDescription: React.FC<ClickableDescriptionProps> = ({ desc, short, className, tag = 'div' }) => {\n    const [showName, setShowName] = useState(false);\n    const displayed = showName ? desc : short || desc;\n\n    const onClick = useCallback(() => {\n        if (short) {\n            setShowName(true);\n            window.setTimeout(() => setShowName(false), 3000);\n        }\n    }, [short]);\n\n    return React.createElement(tag, { onClick, className }, displayed);\n};\n","import React from 'react';\nimport { __string } from 'first-intl';\nimport { Util } from '../../util/util';\nimport { Icon } from '../../components/icons/icon';\nimport { Points, PointsState } from './Points';\nimport { SitStore, GameState, PlayerState, useSpadeIsTrumpSub } from './sit-store';\nimport { ClickableDescription } from './ClickableDescription';\n\nconst getActiveRound = (gameState: GameState, rounds: number): number | undefined => {\n    const earnings = Util.array(rounds).map(() => 0);\n    for (let i = 0; i < gameState.length; i++) {\n        const points: PointsState[] = gameState[i].points;\n        for (let j = 0; j < points.length; j++) {\n            if (points[j].earned !== undefined) earnings[j]++;\n        }\n    }\n    const round = earnings.findIndex((num) => num < gameState.length);\n    return round === -1 ? undefined : round;\n};\n\nconst activeRoundReady = (gameState: GameState, activeRound?: number): boolean => {\n    if (activeRound === undefined) return true;\n    for (let i = 0; i < gameState.length; i++) {\n        const points = gameState[i].points[activeRound];\n        if (points.tip === undefined) return false;\n    }\n    return true;\n};\n\nconst roundHasError = (gameState: GameState, round: number, cards: number): boolean => {\n    const earnings = gameState.map(\n        (player) => player.points.map((points) => points.earned).filter((_, index) => index === round)[0]\n    );\n    if (earnings.filter((v) => v === undefined).length) return false; // only display warning if all earnings are known\n    const positives = earnings.map((e: any) => (e > 10 ? e - 10 : undefined)).reduce((r: number, v = 0) => r + v, 0);\n    return Boolean(positives > cards || (positives === cards && earnings.filter((v) => v === 0).length));\n};\n\nconst onPlayerChange = (player: PlayerState, playerIdx: number) =>\n    SitStore.set((gameState) => {\n        const next = [...gameState];\n        next[playerIdx] = player;\n        return next;\n    });\n\nconst onPointsChange = (player: PlayerState, playerIdx: number, roundIdx: number) => (points: PointsState) => {\n    const next = [...player.points];\n    next[roundIdx] = points;\n    onPlayerChange({ ...player, points: next }, playerIdx);\n};\n\nexport const SpadeIsTrumpStarted: React.FC = () => {\n    const { gameState } = useSpadeIsTrumpSub(({ gameState }) => ({ gameState }));\n    const rounds = gameState[0].points.length;\n    const activeRound = getActiveRound(gameState, rounds);\n    const earnedPoints = gameState.map((player) => player.points.reduce((res, val) => res + (val.earned || 0), 0));\n\n    return (\n        <table>\n            <thead>\n                <tr>\n                    <ClickableDescription desc={__string('SIT.cardCount')} short=\"#\" tag=\"th\" className=\"card-number\" />\n                    {gameState.map(({ player: { name, shortcut } }, playerIdx) => (\n                        <ClickableDescription desc={name} short={shortcut} key={playerIdx} tag=\"th\" />\n                    ))}\n                </tr>\n            </thead>\n            <tbody>\n                {Util.array(rounds).map((_, roundIdx: number) => {\n                    const isActiveRound = activeRound === roundIdx;\n                    const activeReady = activeRoundReady(gameState, activeRound);\n                    const cards = rounds - roundIdx;\n                    const hasError = roundHasError(gameState, roundIdx, cards);\n                    return (\n                        <tr\n                            key={cards}\n                            className={activeRound !== undefined && roundIdx > activeRound ? 'disabled' : undefined}>\n                            <td>\n                                {cards}\n                                {hasError && (\n                                    <span className=\"error-round\">\n                                        <Icon.Alert />\n                                    </span>\n                                )}\n                            </td>\n                            {gameState.map((player, playerIdx) => (\n                                <Points\n                                    key={playerIdx}\n                                    points={player.points[roundIdx]}\n                                    limit={cards}\n                                    checkable={activeReady}\n                                    onChange={onPointsChange(player, playerIdx, roundIdx)}\n                                    active={roundIdx % gameState.length === playerIdx}\n                                    activeRound={isActiveRound}\n                                />\n                            ))}\n                        </tr>\n                    );\n                })}\n                <tr className=\"sum\">\n                    <ClickableDescription desc={__string('SIT.points')} short=\"∑\" tag=\"td\" />\n                    {earnedPoints.map((earned, earnedIdx) => (\n                        <td key={earnedIdx}>\n                            {earned}\n                            {activeRound === undefined && earned === Math.max(...earnedPoints) && (\n                                <Icon.Crown className=\"winner\" />\n                            )}\n                        </td>\n                    ))}\n                </tr>\n            </tbody>\n        </table>\n    );\n};\n","import React from 'react';\nimport { StartupInfoPicker } from './StartupInfoPicker';\nimport { SpadeIsTrumpStarted } from './SpadeIsTrumpStarted';\nimport { ErrorBoundary } from '../../components/ErrorBoundary';\nimport { SitStore, useSpadeIsTrumpSub } from './sit-store';\nimport { Footer, FooterButton } from '../../footer/Footer';\nimport { FooterUndo } from '../../footer/FooterUndo';\nimport { FooterRestart } from '../../footer/FooterRestart';\nimport { Icon } from '../../components/icons/icon';\n\ntype SpadeIsTrumpFooterProps = { started: boolean };\n\nconst SpadeIsTrumpFooter: React.FC<SpadeIsTrumpFooterProps> = ({ started }) => (\n    <Footer>\n        <FooterUndo onClick={SitStore.undo} />\n        {started && <FooterRestart onClick={SitStore.reset} />}\n        {started && (\n            <FooterButton onClick={SitStore.rearrange} description=\"SIT.reorder\">\n                <Icon.Refresh />\n            </FooterButton>\n        )}\n    </Footer>\n);\n\nexport const SpadeIsTrump: React.FC = () => {\n    const started = useSpadeIsTrumpSub(({ gameState }) => !!gameState.length);\n\n    return (\n        <ErrorBoundary fix={SitStore.reset}>\n            <>\n                <div className=\"spade-is-trump\">{started ? <SpadeIsTrumpStarted /> : <StartupInfoPicker />}</div>\n                <SpadeIsTrumpFooter started={started} />\n            </>\n        </ErrorBoundary>\n    );\n};\n","import { Util } from '../../util/util';\nimport { createStore } from 'react-use-sub';\nimport { Persistore } from 'persistore';\nimport { BONUS, Color } from './data';\n\nconst _key = 'veryClever';\n\nexport type Crossed = boolean[];\nexport type Points = number[];\nexport type Highlight = { color: Color; index: number };\n\nconst _setHistoryLocal = (history: GameState[]) => Persistore.set(_key, JSON.stringify(history));\nconst _getHistory = () => {\n    try {\n        const history = JSON.parse(Persistore.get(_key) || '[]');\n        if (Array.isArray(history)) return history;\n    } catch (e) {\n        _setHistoryLocal([]);\n    }\n    return [];\n};\nconst _get = () => _getHistory().pop();\n\nexport type GameState = {\n    [Color.YELLOW]: Crossed;\n    [Color.BLUE]: Crossed;\n    [Color.GREEN]: Crossed;\n    [Color.ORANGE]: Points;\n    [Color.PURPLE]: Points;\n    earnedBonus: {\n        [Color.YELLOW]: BONUS[];\n        [Color.BLUE]: BONUS[];\n    };\n    reshuffle: Crossed;\n    plusOne: Crossed;\n    round: number;\n    selection: Color.ORANGE | Color.PURPLE | null;\n    highlight: null | Highlight;\n    bonus: BONUS[];\n    foxes: number;\n};\nexport const initialGameState = {\n    [Color.YELLOW]: Util.arrayFill(Util.array(16, false), [3, 6, 9, 12], true),\n    [Color.BLUE]: Util.arrayFill(Util.array(12, false), [0], true),\n    [Color.GREEN]: Util.array(11, false),\n    [Color.ORANGE]: Util.array(11, 0),\n    [Color.PURPLE]: Util.array(11, 0),\n    earnedBonus: {\n        [Color.YELLOW]: [],\n        [Color.BLUE]: [],\n    },\n    reshuffle: [false],\n    plusOne: [],\n    round: 1,\n    selection: null,\n    highlight: null,\n    bonus: [],\n    foxes: 0,\n};\nconst _setLocal = (state: GameState) => _setHistoryLocal([..._getHistory().slice(-9), state]);\n\nconst [useVeryCleverSub, _Store] = createStore<GameState>(initialGameState);\n\nconst _set: typeof _Store['set'] = (update) => {\n    _Store.set(update);\n    _setLocal(_Store.get());\n};\n\n_Store.set(_get() || {});\n\nconst undo = () => {\n    const history = _getHistory();\n    if (history.length > 1) {\n        history.pop();\n        _setHistoryLocal(history);\n        _Store.set(history[history.length - 1]);\n    }\n};\n\nconst reset = () => {\n    _setHistoryLocal([]);\n    _set(initialGameState);\n};\n\nexport const VeryCleverStore = {\n    get: _Store.get,\n    set: _set,\n    restart: () => _set(initialGameState),\n    undo,\n    reset,\n};\n\nexport { useVeryCleverSub };\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useDecryptoSub } from './Decrypto-store';\nimport { __ } from 'first-intl';\n\nenum Status {\n    WON = 'WON',\n    LOST = 'LOST',\n}\n\nexport const NotifyResult: React.FC = () => {\n    const [status, setStatus] = useState<Status | undefined>();\n    const { wins, losses } = useDecryptoSub(({ results }) => results);\n    const last = useRef({ wins, losses });\n\n    const close = useCallback(() => setStatus(undefined), []);\n\n    useEffect(() => {\n        if (last.current.wins === 1 && wins === 2) {\n            setStatus(Status.WON);\n        } else if (last.current.losses === 1 && losses === 2) {\n            setStatus(Status.LOST);\n        }\n        last.current = { wins, losses };\n    }, [wins, losses]);\n\n    if (!status) return null;\n\n    return (\n        <div className=\"result-overlay\" onClick={close}>\n            <span>{__(status === Status.WON ? 'DECRYPTO.won' : 'DECRYPTO.lost')}</span>\n        </div>\n    );\n};\n","import { Crossed, GameState, Points, VeryCleverStore } from './VeryClever-store';\nimport { Util } from '../../util/util';\nimport { BONUS, Color, Data } from './data';\n\nconst _takeBonus = (list: Crossed): Crossed => {\n    const firstFalse = list.findIndex((v) => !v);\n    return firstFalse >= 0 ? Util.nextArray(list, firstFalse, true) : list;\n};\n\nconst takeReshuffleBonus = () => VeryCleverStore.set(({ reshuffle }) => ({ reshuffle: _takeBonus(reshuffle) }));\nconst takePlusOneBonus = () => VeryCleverStore.set(({ plusOne }) => ({ plusOne: _takeBonus(plusOne) }));\n\nconst _allCrossed = (crossed: Crossed, ...nums: number[]): boolean => nums.every((num) => crossed[num]);\n\nconst _getYellowBonus = (crossed: Crossed, earned: BONUS[]): BONUS[] => {\n    const collected = [];\n\n    if (!earned.includes(BONUS.YELLOW_10) && _allCrossed(crossed, 0, 4, 8)) {\n        collected.push(BONUS.YELLOW_10);\n    }\n    if (!earned.includes(BONUS.YELLOW_14) && _allCrossed(crossed, 1, 5, 13)) {\n        collected.push(BONUS.YELLOW_14);\n    }\n    if (!earned.includes(BONUS.YELLOW_16) && _allCrossed(crossed, 2, 10, 14)) {\n        collected.push(BONUS.YELLOW_16);\n    }\n    if (!earned.includes(BONUS.YELLOW_20) && _allCrossed(crossed, 7, 11, 15)) {\n        collected.push(BONUS.YELLOW_20);\n    }\n    if (!earned.includes(BONUS.BLUE) && _allCrossed(crossed, 0, 1, 2)) {\n        collected.push(BONUS.BLUE);\n    }\n    if (!earned.includes(BONUS.ORANGE_4) && _allCrossed(crossed, 4, 5, 7)) {\n        collected.push(BONUS.ORANGE_4);\n    }\n    if (!earned.includes(BONUS.GREEN) && _allCrossed(crossed, 8, 10, 11)) {\n        collected.push(BONUS.GREEN);\n    }\n    if (!earned.includes(BONUS.FOX) && _allCrossed(crossed, 13, 14, 15)) {\n        collected.push(BONUS.FOX);\n    }\n    if (!earned.includes(BONUS.PLUS_1) && _allCrossed(crossed, 0, 5, 10, 15)) {\n        collected.push(BONUS.PLUS_1);\n    }\n\n    return collected;\n};\n\nconst _getBlueBonus = (crossed: Crossed, earned: BONUS[]): BONUS[] => {\n    const collected = [];\n\n    if (!earned.includes(BONUS.REFRESH) && _allCrossed(crossed, 4, 8)) {\n        collected.push(BONUS.REFRESH);\n    }\n    if (!earned.includes(BONUS.GREEN) && _allCrossed(crossed, 1, 5, 9)) {\n        collected.push(BONUS.GREEN);\n    }\n    if (!earned.includes(BONUS.PURPLE) && _allCrossed(crossed, 2, 6, 10)) {\n        collected.push(BONUS.PURPLE);\n    }\n    if (!earned.includes(BONUS.PLUS_1) && _allCrossed(crossed, 3, 7, 11)) {\n        collected.push(BONUS.PLUS_1);\n    }\n    if (!earned.includes(BONUS.ORANGE_5) && _allCrossed(crossed, 1, 2, 3)) {\n        collected.push(BONUS.ORANGE_5);\n    }\n    if (!earned.includes(BONUS.YELLOW) && _allCrossed(crossed, 4, 5, 6, 7)) {\n        collected.push(BONUS.YELLOW);\n    }\n    if (!earned.includes(BONUS.FOX) && _allCrossed(crossed, 8, 9, 10, 11)) {\n        collected.push(BONUS.FOX);\n    }\n\n    return collected;\n};\n\nconst _getRowBonus = (color: Color.GREEN | Color.ORANGE | Color.PURPLE, crossed: Crossed, index: number): BONUS[] => {\n    const bonus = Data[color].bonus[index];\n    return bonus ? [bonus] : [];\n};\n\nconst _getBonus = (\n    color: Color.YELLOW | Color.BLUE | Color.GREEN,\n    crossed: Crossed,\n    earned: BONUS[],\n    index: number\n): BONUS[] => {\n    if (color === Color.YELLOW) return _getYellowBonus(crossed, earned);\n    if (color === Color.BLUE) return _getBlueBonus(crossed, earned);\n    if (color === Color.GREEN) return _getRowBonus(Color.GREEN, crossed, index);\n\n    return undefined as never;\n};\n\nconst _crossableClicked = (color: Color.YELLOW | Color.BLUE | Color.GREEN, index: number, rest?: BONUS[]) =>\n    VeryCleverStore.set((state) => {\n        const crossed = Util.nextArray(state[color], index, true);\n        const earned = color === Color.GREEN ? [] : state.earnedBonus[color];\n        const collected = _getBonus(color, crossed, earned, index);\n\n        return {\n            [color]: crossed,\n            earnedBonus: {\n                ...state.earnedBonus,\n                [color]: [...earned, ...collected],\n            },\n            bonus: [...(rest || state.bonus), ...collected],\n            highlight: { color, index },\n        };\n    });\n\nconst _getNextIndex = (color: Color.GREEN | Color.ORANGE | Color.PURPLE): number =>\n    VeryCleverStore.get()[color].findIndex((v: any) => !v);\n\nconst _isCrossed = (color: Exclude<Color, Color.BLACK>, index: number): boolean =>\n    !!VeryCleverStore.get()[color][index];\n\nconst _isNextIndex = (color: Color.GREEN | Color.ORANGE | Color.PURPLE, index: number): boolean =>\n    _getNextIndex(color) === index;\n\nconst boxClicked = (color: Exclude<Color, Color.BLACK>, index: number) => {\n    if (_isCrossed(color, index)) return;\n    if (color === Color.ORANGE || color === Color.PURPLE || color === Color.GREEN) {\n        if (!_isNextIndex(color, index)) return;\n        if (color !== Color.GREEN) return VeryCleverStore.set({ selection: color });\n    }\n    return _crossableClicked(color, index);\n};\n\nconst clearSelection = () => VeryCleverStore.set({ selection: null });\n\nconst _selectValue = (color: Color.ORANGE | Color.PURPLE, value: number, rest?: BONUS[]) => {\n    const index = _getNextIndex(color);\n    const factor = color === Color.ORANGE ? Data[Color.ORANGE].factors[index] : 1;\n    VeryCleverStore.set((state) => {\n        const values = Util.nextArray(state[color], index, factor * value);\n        return {\n            [color]: values,\n            selection: null,\n            bonus: [...(rest || state.bonus), ..._getRowBonus(color, values.map(Boolean), index)],\n            highlight: { color: color, index },\n        };\n    });\n};\n\nconst selectValue = (value: number) => {\n    const { selection } = VeryCleverStore.get();\n    if (selection) {\n        _selectValue(selection, value);\n    }\n};\n\nconst _yellowPoints = (earned: BONUS[]) => {\n    const column1Points = earned.includes(BONUS.YELLOW_10) ? 10 : 0;\n    const column2Points = earned.includes(BONUS.YELLOW_14) ? 14 : 0;\n    const column3Points = earned.includes(BONUS.YELLOW_16) ? 16 : 0;\n    const column4Points = earned.includes(BONUS.YELLOW_20) ? 20 : 0;\n    return column1Points + column2Points + column3Points + column4Points;\n};\nconst _bluePoints = (crossed: Crossed) => Data[Color.BLUE].points[crossed.filter(Boolean).length - 1];\nconst _greenPoints = (crossed: Crossed): number | undefined =>\n    Data[Color.GREEN].points[crossed.filter(Boolean).length - 1];\nconst _sumPoints = (crossed: Points) => crossed.reduce((cur: number, red: number) => cur + red, 0);\n\nconst points = (state: GameState) => {\n    const yPoints = _yellowPoints(state.earnedBonus[Color.YELLOW]);\n    const bPoints = _bluePoints(state[Color.BLUE]);\n    const gPoints = _greenPoints(state[Color.GREEN]) || 0;\n    const oPoints = _sumPoints(state[Color.ORANGE]);\n    const pPoints = _sumPoints(state[Color.PURPLE]);\n    const foxPoints = Math.min(yPoints, bPoints, gPoints, oPoints, pPoints) * state.foxes;\n    return yPoints + bPoints + gPoints + oPoints + pPoints + foxPoints;\n};\n\nconst _useBonus = (bonus: BONUS, rest: BONUS[]) => {\n    if (bonus === BONUS.GREEN) _crossableClicked(Color.GREEN, _getNextIndex(Color.GREEN), rest);\n    else if (bonus === BONUS.ORANGE_4) _selectValue(Color.ORANGE, 4, rest);\n    else if (bonus === BONUS.ORANGE_5) _selectValue(Color.ORANGE, 5, rest);\n    else if (bonus === BONUS.ORANGE_6) _selectValue(Color.ORANGE, 6, rest);\n    else if (bonus === BONUS.PURPLE) _selectValue(Color.PURPLE, 6, rest);\n    else if (bonus === BONUS.FOX) VeryCleverStore.set(({ foxes }) => ({ foxes: foxes + 1, bonus: rest }));\n    else if (bonus === BONUS.PLUS_1)\n        VeryCleverStore.set(({ plusOne }) => ({ plusOne: [...plusOne, false], bonus: rest }));\n    else if (bonus === BONUS.REFRESH)\n        VeryCleverStore.set(({ reshuffle }) => ({ reshuffle: [...reshuffle, false], bonus: rest }));\n    else VeryCleverStore.set({ bonus: rest });\n};\n\nconst useBonus = () => {\n    const { bonus } = VeryCleverStore.get();\n    if (bonus) {\n        const [first, ...rest] = bonus;\n        _useBonus(first, rest);\n    }\n};\n\nconst ROUND_BONUS = [BONUS.REFRESH, BONUS.PLUS_1, BONUS.REFRESH, BONUS.ULTIMATE];\nconst _getRoundBonus = (round: number) => (ROUND_BONUS[round] ? [ROUND_BONUS[round]] : []);\n\nconst nextRound = () =>\n    VeryCleverStore.set(({ round }) => ({\n        round: round + 1,\n        bonus: _getRoundBonus(round),\n    }));\n\nexport const VeryCleverLogic = {\n    takeReshuffleBonus,\n    takePlusOneBonus,\n    boxClicked,\n    selectValue,\n    clearSelection,\n    points,\n    useBonus,\n    nextRound,\n};\n","import React, { ReactNode } from 'react';\nimport { Crossed, useVeryCleverSub } from './VeryClever-store';\nimport { VeryCleverLogic } from './VeryClever-logic';\nimport { Icon } from '../../components/icons/icon';\nimport { Util } from '../../util/util';\n\nexport type AvailableBonusProps = { children: ReactNode; crossed: Crossed; onClick: () => void };\n\nconst AvailableBonus: React.FC<AvailableBonusProps> = ({ children, crossed, onClick }) => (\n    <div className=\"grid-bonus-row\">\n        <div className=\"grid-item\">{children}</div>\n        {crossed.map((c, key) => (\n            <div key={key} className=\"grid-item\" onClick={onClick}>\n                <div className={Util.classNames('box', c && 'crossed')} />\n            </div>\n        ))}\n    </div>\n);\n\nexport const AvailableReshuffleBonus: React.FC = () => {\n    const { reshuffle } = useVeryCleverSub(({ reshuffle }) => ({ reshuffle }));\n\n    return (\n        <AvailableBonus crossed={reshuffle} onClick={VeryCleverLogic.takeReshuffleBonus}>\n            <Icon.Refresh2 />\n        </AvailableBonus>\n    );\n};\n\nexport const AvailablePlusOneBonus: React.FC = () => {\n    const { plusOne } = useVeryCleverSub(({ plusOne }) => ({ plusOne }));\n\n    return (\n        <AvailableBonus crossed={plusOne} onClick={VeryCleverLogic.takePlusOneBonus}>\n            <div className=\"content\">+1</div>\n        </AvailableBonus>\n    );\n};\n","import React from 'react';\nimport { useVeryCleverSub } from './VeryClever-store';\nimport { VeryCleverLogic } from './VeryClever-logic';\nimport { __ } from 'first-intl';\n\nexport const RoundOverview: React.FC = () => {\n    const { round } = useVeryCleverSub(({ round }) => ({ round }));\n    return (\n        <div className=\"round-overview\">\n            <span className=\"title\">\n                {__('VC.round')}\n                {round}\n            </span>\n            <button onClick={VeryCleverLogic.nextRound}>{__('VC.next')}</button>\n        </div>\n    );\n};\n","import React, { useCallback } from 'react';\nimport { VeryCleverLogic } from './VeryClever-logic';\nimport { useVeryCleverSub } from './VeryClever-store';\nimport { Color } from './data';\n\nexport type ValueSelectionOptionProps = { value: number; color: Color };\n\nexport const ValueSelectionOption: React.FC<ValueSelectionOptionProps> = ({ value, color }) => {\n    const onClick = useCallback(() => VeryCleverLogic.selectValue(value), [value]);\n    return (\n        <div className=\"value\" style={{ backgroundColor: color }} onClick={onClick}>\n            {value}\n        </div>\n    );\n};\n\ntype ValueSelectionProps = { color: Color };\n\nexport const ValueSelection: React.FC<ValueSelectionProps> = ({ color }) => {\n    const { prevVal } = useVeryCleverSub((state) => {\n        const currentIdx = color === Color.PURPLE ? state[Color.PURPLE].findIndex((v) => !v) - 1 : -1;\n        return { prevVal: currentIdx >= 0 ? state[Color.PURPLE][currentIdx] : 0 };\n    });\n\n    return (\n        <div className=\"value-selection\">\n            <div className=\"value-selection-inner\">\n                {[1, 2, 3, 4, 5, 6].slice(prevVal === 6 ? 0 : prevVal).map((v) => (\n                    <ValueSelectionOption key={v} color={color} value={v} />\n                ))}\n            </div>\n            <div className=\"value-selection-overlay\" onClick={VeryCleverLogic.clearSelection} />\n        </div>\n    );\n};\n","import React, { ReactNode } from 'react';\nimport { Icon } from '../../components/icons/icon';\nimport { BONUS, Color, CROSS } from './data';\n\nexport const FOX = '🦊';\nexport const PLUS_1 = '+1';\nexport const REFRESH = <Icon.Refresh2 />;\n\nconst CONTENT_AND_COLOR: { [bonus in BONUS]: { content: ReactNode; color: Color } } = {\n    [BONUS.FOX]: { content: FOX, color: Color.BLACK },\n    [BONUS.PLUS_1]: { content: PLUS_1, color: Color.BLACK },\n    [BONUS.REFRESH]: { content: REFRESH, color: Color.BLACK },\n    [BONUS.YELLOW]: { content: CROSS, color: Color.YELLOW },\n    [BONUS.YELLOW_10]: { content: 10, color: Color.YELLOW },\n    [BONUS.YELLOW_14]: { content: 14, color: Color.YELLOW },\n    [BONUS.YELLOW_16]: { content: 16, color: Color.YELLOW },\n    [BONUS.YELLOW_20]: { content: 20, color: Color.YELLOW },\n    [BONUS.BLUE]: { content: CROSS, color: Color.BLUE },\n    [BONUS.GREEN]: { content: CROSS, color: Color.GREEN },\n    [BONUS.ORANGE_4]: { content: 4, color: Color.ORANGE },\n    [BONUS.ORANGE_5]: { content: 5, color: Color.ORANGE },\n    [BONUS.ORANGE_6]: { content: 6, color: Color.ORANGE },\n    [BONUS.PURPLE]: { content: 6, color: Color.PURPLE },\n    [BONUS.ULTIMATE]: { content: CROSS + '/6', color: Color.BLACK },\n};\n\ntype BonusProps = { bonus: BONUS };\n\nexport const Bonus: React.FC<BonusProps> = ({ bonus }) => (\n    <div className=\"box bonus\" style={{ backgroundColor: CONTENT_AND_COLOR[bonus].color }}>\n        <div className=\"content\">{CONTENT_AND_COLOR[bonus].content}</div>\n    </div>\n);\n","import React, { ReactNode, useCallback } from 'react';\nimport { Highlight, useVeryCleverSub } from './VeryClever-store';\nimport { Util } from '../../util/util';\nimport { VeryCleverLogic } from './VeryClever-logic';\nimport { Color } from './data';\n\nconst _isHighLight = (highlight: null | Highlight, color: Color, index: number): boolean => {\n    if (!highlight) return false;\n    else return highlight.color === color && highlight.index === index;\n};\n\ntype BoxProps = { content: ReactNode; color: Exclude<Color, Color.BLACK>; gePrefix?: boolean; index: number };\n\nexport const Box = ({ content, color, gePrefix, index }: BoxProps) => {\n    const { crossed, newContent, highlight } = useVeryCleverSub((state) => {\n        const highlight = _isHighLight(state.highlight, color, index);\n        switch (color) {\n            case Color.ORANGE:\n            case Color.PURPLE:\n                return { crossed: false, newContent: state[color][index], highlight };\n            default:\n                return { crossed: state[color][index], highlight };\n        }\n    });\n\n    const onClick = useCallback(() => {\n        VeryCleverLogic.boxClicked(color, index);\n    }, [color, index]);\n\n    return (\n        <div\n            onClick={onClick}\n            className={Util.classNames('box', crossed && 'crossed', highlight && 'highlight')}\n            style={{ color, borderColor: color }}>\n            {gePrefix ? (\n                <div className=\"content\">\n                    &ge;\n                    {content}\n                </div>\n            ) : newContent ? (\n                <div className=\"picked\">{newContent}</div>\n            ) : (\n                <div className=\"content\">{content}</div>\n            )}\n        </div>\n    );\n};\n","import React, { ReactNode } from 'react';\nimport { Bonus } from './Bonus';\nimport { Util } from '../../util/util';\nimport { Box } from './Box';\nimport { BONUS, Color } from './data';\n\ntype BoxRowProps = {\n    color: Exclude<Color, Color.BLACK>;\n    contents: ReactNode[];\n    className?: string;\n    gePrefix?: boolean;\n    bonusList: Array<BONUS | undefined>;\n    points?: number[];\n};\n\nexport const BoxRow: React.FC<BoxRowProps> = ({ color, contents, className, gePrefix, bonusList, points = [] }) => (\n    <div className={Util.classNames('grid-row', className)} style={{ borderColor: color }}>\n        {contents.map((content, index) => {\n            const point = points[index];\n            const bonus = bonusList[index];\n            return (\n                <div key={index} className=\"grid-item\">\n                    <Box content={content} color={color} gePrefix={gePrefix} index={index} />\n                    {point && (\n                        <div className=\"points\" style={{ backgroundColor: color }}>\n                            {point}\n                        </div>\n                    )}\n                    {bonus && <Bonus bonus={bonus} />}\n                </div>\n            );\n        })}\n    </div>\n);\n","import React, { Fragment } from 'react';\nimport { Bonus } from './Bonus';\nimport { Util } from '../../util/util';\nimport { Box } from './Box';\nimport { Icon } from '../../components/icons/icon';\nimport { BONUS, Color } from './data';\n\ntype BoxGridProps = {\n    color: Exclude<Color, Color.BLACK>;\n    contents: Array<string | number>;\n    rowBonusList: BONUS[];\n    columnBonusList: BONUS[];\n};\n\nconst array6 = Util.array(6);\n\nexport const BoxGrid = ({ color, contents, rowBonusList, columnBonusList }: BoxGridProps) => (\n    <div className=\"grid-box-outer\">\n        <div className=\"grid-box\" style={{ borderColor: color, color }}>\n            {Util.array(contents.length / 4).map((_, row) => (\n                <Fragment key={row}>\n                    {contents.slice(row * 4, row * 4 + 4).map((content, key) => (\n                        <div className=\"grid-item\" key={key}>\n                            <Box key={key} content={content} color={color} index={4 * row + key} />\n                        </div>\n                    ))}\n                    <div className=\"grid-item grid-arrow\">\n                        <Icon.ArrowRight />\n                    </div>\n                    <div className=\"grid-item\">\n                        <Bonus bonus={rowBonusList[row]} />\n                    </div>\n                </Fragment>\n            ))}\n            {array6.map((_, i) => (\n                <div className=\"grid-item grid-arrow\" key={i}>\n                    {i < columnBonusList.length ? (\n                        i === 4 ? (\n                            <Icon.ArrowRight className=\"rotate-45\" />\n                        ) : (\n                            <Icon.ArrowDown />\n                        )\n                    ) : null}\n                </div>\n            ))}\n            {}\n            {columnBonusList.map((bonus, i) => (\n                <Fragment key={i}>\n                    {i === 4 && <div className=\"grid-item\" />}\n                    <div className=\"grid-item\">\n                        <Bonus bonus={bonus} />\n                    </div>\n                </Fragment>\n            ))}\n        </div>\n    </div>\n);\n","import React from 'react';\nimport { useVeryCleverSub } from './VeryClever-store';\nimport { VeryCleverLogic } from './VeryClever-logic';\nimport { __ } from 'first-intl';\n\nexport const Points: React.FC = () => {\n    const { points } = useVeryCleverSub((state) => ({ points: VeryCleverLogic.points(state) }));\n\n    return (\n        <div className=\"points-total\">\n            {__('VC.points')}\n            {points}\n        </div>\n    );\n};\n","import React from 'react';\nimport { Bonus } from './Bonus';\nimport { BONUS } from './data';\nimport { VeryCleverLogic } from './VeryClever-logic';\n\nexport type ActivatedBonusProps = { earned: BONUS[] };\n\nexport const ActivatedBonus: React.FC<ActivatedBonusProps> = ({ earned }) =>\n    earned.length ? (\n        <div className=\"bonus-splash\" onClick={VeryCleverLogic.useBonus}>\n            <div className=\"bonus-splash-overlay\" />\n            <div className=\"bonus-splash-inner\">\n                {earned.map((bonus: BONUS, index: number) => (\n                    <Bonus bonus={bonus} key={index} />\n                ))}\n            </div>\n        </div>\n    ) : null;\n","import React from 'react';\nimport { useVeryCleverSub } from './VeryClever-store';\nimport { AvailablePlusOneBonus, AvailableReshuffleBonus } from './AvailableBonus';\nimport { RoundOverview } from './RoundOverview';\nimport { ValueSelection } from './ValueSelection';\nimport { Color, Data } from './data';\nimport { BoxRow } from './BoxRow';\nimport { BoxGrid } from './BoxGrid';\nimport { Points } from './Points';\nimport { ActivatedBonus } from './ActivatedBonus';\n\nexport const VeryCleverInner: React.FC = () => {\n    const { selection, bonus } = useVeryCleverSub(({ selection, bonus }) => ({ selection, bonus }));\n    return (\n        <div className=\"very-clever-outer\">\n            <div className=\"very-clever\">\n                <RoundOverview />\n                <AvailableReshuffleBonus />\n                <AvailablePlusOneBonus />\n                <BoxGrid\n                    color={Color.YELLOW}\n                    contents={Data[Color.YELLOW].contents}\n                    rowBonusList={Data[Color.YELLOW].rowBonus}\n                    columnBonusList={Data[Color.YELLOW].columnBonus}\n                />\n                <BoxGrid\n                    color={Color.BLUE}\n                    contents={Data[Color.BLUE].contents}\n                    rowBonusList={Data[Color.BLUE].rowBonus}\n                    columnBonusList={Data[Color.BLUE].columnBonus}\n                />\n                <BoxRow\n                    color={Color.GREEN}\n                    contents={Data[Color.GREEN].contents}\n                    gePrefix\n                    bonusList={Data[Color.GREEN].bonus}\n                    points={Data[Color.GREEN].points}\n                />\n                <BoxRow\n                    color={Color.ORANGE}\n                    contents={Data[Color.ORANGE].contents}\n                    bonusList={Data[Color.ORANGE].bonus}\n                />\n                <BoxRow\n                    color={Color.PURPLE}\n                    contents={Data[Color.PURPLE].contents}\n                    className=\"growing\"\n                    bonusList={Data[Color.PURPLE].bonus}\n                />\n                <Points />\n                {selection && <ValueSelection color={selection} />}\n                {bonus && <ActivatedBonus earned={bonus} />}\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport { ErrorBoundary } from '../../components/ErrorBoundary';\nimport { VeryCleverInner } from './VeryCleverInner';\nimport { VeryCleverStore } from './VeryClever-store';\nimport { Footer } from '../../footer/Footer';\nimport { FooterUndo } from '../../footer/FooterUndo';\nimport { FooterRestart } from '../../footer/FooterRestart';\n\nconst VeryCleverFooter: React.FC = () => (\n    <Footer>\n        <FooterUndo onClick={VeryCleverStore.undo} />\n        <FooterRestart onClick={VeryCleverStore.reset} />\n    </Footer>\n);\n\nexport const VeryClever: React.FC = () => (\n    <ErrorBoundary fix={VeryCleverStore.reset}>\n        <VeryCleverInner />\n        <VeryCleverFooter />\n    </ErrorBoundary>\n);\n","import { Persistore } from 'persistore';\nimport { createStore } from 'react-use-sub';\n\nexport type CodePoint = 1 | 2 | 3 | 4;\nexport type Code = [CodePoint, CodePoint, CodePoint];\nexport type CodeWords = { first: string; second: string; third: string };\nexport type Results = { losses: number; wins: number };\nexport type Knowledge = [string[], string[], string[], string[]];\nconst NoKnowledge: Knowledge = [[], [], [], []];\nexport type PlayerState = { knowledge: Knowledge; code?: Code; guessed?: Code; codeWords?: CodeWords; round: number };\n\nexport type DecryptoState = { results: Results; me: PlayerState; enemy: PlayerState };\nconst initialDecryptoState: DecryptoState = {\n    results: { losses: 0, wins: 0 },\n    me: { knowledge: NoKnowledge, round: 0 },\n    enemy: { knowledge: NoKnowledge, round: 0 },\n};\n\nconst _key = 'decrypto';\n\nconst _fetch = (): DecryptoState => {\n    try {\n        const raw = Persistore.get(_key);\n        if (raw) {\n            return JSON.parse(raw);\n        }\n    } catch (e) {\n        // do nothing\n    }\n    return initialDecryptoState;\n};\nconst _persist = (state: DecryptoState) => Persistore.set(_key, JSON.stringify(state));\n\nconst [useDecryptoSub, Store] = createStore<DecryptoState>(_fetch());\nexport { useDecryptoSub };\n\nconst set: typeof Store['set'] = (update) => {\n    Store.set(update);\n    _persist(Store.get());\n};\n\nconst reset = () => set(initialDecryptoState);\n\nexport const DecryptoStore = { set, reset };\n","import React, { useState } from 'react';\nimport { FormInput } from '../../components/form/input';\nimport { FormData, Morfi } from 'morfi';\nimport { Code } from './Decrypto-store';\nimport { Icon } from '../../components/icons/icon';\nimport { __ } from 'first-intl';\n\ntype CodeWords = { first: string; second: string; third: string };\nconst initialCodeWords = { first: '', second: '', third: '' };\nconst initialCodeWordsData = { values: initialCodeWords, errors: {} };\nconst { Form, Fields } = Morfi.create<CodeWords>(initialCodeWords);\nconst codeWordValidator = (v?: string) => {\n    if (!v || !v.trim()) return { id: 'DECRYPTO.codeWord.required' };\n    try {\n        btoa(v);\n    } catch (e) {\n        return { id: 'DECRYPTO.codeWord.invalid' };\n    }\n};\nconst codeWordValidation = {\n    first: { onChange: codeWordValidator },\n    second: { onChange: codeWordValidator },\n    third: { onChange: codeWordValidator },\n};\n\nexport type CodeWordsSelectionProps = { onSubmit: (codeWords: CodeWords) => void; code?: Code };\n\nexport const CodeWordsSelection: React.FC<CodeWordsSelectionProps> = ({ onSubmit, code }) => {\n    const [codeWordsData, setCodeWordsData] = useState<FormData<CodeWords>>(initialCodeWordsData);\n    return (\n        <div className=\"code-words-selection\">\n            {code && (\n                <div className=\"code\">\n                    <span>{code.join('.')}</span>\n                </div>\n            )}\n            <Form onChange={setCodeWordsData} data={codeWordsData} onSubmit={onSubmit} validation={codeWordValidation}>\n                <FormInput Field={Fields.first} />\n                <FormInput Field={Fields.second} />\n                <FormInput Field={Fields.third} />\n                <button type=\"submit\" disabled={Morfi.hasErrors(codeWordsData)}>\n                    <Icon.Mask />\n                    <div className=\"description\">{__('DECRYPTO.btn.submit')}</div>\n                </button>\n            </Form>\n        </div>\n    );\n};\n","import React, { ReactNode, useCallback, useState } from 'react';\n\nexport type SelectOverlayValueProps<T> = {\n    value: T;\n    children: ReactNode;\n    onChange: (value: T) => void;\n    close: () => void;\n};\n\nexport const SelectOverlayValue = <T extends any>({ value, children, onChange, close }: SelectOverlayValueProps<T>) => {\n    const onClick = useCallback(() => {\n        onChange(value);\n        close();\n    }, [onChange, close, value]);\n    return (\n        <div className=\"value\" onClick={onClick}>\n            {children}\n        </div>\n    );\n};\n\nexport type SelectOverlayOption<T> = { value: T; node: ReactNode };\nexport type SelectOverlayProps<T> = {\n    children: ReactNode;\n    options: SelectOverlayOption<T>[];\n    onChange: (value: T) => void;\n};\n\nexport const SelectOverlay = <T extends any>({ children, options, onChange }: SelectOverlayProps<T>) => {\n    const [isOpen, setOpen] = useState<boolean>(false);\n\n    const close = useCallback(() => setOpen(false), []);\n    const open = useCallback(() => setOpen(true), []);\n\n    return (\n        <>\n            <span onClick={open}>{children}</span>\n            {isOpen && (\n                <div className=\"select-overlay\">\n                    <div className=\"select-overlay-inner\">\n                        {options.map(({ value, node }, index) => (\n                            <SelectOverlayValue key={index} close={close} onChange={onChange} value={value}>\n                                {node}\n                            </SelectOverlayValue>\n                        ))}\n                    </div>\n                    <div className=\"select-overlay-outer\" onClick={close} />\n                </div>\n            )}\n        </>\n    );\n};\n","import React, { useCallback, useMemo, useState } from 'react';\nimport { Code, CodePoint, CodeWords } from './Decrypto-store';\nimport { SelectOverlay, SelectOverlayOption } from '../../components/form/SelectOverlay';\nimport { Icon } from '../../components/icons/icon';\nimport { __ } from 'first-intl';\nimport { Util } from '../../util/util';\n\nexport type GuessCodeProps = { onSubmit: (guessed: Code) => void; codeWords: CodeWords };\nconst GuessOptions: SelectOverlayOption<CodePoint>[] = [\n    { value: 1 as CodePoint, node: 1 },\n    { value: 2 as CodePoint, node: 2 },\n    { value: 3 as CodePoint, node: 3 },\n    { value: 4 as CodePoint, node: 4 },\n];\n\nconst _getDuplicated = (first?: CodePoint, second?: CodePoint, third?: CodePoint): number | undefined => {\n    if (first && first === second) return first;\n    if (third && (third === second || third === first)) return third;\n};\nconst _getAllDuplicated = (first?: CodePoint, second?: CodePoint, third?: CodePoint): [boolean, boolean, boolean] => {\n    const duplicate = _getDuplicated(first, second, third);\n    return duplicate ? [duplicate === first, duplicate === second, duplicate === third] : [false, false, false];\n};\n\nexport const GuessCode: React.FC<GuessCodeProps> = ({ onSubmit, codeWords }) => {\n    const [first, setFirst] = useState<CodePoint | undefined>();\n    const [second, setSecond] = useState<CodePoint | undefined>();\n    const [third, setThird] = useState<CodePoint | undefined>();\n    const duplicated = _getAllDuplicated(first, second, third);\n\n    const wasGuessed = useMemo<boolean>(\n        () => !!(first && second && third && first !== second && first !== third && second !== third),\n        [first, second, third]\n    );\n\n    const onGuessedMe = useCallback(() => {\n        onSubmit([first!, second!, third!]);\n    }, [onSubmit, first, second, third]);\n\n    return (\n        <div className=\"guessing\">\n            <div className=\"guess\">\n                <div className=\"code-word\">{codeWords.first}</div>\n                <SelectOverlay options={GuessOptions} onChange={setFirst}>\n                    <span className={Util.classNames('code-guess', duplicated[0] && 'invalid')}>{first ?? '?'}</span>\n                </SelectOverlay>\n            </div>\n            <div className=\"guess\">\n                <div className=\"code-word\">{codeWords.second}</div>\n                <SelectOverlay options={GuessOptions} onChange={setSecond}>\n                    <span className={Util.classNames('code-guess', duplicated[1] && 'invalid')}>{second ?? '?'}</span>\n                </SelectOverlay>\n            </div>\n            <div className=\"guess\">\n                <div className=\"code-word\">{codeWords.third}</div>\n                <SelectOverlay options={GuessOptions} onChange={setThird}>\n                    <span className={Util.classNames('code-guess', duplicated[2] && 'invalid')}>{third ?? '?'}</span>\n                </SelectOverlay>\n            </div>\n            {wasGuessed && (\n                <button onClick={onGuessedMe} type=\"button\">\n                    <Icon.Key />\n                    <div className=\"description\">{__('DECRYPTO.btn.decode')}</div>\n                </button>\n            )}\n        </div>\n    );\n};\n","import React from 'react';\nimport { Code, CodeWords } from './Decrypto-store';\nimport { Util } from '../../util/util';\n\nexport type GuessResultProps = { codeWords: CodeWords; code: Code; guessed: Code };\n\nexport const GuessResult: React.FC<GuessResultProps> = ({ codeWords, code, guessed }) => {\n    const firstIncorrect = guessed[0] !== code[0];\n    const secondIncorrect = guessed[1] !== code[1];\n    const thirdIncorrect = guessed[2] !== code[2];\n\n    return (\n        <div className=\"guessed\">\n            <div className=\"guess\">\n                <div className=\"code-word\">{codeWords.first}</div>\n                <span className={Util.classNames('code-guess', firstIncorrect ? 'invalid' : 'valid')}>\n                    {guessed[0]}\n                </span>\n                {firstIncorrect && <span className=\"code-was\">{code[0]}</span>}\n            </div>\n            <div className=\"guess\">\n                <div className=\"code-word\">{codeWords.second}</div>\n                <span className={Util.classNames('code-guess', secondIncorrect ? 'invalid' : 'valid')}>\n                    {guessed[1]}\n                </span>\n                {secondIncorrect && <span className=\"code-was\">{code[1]}</span>}\n            </div>\n            <div className=\"guess\">\n                <div className=\"code-word\">{codeWords.third}</div>\n                <span className={Util.classNames('code-guess', thirdIncorrect ? 'invalid' : 'valid')}>\n                    {guessed[2]}\n                </span>\n                {thirdIncorrect && <span className=\"code-was\">{code[2]}</span>}\n            </div>\n        </div>\n    );\n};\n","import React, { useMemo } from 'react';\nimport { Knowledge } from './Decrypto-store';\n\nexport type KnowledgeViewProps = { knowledge: Knowledge };\n\nexport const KnowledgeView: React.FC<KnowledgeViewProps> = ({ knowledge }) => {\n    const rows = useMemo(() => {\n        const result = [];\n        const max = knowledge.reduce((red, cur) => Math.max(red, cur.length), 0);\n        for (let i = 0; i < max; i++) {\n            result.push(\n                <tr key={i}>\n                    {knowledge.map((k, idx) => (\n                        <td key={idx}>{k[i]}</td>\n                    ))}\n                </tr>\n            );\n        }\n        return result;\n    }, [knowledge]);\n\n    return (\n        <div className=\"knowledge\">\n            <table>\n                <thead>\n                    <tr>\n                        <td>1</td>\n                        <td>2</td>\n                        <td>3</td>\n                        <td>4</td>\n                    </tr>\n                </thead>\n                <tbody>{rows}</tbody>\n            </table>\n        </div>\n    );\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport QRCode from 'qrcode';\n\ntype ColorOption = { dark?: string; light?: string };\nconst transparent = '#0000';\n// we always choose transparent bg if any color of the qr code itself was chosen,\n// because the bg can be better regulated by the outer css styles\nexport const QrCodeColorOptions = {\n    white: { dark: '#FFF', light: transparent },\n    black: { dark: '#000', light: transparent },\n};\n\nexport type QrCodeOptions = { margin?: number; width?: number; color?: ColorOption };\n\ntype QrCodeProps = { info: string; options: QrCodeOptions };\n\nexport const QrCode: React.FC<QrCodeProps> = ({ info, options }) => {\n    const [error, setError] = useState<Error | undefined>();\n    const canvas = useRef<HTMLCanvasElement | null>(null);\n\n    useEffect(() => {\n        QRCode.toCanvas(canvas.current, info, options, (error) => {\n            if (error) setError(error);\n        });\n    }, [info, options]);\n\n    if (error) return <>Ups, something went wrong (Code: QR1)</>;\n\n    return <canvas ref={canvas} />;\n};\n","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport QrCode from 'qrcode-reader';\nimport { Code, CodeWords } from './Decrypto-store';\nimport { __ } from 'first-intl';\n\nconst openStream = (): Promise<MediaStream> =>\n    navigator.mediaDevices.getUserMedia({ audio: false, video: { facingMode: 'environment' } });\n\ntype QrCodeScannerProps = { onInput: (input: { code: Code; codeWords: CodeWords }) => void; prepareClose: boolean };\n\nexport const QrCodeScanner: React.FC<QrCodeScannerProps> = ({ onInput, prepareClose }) => {\n    const [permissionDenied, setPermissionDenied] = useState(false);\n    const [error, setError] = useState<Error | undefined>();\n    const [stream, setStream] = useState<MediaStream | undefined>();\n    const streamRef = useRef<MediaStream | undefined>();\n    streamRef.current = stream;\n    const { width, height } = useMemo(\n        () => ({\n            width: window.innerWidth,\n            height: window.innerHeight,\n        }),\n        []\n    );\n    const canvas = useRef<HTMLCanvasElement | null>(null);\n    const video = useRef<HTMLVideoElement | null>(null);\n    const isRunning = useRef(false);\n    const isFinished = useRef(false);\n    const createSnap = useRef(() => {});\n\n    const clearStream = useCallback((): void => {\n        streamRef.current!.getTracks().forEach((track) => streamRef.current!.removeTrack(track));\n        video.current!.srcObject = null;\n        video.current!.src = '';\n    }, []);\n\n    useEffect(() => {\n        openStream()\n            .then(setStream)\n            .catch((e) => {\n                if (e.name === 'NotAllowedError') {\n                    // if encountered first time show the user the warning and consequently fail by trying to open\n                    // the media stream, because that helps to notify him that we want to open the stream.\n                    setPermissionDenied(true);\n                } else {\n                    // clear the interval, because will not be solved soon\n                    setError(e);\n                }\n            });\n    }, [clearStream]);\n\n    useEffect(() => {\n        if (prepareClose) {\n            video.current!.pause(); // eslint-disable-line react-hooks/exhaustive-deps\n            clearStream();\n        }\n    }, [prepareClose, clearStream]);\n\n    const startScanning = useCallback((): void => {\n        window.requestAnimationFrame(createSnap.current);\n    }, []);\n\n    useEffect(() => {\n        const videoElem = video.current!;\n        if (stream && !isRunning.current) {\n            isRunning.current = true;\n            if ('srcObject' in videoElem) {\n                videoElem.srcObject = stream;\n            } else {\n                // Avoid using this in new browsers, as it is going away.\n                videoElem!.src = window.URL.createObjectURL(stream);\n            }\n            // we have to set those attributes to empty strings, to ensure that\n            // the video displays anything on safari ios\n            videoElem.setAttribute('autoplay', '');\n            videoElem.setAttribute('muted', '');\n            videoElem.setAttribute('playsinline', '');\n            startScanning();\n        }\n    }, [startScanning, stream]);\n\n    const handleQrCodeResult = useCallback(\n        (error: any, result: { result: string }) => {\n            if (error || prepareClose) return startScanning();\n            try {\n                const { code, codeWords } = JSON.parse(atob(result.result));\n                if (\n                    code.every((p: any) => typeof p === 'number') &&\n                    typeof codeWords.first === 'string' &&\n                    typeof codeWords.second === 'string' &&\n                    typeof codeWords.third === 'string'\n                ) {\n                    if (!isFinished.current) {\n                        isFinished.current = true;\n                        onInput({ code, codeWords });\n                    }\n                }\n            } catch (e) {\n                // do nothing\n            }\n            // in every case we need to start scanning again, because\n            // the video stream needs to be active to get closed accordingly\n            // else the browser does not know the stream can be removed\n            startScanning();\n        },\n        [onInput, startScanning, prepareClose]\n    );\n\n    createSnap.current = useCallback((): void => {\n        const context = canvas.current && canvas.current.getContext('2d');\n\n        if (context) {\n            const qr = new QrCode();\n            (context as any).drawImage(video.current, 0, 0, width, height, 0, 0, width, height);\n            const imageData = context.getImageData(0, 0, width, height);\n            qr.callback = handleQrCodeResult;\n            qr.decode(imageData);\n        }\n    }, [handleQrCodeResult, height, width]);\n\n    if (permissionDenied) return <>{__('media.camAccess.required')}</>;\n    if (error) return <>Ups, something went wrong (Code: QR2)</>;\n\n    return (\n        <div className=\"scanner\">\n            {stream && (\n                <div>\n                    <video ref={video} />\n                    <canvas width={width} height={height} ref={canvas} />\n                </div>\n            )}\n        </div>\n    );\n};\n","import React from 'react';\nimport { createStore } from 'react-use-sub';\nimport { QrCode, QrCodeColorOptions } from './QrCode';\nimport { QrCodeScanner } from './QrCodeScanner';\nimport { Code, CodeWords, DecryptoStore } from './Decrypto-store';\nimport { Icon } from '../../components/icons/icon';\n\ntype QrCodeState = { info: string | null; scanning: boolean; closingScanner: boolean };\nconst initialQrCodeState = { info: null, scanning: false, closingScanner: false };\n\nconst [useQrCodeInfo, qrCodeInfoStore] = createStore<QrCodeState>(initialQrCodeState);\n\nexport const closeQrCodeOverlay = () => {\n    const { closingScanner, scanning } = qrCodeInfoStore.get();\n    if (closingScanner) return;\n    else if (scanning) {\n        qrCodeInfoStore.set({ closingScanner: true });\n        // we need to close the scanner in two different phases\n        // 1. notify the scanner to clear the active video stream\n        // 2. remove the HTML elements by closing the React component\n        // this has to be done with a certain delay, which is quite high, but\n        // the user will be displayed immediate feedback by hiding the HTML elements\n        setTimeout(() => qrCodeInfoStore.set(initialQrCodeState), 1000);\n    } else {\n        qrCodeInfoStore.set(initialQrCodeState);\n    }\n};\nexport const openQrCodeInfoOverlay = (info: string) => qrCodeInfoStore.set({ info });\nexport const openQrCodeScannerOverlay = () => qrCodeInfoStore.set({ scanning: true });\n\nconst _onScanInput = ({ code, codeWords }: { code: Code; codeWords: CodeWords }) => {\n    closeQrCodeOverlay();\n    DecryptoStore.set(({ enemy }) => ({ enemy: { ...enemy, code, codeWords, round: enemy.round + 1 } }));\n};\n\nexport const QrCodeOverlay: React.FC = () => {\n    const { info, scanning, closingScanner } = useQrCodeInfo((state) => state);\n    const width = Math.min(window.innerWidth, window.innerHeight);\n\n    return info ? (\n        <div className=\"qr-code\">\n            <QrCode info={info} options={{ color: QrCodeColorOptions.black, width }} />\n            <button onClick={closeQrCodeOverlay}>\n                <Icon.Times />\n            </button>\n        </div>\n    ) : scanning ? (\n        <div className=\"qr-scanning\" style={closingScanner ? { display: 'none' } : undefined}>\n            <QrCodeScanner onInput={_onScanInput} prepareClose={closingScanner} />\n            <button onClick={closeQrCodeOverlay}>\n                <Icon.Times />\n            </button>\n        </div>\n    ) : null;\n};\n","import React, { useCallback } from 'react';\nimport { Code, CodeWords } from './Decrypto-store';\nimport { openQrCodeInfoOverlay } from './QrCodeOverlay';\nimport { Icon } from '../../components/icons/icon';\nimport { __ } from 'first-intl';\n\nexport type ShowQrCodeProps = { code: Code; codeWords: CodeWords };\n\nexport const ShowQrCode: React.FC<ShowQrCodeProps> = ({ codeWords, code }) => {\n    const onClick = useCallback(() => openQrCodeInfoOverlay(btoa(JSON.stringify({ code, codeWords }))), [\n        code,\n        codeWords,\n    ]);\n\n    return (\n        <button className=\"open-qr-code\" onClick={onClick} type=\"button\">\n            <Icon.QrCode />\n            <div className=\"description\">{__('DECRYPTO.btn.transfer')}</div>\n        </button>\n    );\n};\n","import React from 'react';\nimport { Util } from '../../util/util';\nimport { Code, CodeWords, DecryptoStore, useDecryptoSub } from './Decrypto-store';\nimport { CodeWordsSelection } from './CodeWordsSelection';\nimport { GuessCode } from './GuessCode';\nimport { GuessResult } from './GuessResult';\nimport { KnowledgeView } from './KnowledgeView';\nimport { ShowQrCode } from './ShowQrCode';\nimport { __ } from 'first-intl';\n\nconst _randomCode = (): Code => Util.arrayShuffle([1, 2, 3, 4]).slice(0, 3) as Code;\nconst _generateCode = () =>\n    DecryptoStore.set(({ me }) => ({\n        me: { ...me, code: _randomCode(), codeWords: undefined, guessed: undefined, round: me.round + 1 },\n    }));\nconst _setCodeWords = (codeWords: CodeWords) => DecryptoStore.set(({ me }) => ({ me: { ...me, codeWords } }));\nconst _setGuessed = (guessed: Code) =>\n    DecryptoStore.set(({ me, results: { wins, losses } }) => {\n        const { codeWords, code } = me;\n        const { first, second, third } = codeWords!;\n        const wrongGuess = guessed[0] !== code![0] || guessed[1] !== code![1] || guessed[2] !== code![2];\n        const knowledge: any = [...me.knowledge].map((arr) => [...arr]);\n        knowledge[code![0] - 1].push(first);\n        knowledge[code![1] - 1].push(second);\n        knowledge[code![2] - 1].push(third);\n        const updatedMe = { me: { ...me, knowledge, guessed } };\n        return wrongGuess ? { ...updatedMe, results: { wins, losses: losses + 1 } } : updatedMe;\n    });\n\nexport const DecryptoMe: React.FC = () => {\n    const { code, codeWords, guessed, knowledge, round } = useDecryptoSub(({ me }) => me);\n    const disableGeneration = useDecryptoSub(({ enemy: { guessed, round }, me, results: { wins, losses } }) => {\n        const finishedEnemyRound = guessed ? round : round - 1;\n        const meRound = me.round;\n        const lostOrWon = losses > 1 || wins > 1;\n        return lostOrWon || (meRound > 0 && finishedEnemyRound !== meRound);\n    });\n\n    const noCodeOrFinishedGuessing = !code || !!(code && codeWords && guessed);\n\n    return (\n        <>\n            {round > 0 && (\n                <div className=\"round\">\n                    {__('DECRYPTO.round')} {round}\n                </div>\n            )}\n            {noCodeOrFinishedGuessing && (\n                <div className=\"generate-code\">\n                    <button onClick={_generateCode} type=\"button\" disabled={disableGeneration}>\n                        ?.?.?\n                        <div className=\"description\">{__('DECRYPTO.btn.generate')}</div>\n                    </button>\n                </div>\n            )}\n            {code && !codeWords && <CodeWordsSelection onSubmit={_setCodeWords} code={code} />}\n            {code && codeWords && !guessed && <GuessCode onSubmit={_setGuessed} codeWords={codeWords} />}\n            {code && codeWords && guessed && <GuessResult codeWords={codeWords} code={code} guessed={guessed} />}\n            {code && codeWords && <ShowQrCode code={code} codeWords={codeWords} />}\n            <KnowledgeView knowledge={knowledge} />\n        </>\n    );\n};\n","import React, { useCallback } from 'react';\nimport { Code, DecryptoStore, PlayerState, useDecryptoSub } from './Decrypto-store';\nimport { GuessCode } from './GuessCode';\nimport { GuessResult } from './GuessResult';\nimport { KnowledgeView } from './KnowledgeView';\nimport { openQrCodeScannerOverlay } from './QrCodeOverlay';\nimport { Icon } from '../../components/icons/icon';\nimport { __ } from 'first-intl';\n\nconst _setEnemy = (meUpdates: Partial<PlayerState>) =>\n    DecryptoStore.set(({ enemy }) => ({ enemy: { ...enemy, ...meUpdates } }));\nconst _setGuessed = (guessed: Code) =>\n    DecryptoStore.set(({ enemy, results: { wins, losses } }) => {\n        const { codeWords, code } = enemy;\n        const { first, second, third } = codeWords!;\n        const correctGuess = guessed[0] === code![0] && guessed[1] === code![1] && guessed[2] === code![2];\n        const knowledge: any = [...enemy.knowledge].map((arr) => [...arr]);\n        knowledge[code![0] - 1].push(first);\n        knowledge[code![1] - 1].push(second);\n        knowledge[code![2] - 1].push(third);\n        const updatedEnemy = { enemy: { ...enemy, knowledge, guessed } };\n        return correctGuess ? { ...updatedEnemy, results: { wins: wins + 1, losses } } : updatedEnemy;\n    });\n\nexport const DecryptoEnemy: React.FC = () => {\n    const { code, codeWords, guessed, knowledge, round } = useDecryptoSub(({ enemy }) => enemy);\n    const disableCatch = useDecryptoSub(({ me: { round, codeWords }, enemy, results: { wins, losses } }) => {\n        const readyMeRound = codeWords ? round : round - 1;\n        return readyMeRound <= enemy.round;\n    });\n\n    const onClick = useCallback(() => {\n        _setEnemy({ code: undefined, codeWords: undefined, guessed: undefined });\n        openQrCodeScannerOverlay();\n    }, []);\n\n    const noCodeOrFinishedGuessing = !code || !!(code && codeWords && guessed);\n\n    return (\n        <>\n            {round > 0 && (\n                <div className=\"round\">\n                    {__('DECRYPTO.round')} {round}\n                </div>\n            )}\n            {noCodeOrFinishedGuessing && (\n                <div className=\"scan-code\">\n                    <button onClick={onClick} type=\"button\" disabled={disableCatch}>\n                        <Icon.Glasses />\n                        <div className=\"description\">{__('DECRYPTO.btn.catch')}</div>\n                    </button>\n                </div>\n            )}\n            {code && codeWords && !guessed && <GuessCode onSubmit={_setGuessed} codeWords={codeWords} />}\n            {code && codeWords && guessed && <GuessResult codeWords={codeWords} code={code} guessed={guessed} />}\n            <KnowledgeView knowledge={knowledge} />\n        </>\n    );\n};\n","import { Persistore } from 'persistore';\nimport { createStore } from 'react-use-sub';\nimport { Player, PlayerStore } from '../../players/player-store';\nimport { Util } from '../../util/util';\n\nexport enum GimmickRow {\n    M1 = 'M1',\n    M2 = 'M2',\n    M3 = 'M3',\n    M4 = 'M4',\n    M5 = 'M5',\n    M6 = 'M6',\n    TRIPLE = 'TRIPLE',\n    FOURSOME = 'FOURSOME',\n    FULL_HOUSE = 'FULL_HOUSE',\n    SMALL_STREET = 'SMALL_STREET',\n    BIG_STREET = 'BIG_STREET',\n    SENSATION = 'SENSATION',\n    CHANCE = 'CHANCE',\n}\n\n/**\n * If has \"multiplier\" it will display X + 1 ... 6 and multiplies with the multiplier when calculating the points.\n * Else if has \"fixedValue\" it will display X + <fixedValue> as selectable points.\n * Else it will display X + Free-Number-Text-Option (values from 5 to 30 are allowed).\n */\nexport type GimmickRowSettings = { multiplier?: number; fixedValue?: number };\n\nexport const GIMMICK_ROW_SETTINGS: { [key in GimmickRow]: GimmickRowSettings } = {\n    [GimmickRow.M1]: { multiplier: 1 },\n    [GimmickRow.M2]: { multiplier: 2 },\n    [GimmickRow.M3]: { multiplier: 3 },\n    [GimmickRow.M4]: { multiplier: 4 },\n    [GimmickRow.M5]: { multiplier: 5 },\n    [GimmickRow.M6]: { multiplier: 6 },\n    [GimmickRow.TRIPLE]: {},\n    [GimmickRow.FOURSOME]: {},\n    [GimmickRow.FULL_HOUSE]: { fixedValue: 25 },\n    [GimmickRow.SMALL_STREET]: { fixedValue: 30 },\n    [GimmickRow.BIG_STREET]: { fixedValue: 40 },\n    [GimmickRow.SENSATION]: { fixedValue: 50 },\n    [GimmickRow.CHANCE]: {},\n};\n\nexport type PlayerState = Player & { points: Partial<{ [key in GimmickRow]: number }> };\n\ntype GimmickState = {\n    players: PlayerState[];\n};\n\nconst initialGimmickState: GimmickState = {\n    players: [],\n};\n\nconst _key = 'gimmick';\n\nconst getHistory = (): GimmickState[] => {\n    try {\n        const states = Persistore.get(_key);\n        return JSON.parse(states as any);\n    } catch (e) {\n        return [];\n    }\n};\n\nconst get = (): GimmickState => getHistory()[0] || initialGimmickState;\n\nconst [useGimmickSub, store] = createStore<GimmickState>(get());\n\nexport { useGimmickSub };\n\nconst set: typeof store['set'] = (updates) => {\n    store.set(updates);\n    const updatedState = store.get();\n\n    const history = getHistory();\n    history.unshift(updatedState);\n    if (history.length > 20) history.pop();\n    Persistore.set(_key, JSON.stringify(history));\n};\n\nconst restart = (): void => {\n    set(initialGimmickState);\n};\n\nconst undo = (): void => {\n    const history = getHistory();\n    if (history.length > 1) {\n        history.shift();\n        Persistore.set(_key, JSON.stringify(history));\n        const prevState = history[0];\n        store.set(prevState);\n    }\n};\n\nconst _newPlayer = (player: Player): PlayerState => ({\n    ...player,\n    points: {},\n});\n\nconst selectPlayers = (numberOfPlayers: number) => {\n    const players = PlayerStore.get().players.slice(0, numberOfPlayers).map(_newPlayer);\n    set({ players });\n};\n\nconst getCurrentActivePlayer = (players: PlayerState[]): PlayerState => {\n    const minSelected = Math.min(...players.map(({ points }) => Object.keys(points).length));\n    return players.find(({ points }) => Object.keys(points).length === minSelected)!;\n};\n\nconst _updatePlayer = (player: PlayerState) =>\n    set(({ players }) => {\n        const copy = [...players];\n        const index = copy.findIndex(({ uuid }) => uuid === player.uuid);\n        copy[index] = player;\n\n        return { players: copy };\n    });\n\nconst selectValue = (value: number, gimmickRow: GimmickRow) => {\n    const { multiplier } = GIMMICK_ROW_SETTINGS[gimmickRow];\n    const chosen = multiplier ? multiplier * value : value;\n    const player = getCurrentActivePlayer(store.get().players);\n    player.points[gimmickRow] = chosen;\n    _updatePlayer(player);\n};\n\nconst _finishedPoints = (points: PlayerState['points'], gimmickRows: GimmickRow[]) =>\n    gimmickRows.every((row) => points[row] !== undefined);\n\nconst finishedMultiplier = (points: PlayerState['points']): boolean =>\n    _finishedPoints(points, Object.values(GimmickRow).slice(0, 6));\n\nconst _finishedAll = (points: PlayerState['points']): boolean => _finishedPoints(points, Object.values(GimmickRow));\n\nconst allFinished = (players: PlayerState[]) => players.every((player) => _finishedAll(player.points));\n\nconst calculateBonus = (points: PlayerState['points']) => {\n    const multiplierPoints = Util.sum(\n        points[GimmickRow.M1],\n        points[GimmickRow.M2],\n        points[GimmickRow.M3],\n        points[GimmickRow.M4],\n        points[GimmickRow.M5],\n        points[GimmickRow.M6]\n    );\n    return multiplierPoints >= 63 ? 35 : 0;\n};\n\nconst calculateSum = ({ points }: PlayerState) => {\n    const allPoints = Util.sum(...Object.values(points));\n    return allPoints + calculateBonus(points);\n};\n\nconst playerWithMostPoints = (players: PlayerState[]) => {\n    const playersWithSums = players.map((player) => ({ player, sum: calculateSum(player) }));\n    const max = Math.max(...playersWithSums.map(({ sum }) => sum));\n    return playersWithSums.find(({ sum }) => sum === max)?.player;\n};\n\nexport const GimmickStore = {\n    restart,\n    undo,\n    selectPlayers,\n    selectValue,\n    getCurrentActivePlayer,\n    calculateSum,\n    calculateBonus,\n    finishedMultiplier,\n    allFinished,\n    playerWithMostPoints,\n};\n","import React, { useCallback, useState } from 'react';\nimport { Util } from '../../util/util';\nimport { useDecryptoSub } from './Decrypto-store';\nimport { DecryptoMe } from './DecryptoMe';\nimport { QrCodeOverlay } from './QrCodeOverlay';\nimport { DecryptoEnemy } from './DecryptoEnemy';\nimport { Icon } from '../../components/icons/icon';\nimport { NotifyResult } from './NotifyResult';\n\nexport const DecryptoInternal: React.FC = () => {\n    const [showEnemy, setShowEnemy] = useState<boolean>(false);\n    const { losses, wins } = useDecryptoSub(({ results }) => results);\n\n    const onSwitch = useCallback(() => setShowEnemy((s) => !s), []);\n\n    return (\n        <div\n            className={Util.classNames('decrypto', showEnemy && 'enemy', losses > 0 && 'alarm', wins > 0 && 'success')}>\n            <div className=\"decrypto-inner\">\n                <NotifyResult />\n                <div className=\"navigation\">\n                    <button type=\"button\" onClick={onSwitch}>\n                        <Icon.Exchange />\n                    </button>\n                </div>\n                <div className=\"content\">{showEnemy ? <DecryptoEnemy /> : <DecryptoMe />}</div>\n                <QrCodeOverlay />\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport { ErrorBoundary } from '../../components/ErrorBoundary';\nimport { DecryptoStore } from './Decrypto-store';\nimport { DecryptoInternal } from './Decrypto';\nimport { Footer } from '../../footer/Footer';\nimport { FooterRestart } from '../../footer/FooterRestart';\n\nconst DecryptoFooter: React.FC = () => (\n    <Footer>\n        <FooterRestart onClick={DecryptoStore.reset} />\n    </Footer>\n);\n\nexport const Decrypto: React.FC = () => (\n    <ErrorBoundary fix={DecryptoStore.reset}>\n        <DecryptoInternal />\n        <DecryptoFooter />\n    </ErrorBoundary>\n);\n","export enum QuixxColor {\n    RED = '#f84a4a',\n    YELLOW = '#ffbb00',\n    GREEN = '#30b204',\n    BLUE = '#416af7',\n}\n\nexport type QuixxField = { color: QuixxColor; value: number };\n\nexport type QuixxData = QuixxField[][];\n\nexport const QUIXX_DEFAULT_DATA: QuixxData = [\n    [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, -1].map((value) => ({ color: QuixxColor.RED, value })),\n    [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, -1].map((value) => ({ color: QuixxColor.YELLOW, value })),\n    [12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, -1].map((value) => ({ color: QuixxColor.GREEN, value })),\n    [12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, -1].map((value) => ({ color: QuixxColor.BLUE, value })),\n];\n","import React, { useState } from 'react';\nimport { Morfi, FormData } from 'morfi';\nimport { FormInput } from '../../components/form/input';\nimport { __ } from 'first-intl';\nimport { GimmickStore } from './gimmick-store';\nimport { PlayerSelection } from '../../players/PlayerSelection';\nimport { PlayerStore } from '../../players/player-store';\n\nexport type StartupInfoValues = { numberOfPlayers: string };\nconst StartupInfoValidations = {\n    numberOfPlayers: {\n        onChange: (v?: string) => {\n            const num = Number(v);\n            if (isNaN(num) || num < 1 || num > 10) return { id: 'players.count.invalid', values: { min: 1, max: 10 } };\n            if (num > PlayerStore.get().players.length) return { id: 'players.count.exceedsRegistered' };\n        },\n    },\n};\n\nconst submit = ({ numberOfPlayers }: StartupInfoValues) => {\n    GimmickStore.selectPlayers(+numberOfPlayers);\n};\n\nconst initialValues: StartupInfoValues = { numberOfPlayers: '' };\nconst { Form, Fields } = Morfi.create<StartupInfoValues>(initialValues);\n\nexport const StartupInfoPicker = () => {\n    const [data, setData] = useState<FormData<StartupInfoValues>>({ values: initialValues, errors: {} });\n\n    return (\n        <div className=\"spade-is-trump\">\n            <div className=\"configs\">\n                <Form\n                    className=\"startup\"\n                    onSubmit={submit}\n                    validation={StartupInfoValidations}\n                    data={data}\n                    onChange={setData}>\n                    <FormInput Field={Fields.numberOfPlayers} label=\"players.count\" type=\"number\" />\n                    <button type=\"submit\">{__('APP.start')}</button>\n                </Form>\n            </div>\n            <PlayerSelection />\n        </div>\n    );\n};\n","import React, { useCallback, useState } from 'react';\nimport { GIMMICK_ROW_SETTINGS, GimmickRow, GimmickStore } from './gimmick-store';\nimport { FormInput } from '../../components/form/input';\nimport { FormData, Morfi } from 'morfi';\nimport { Util } from '../../util/util';\n\nexport type ValueSelectionValues = { num: string };\nconst ValueSelectionValidations = {\n    num: {\n        onSubmit: (v?: string) => {\n            const num = Number(v);\n            if (isNaN(num) || num < 5 || num > 30) return { id: 'GIMMICK.value.invalid', values: { min: 5, max: 30 } };\n        },\n    },\n};\n\nconst initialValues: ValueSelectionValues = { num: '' };\nconst { Form, Fields } = Morfi.create<ValueSelectionValues>(initialValues);\n\nexport type ValueSelectionOptionProps = { value: number; gimmickRow: GimmickRow; close: () => void };\n\nexport const ValueSelectionOption: React.FC<ValueSelectionOptionProps> = ({ value, gimmickRow, close }) => {\n    const [data, setData] = useState<FormData<ValueSelectionValues>>({ values: initialValues, errors: {} });\n\n    const onClick = useCallback(() => {\n        GimmickStore.selectValue(value, gimmickRow);\n        close();\n    }, [value, gimmickRow, close]);\n\n    const onSubmit = useCallback(\n        ({ num }: ValueSelectionValues) => {\n            GimmickStore.selectValue(+num, gimmickRow);\n            close();\n        },\n        [gimmickRow, close]\n    );\n\n    return (\n        <div\n            className={Util.classNames('value', value === -1 && 'no-hover')}\n            onClick={value === -1 ? undefined : onClick}>\n            {value === -1 ? (\n                <Form onSubmit={onSubmit} validation={ValueSelectionValidations} data={data} onChange={setData}>\n                    <FormInput Field={Fields.num} type=\"number\" autoFocus />\n                </Form>\n            ) : value === 0 ? (\n                '✘'\n            ) : value > 10 ? (\n                '✓'\n            ) : (\n                value\n            )}\n        </div>\n    );\n};\n\ntype ValueSelectionProps = { gimmickRow: GimmickRow; close: () => void };\n\nexport const ValueSelection: React.FC<ValueSelectionProps> = ({ gimmickRow, close }) => {\n    const { multiplier, fixedValue } = GIMMICK_ROW_SETTINGS[gimmickRow];\n\n    return (\n        <div className=\"select-overlay\">\n            <div className=\"select-overlay-inner\">\n                {multiplier\n                    ? [0, 1, 2, 3, 4, 5].map((v) => (\n                          <ValueSelectionOption key={v} gimmickRow={gimmickRow} value={v} close={close} />\n                      ))\n                    : fixedValue\n                    ? [0, fixedValue].map((v) => (\n                          <ValueSelectionOption key={v} gimmickRow={gimmickRow} value={v} close={close} />\n                      ))\n                    : [0, -1].map((v) => (\n                          <ValueSelectionOption key={v} gimmickRow={gimmickRow} value={v} close={close} />\n                      ))}\n            </div>\n            <div className=\"select-overlay-outer\" onClick={close} />\n        </div>\n    );\n};\n","import React, { ReactNode } from 'react';\nimport { GimmickRow, PlayerState } from './gimmick-store';\nimport { Util } from '../../util/util';\nimport { Cube } from '../Again/Cube';\nimport { __string } from 'first-intl';\n\nconst GIMMICK_NODES: { [key in GimmickRow]: ReactNode } = {\n    [GimmickRow.M1]: <Cube count={1} />,\n    [GimmickRow.M2]: <Cube count={2} />,\n    [GimmickRow.M3]: <Cube count={3} />,\n    [GimmickRow.M4]: <Cube count={4} />,\n    [GimmickRow.M5]: <Cube count={5} />,\n    [GimmickRow.M6]: <Cube count={6} />,\n    [GimmickRow.TRIPLE]: __string('GIMMICK.triple'),\n    [GimmickRow.FOURSOME]: __string('GIMMICK.foursome'),\n    [GimmickRow.FULL_HOUSE]: __string('GIMMICK.fullHouse'),\n    [GimmickRow.SMALL_STREET]: __string('GIMMICK.smallStreet'),\n    [GimmickRow.BIG_STREET]: __string('GIMMICK.bigStreet'),\n    [GimmickRow.SENSATION]: __string('GIMMICK.sensation'),\n    [GimmickRow.CHANCE]: __string('GIMMICK.chance'),\n};\n\nexport type GimmickRowViewProps = {\n    row: GimmickRow;\n    players: PlayerState[];\n    activePlayer: PlayerState;\n    onClick: (row: GimmickRow) => void;\n};\n\nexport const GimmickRowView: React.FC<GimmickRowViewProps> = ({ row, players, activePlayer, onClick }) => (\n    <tr>\n        <td className=\"first\">{GIMMICK_NODES[row]}</td>\n        {players.map(({ points, uuid }) => (\n            <td\n                className={Util.classNames(activePlayer.uuid === uuid || 'inactive')}\n                key={uuid}\n                // eslint-disable-next-line\n                onClick={points[row] === undefined && activePlayer.uuid === uuid ? () => onClick(row) : undefined}>\n                {points[row] === 0 ? '✘' : points[row]}\n            </td>\n        ))}\n    </tr>\n);\n","import React, { useCallback, useState } from 'react';\nimport { ClickableDescription } from '../SpadeIsTrump/ClickableDescription';\nimport { GimmickRow, GimmickStore, useGimmickSub } from './gimmick-store';\nimport { ValueSelection } from './ValueSelection';\nimport { Util } from '../../util/util';\nimport { __string } from 'first-intl';\nimport { GimmickRowView } from './GimmickRowView';\n\nexport const GimmickStarted: React.FC = () => {\n    const [selection, setSelection] = useState<GimmickRow | undefined>();\n    const closeSelection = useCallback(() => setSelection(undefined), []);\n    const players = useGimmickSub(({ players }) => players);\n    const activePlayer = GimmickStore.getCurrentActivePlayer(players);\n    const firstPartRows = Object.values(GimmickRow).slice(0, 6);\n    const secondPartRows = Object.values(GimmickRow).slice(6);\n    const winner = useGimmickSub(({ players }) =>\n        GimmickStore.allFinished(players) ? GimmickStore.playerWithMostPoints(players) : undefined\n    );\n\n    return (\n        <>\n            <table>\n                <thead>\n                    <tr>\n                        <th className=\"first\" />\n                        {players.map(({ name, shortcut, uuid }, playerIdx) => (\n                            <ClickableDescription\n                                desc={name}\n                                short={<span>{shortcut}</span>}\n                                key={playerIdx}\n                                tag=\"th\"\n                                className={Util.classNames(\n                                    !winner && activePlayer.uuid === uuid && 'active',\n                                    winner?.uuid === uuid && 'winner'\n                                )}\n                            />\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {firstPartRows.map((row) => (\n                        <GimmickRowView\n                            key={row}\n                            row={row}\n                            players={players}\n                            onClick={setSelection}\n                            activePlayer={activePlayer}\n                        />\n                    ))}\n                    <tr>\n                        <ClickableDescription desc={__string('GIMMICK.bonus')} short=\"🎁\" tag=\"td\" />\n                        {players.map((player) => (\n                            <td key={player.uuid}>\n                                {GimmickStore.finishedMultiplier(player.points)\n                                    ? GimmickStore.calculateBonus(player.points) || '✘'\n                                    : ''}\n                            </td>\n                        ))}\n                    </tr>\n                    {secondPartRows.map((row) => (\n                        <GimmickRowView\n                            key={row}\n                            row={row}\n                            players={players}\n                            onClick={setSelection}\n                            activePlayer={activePlayer}\n                        />\n                    ))}\n                    <tr>\n                        <ClickableDescription desc={__string('GIMMICK.sum')} short=\"∑\" tag=\"td\" />\n                        {players.map((player) => (\n                            <td key={player.uuid}>{GimmickStore.calculateSum(player)}</td>\n                        ))}\n                    </tr>\n                </tbody>\n            </table>\n            {selection && <ValueSelection gimmickRow={selection} close={closeSelection} />}\n        </>\n    );\n};\n","import React from 'react';\nimport { ErrorBoundary } from '../../components/ErrorBoundary';\nimport { Footer } from '../../footer/Footer';\nimport { FooterUndo } from '../../footer/FooterUndo';\nimport { FooterRestart } from '../../footer/FooterRestart';\nimport { GimmickStore, useGimmickSub } from './gimmick-store';\nimport { StartupInfoPicker } from './StartupInfoPicker';\nimport { GimmickStarted } from './GimmickStarted';\n\ntype GimmickFooterProps = { started: boolean };\n\nconst GimmickFooter: React.FC<GimmickFooterProps> = ({ started }) => (\n    <Footer>\n        <FooterUndo onClick={GimmickStore.undo} />\n        {started && <FooterRestart onClick={GimmickStore.restart} />}\n    </Footer>\n);\n\nexport const Gimmick: React.FC = () => {\n    const started = useGimmickSub(({ players }) => !!players.length);\n\n    return (\n        <ErrorBoundary fix={GimmickStore.restart}>\n            <>\n                <div className=\"gimmick\">{started ? <GimmickStarted /> : <StartupInfoPicker />}</div>\n                <GimmickFooter started={started} />\n            </>\n        </ErrorBoundary>\n    );\n};\n","import { Persistore } from 'persistore';\nimport { createStore } from 'react-use-sub';\nimport { Util } from '../../util/util';\n\ntype QuixxState = {\n    badThrows: number;\n    crossed: boolean[][];\n    closed: boolean[];\n};\n\nconst initialQuixxState: QuixxState = {\n    badThrows: 0,\n    crossed: [Util.array(12, false), Util.array(12, false), Util.array(12, false), Util.array(12, false)],\n    closed: Util.array(4, false),\n};\n\nconst _key = 'quixx';\n\nconst getHistory = (): QuixxState[] => {\n    try {\n        const states = Persistore.get(_key);\n        return JSON.parse(states as any);\n    } catch (e) {\n        return [];\n    }\n};\n\nconst get = (): QuixxState => getHistory()[0] || initialQuixxState;\n\nconst [useQuixxSub, store] = createStore<QuixxState>(get());\n\nexport { useQuixxSub };\n\nconst set: typeof store['set'] = (updates) => {\n    store.set(updates);\n    const updatedState = store.get();\n\n    const history = getHistory();\n    history.unshift(updatedState);\n    if (history.length > 20) history.pop();\n    Persistore.set(_key, JSON.stringify(history));\n};\n\nconst restart = (): void => {\n    set(initialQuixxState);\n};\n\nconst undo = (): void => {\n    const history = getHistory();\n    if (history.length > 1) {\n        history.shift();\n        Persistore.set(_key, JSON.stringify(history));\n        const prevState = history[0];\n        store.set(prevState);\n    }\n};\n\nconst onBadThrow = () => set(({ badThrows }) => ({ badThrows: badThrows + 1 }));\n\nconst POINTS_BY_CROSSES = [0, 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, 66, 78];\nconst BAD_THROW_DEDUCTION = 5;\n\nconst sum = (crossed: QuixxState['crossed'], badThrows: number) =>\n    Util.sum(...crossed.map((row) => POINTS_BY_CROSSES[row.filter(Boolean).length])) - badThrows * BAD_THROW_DEDUCTION;\n\nconst _setCross = (row: number, field: number) =>\n    set(({ crossed }) => ({ crossed: Util.nextArray(crossed, row, Util.nextArray(crossed[row], field, true)) }));\n\nconst onCross = (row: number, field: number) => {\n    const { crossed, closed } = store.get();\n    const rowCrossed = crossed[row];\n    if (rowCrossed && !closed[row]) {\n        const lastCrossedIdx = rowCrossed.lastIndexOf(true);\n        if (lastCrossedIdx < field) {\n            if (field === rowCrossed.length - 2) {\n                // clicked on the last field and would close the row\n                if (rowCrossed.filter(Boolean).length >= 5) {\n                    // at least 5 crosses were already made in this row\n                    _setCross(row, field);\n                    // get the last cross\n                    _setCross(row, field + 1);\n                }\n            } else if (field === rowCrossed.length - 1) {\n                // closed the row by clicking the last element without any number\n                set({ closed: Util.nextArray(closed, row, true) });\n            } else {\n                // usual click\n                _setCross(row, field);\n            }\n        }\n    }\n};\n\nexport const QuixxStore = {\n    restart,\n    undo,\n    onBadThrow,\n    sum,\n    onCross,\n};\n","import React, { useCallback, MouseEvent } from 'react';\nimport { createStore } from 'react-use-sub';\nimport { UrlUtil } from './util/url';\nimport { App } from './App';\nimport { Again } from './games/Again';\nimport { MissionControl } from './mission/MissionControl';\nimport { SpadeIsTrump } from './games/SpadeIsTrump';\nimport { VeryClever } from './games/VeryClever';\nimport { Decrypto } from './games/Decrypto';\nimport { Gimmick } from './games/Gimmick';\nimport { Quixx } from './games/Quixx';\n\nexport enum NavLoc {\n    AGAIN = 'again',\n    DECRYPTO = 'decrypto',\n    GIMMICK = 'gimmick',\n    QUIXX = 'quixx',\n    MISSION = 'mission',\n    SIT = 'spade-is-trump',\n    VERY_CLEVER = 'very-clever',\n}\nconst _getCurrentNavLoc = (): NavLoc | null => {\n    const { loc } = UrlUtil.locationSearchToQuery(window.location.search);\n    return Object.values(NavLoc).includes(loc) ? loc : null;\n};\n\nconst [useNavSub, NavStore] = createStore<{ loc: NavLoc | null }>({ loc: _getCurrentNavLoc() });\n\nconst Root: React.FC = () => {\n    const loc = useNavSub(({ loc }) => loc);\n\n    if (loc === NavLoc.AGAIN) return <Again />;\n    if (loc === NavLoc.DECRYPTO) return <Decrypto />;\n    if (loc === NavLoc.GIMMICK) return <Gimmick />;\n    if (loc === NavLoc.QUIXX) return <Quixx />;\n    if (loc === NavLoc.MISSION) return <MissionControl />;\n    if (loc === NavLoc.SIT) return <SpadeIsTrump />;\n    if (loc === NavLoc.VERY_CLEVER) return <VeryClever />;\n\n    return <App />;\n};\n\nconst onLocationChange = () => {\n    const loc = _getCurrentNavLoc();\n    if (loc !== NavStore.get().loc) NavStore.set({ loc });\n};\nwindow.addEventListener('popstate', onLocationChange);\n\nconst Link: React.FC<{ children: React.ReactNode; loc: NavLoc }> = ({ children, loc }) => {\n    const href = '?loc=' + loc;\n\n    const onClick = useCallback(\n        (event: MouseEvent<HTMLAnchorElement>) => {\n            event.preventDefault();\n            NavStore.set({ loc });\n            window.history.pushState(null, loc, href);\n        },\n        [loc, href]\n    );\n\n    return (\n        <a href={href} onClick={onClick}>\n            {children}\n        </a>\n    );\n};\n\nexport const AppNavigation = { Root, Link };\n","import React, { useCallback } from 'react';\nimport { QUIXX_DEFAULT_DATA, QuixxField } from './quixx-data';\nimport { Icon } from '../../components/icons/icon';\nimport { QuixxStore, useQuixxSub } from './quixx-store';\nimport { Util } from '../../util/util';\nimport { __ } from 'first-intl';\n\ntype QuixxFieldProps = {\n    field: QuixxField;\n    crossed: boolean;\n    fieldIdx: number;\n    onClick: (field: number) => void;\n    deactivated: boolean;\n    closed: boolean;\n};\n\nconst QuixxFieldView: React.FC<QuixxFieldProps> = ({\n    field: { value, color },\n    crossed,\n    onClick,\n    fieldIdx,\n    deactivated,\n    closed,\n}) => {\n    const onClickWrapped = useCallback(() => onClick(fieldIdx), [onClick, fieldIdx]);\n    return (\n        <div\n            className={Util.classNames('quixx__grid__field', closed && !deactivated && 'quixx__grid__field--closed')}\n            style={{ backgroundColor: color }}\n            onClick={deactivated ? undefined : onClickWrapped}>\n            {value === -1 ? <Icon.Unlock /> : value}\n            {crossed && <div className=\"quixx__grid__field--crossed\">✘</div>}\n        </div>\n    );\n};\n\ntype QuixxRowProps = { row: QuixxField[]; rowIdx: number };\n\nconst QuixxRow: React.FC<QuixxRowProps> = ({ row, rowIdx }) => {\n    const { rowCrossed, rowClosed } = useQuixxSub(\n        ({ crossed, closed }) => ({ rowCrossed: crossed[rowIdx], rowClosed: closed[rowIdx] }),\n        [rowIdx]\n    );\n    const onClick = useCallback((field: number) => QuixxStore.onCross(rowIdx, field), [rowIdx]);\n    const lastCrossedIdx = rowCrossed.lastIndexOf(true);\n    return (\n        <>\n            {row.map((field, index) => (\n                <QuixxFieldView\n                    key={field.value}\n                    field={field}\n                    crossed={rowCrossed[index]}\n                    onClick={onClick}\n                    fieldIdx={index}\n                    deactivated={lastCrossedIdx >= index}\n                    closed={rowClosed}\n                />\n            ))}\n        </>\n    );\n};\n\nconst POSSIBLE_BAD_THROWS = 3;\n\nexport const QuixxStarted: React.FC = () => {\n    const { sum, badThrows } = useQuixxSub(({ badThrows, crossed }) => ({\n        badThrows,\n        sum: QuixxStore.sum(crossed, badThrows),\n    }));\n    return (\n        <>\n            <div className=\"quixx__grid\">\n                {QUIXX_DEFAULT_DATA.map((row, index) => (\n                    <QuixxRow key={index} row={row} rowIdx={index} />\n                ))}\n            </div>\n            <div className=\"quixx__info\">\n                <div className=\"quixx__info__bad-throws\">\n                    <div>{__('QUIXX.badThrows')}</div>\n                    {Util.array(POSSIBLE_BAD_THROWS).map((_, index) => (\n                        <span key={index} onClick={badThrows === index ? QuixxStore.onBadThrow : undefined}>\n                            {badThrows > index ? '✘' : ''}\n                        </span>\n                    ))}\n                </div>\n                <div className=\"quixx__info__sum\">\n                    <div>{__('QUIXX.points')}</div>\n                    <span>{sum}</span>\n                </div>\n            </div>\n        </>\n    );\n};\n","import React from 'react';\nimport { ErrorBoundary } from '../../components/ErrorBoundary';\nimport { Footer } from '../../footer/Footer';\nimport { FooterUndo } from '../../footer/FooterUndo';\nimport { FooterRestart } from '../../footer/FooterRestart';\nimport { QuixxStore } from './quixx-store';\nimport { QuixxStarted } from './QuixxStarted';\n\nconst QuixxFooter: React.FC = () => (\n    <Footer>\n        <FooterUndo onClick={QuixxStore.undo} />\n        <FooterRestart onClick={QuixxStore.restart} />\n    </Footer>\n);\n\nexport const Quixx: React.FC = () => (\n    <ErrorBoundary fix={QuixxStore.restart}>\n        <>\n            <div className=\"quixx\">\n                <QuixxStarted />\n            </div>\n            <QuixxFooter />\n        </>\n    </ErrorBoundary>\n);\n","import './assets/main.scss';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Globals } from './globals';\nimport { ServiceWorkerUpdater } from './sw-logic';\nimport { IntlRoot } from './intl';\nimport { AppNavigation } from './AppNavigation';\n\nReactDOM.render(\n    <IntlRoot>\n        <AppNavigation.Root />\n        <ServiceWorkerUpdater />\n    </IntlRoot>,\n    Globals.document().getElementById('root')\n);\n"],"sourceRoot":""}