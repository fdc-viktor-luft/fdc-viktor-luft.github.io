{"version":3,"sources":["globals.ts","util/util.ts","components/icons/icon.tsx","sw-logic.tsx","intl.tsx","util/url.ts","admin/Admin.tsx","admin/AdminEntry.tsx","App.tsx","games/Again/data.ts","games/Again/again-store.ts","games/Again/ControlMenu.tsx","games/Again/ControlBar.tsx","games/Again/Jokers.tsx","games/Again/types.ts","games/Again/Box.tsx","games/Again/Grid.tsx","games/Again/Letters.tsx","games/Again/again-logic.ts","games/Again/RowPoints.tsx","games/Again/ColorPoints.tsx","games/Again/Cube.tsx","games/Again/Turn.tsx","games/Again/Total.tsx","games/Again/CompletionPopup.tsx","games/Again/ActionSplash.tsx","games/Again/AgainStarted.tsx","components/form/DisplayError.tsx","util/event-util.ts","components/form/select.tsx","games/Again/DataSelection.tsx","components/ErrorBoundary.tsx","games/Again/index.tsx","mission/MissionControl.tsx","components/form/input.tsx","games/SpadeIsTrump/spadeIsTrump-store.ts","games/SpadeIsTrump/history-store.ts","games/SpadeIsTrump/players-store.ts","games/VeryClever/data.ts","games/SpadeIsTrump/AddPlayer.tsx","games/SpadeIsTrump/PlayerRow.tsx","games/SpadeIsTrump/StartupInfoPicker.tsx","games/SpadeIsTrump/Points.tsx","games/SpadeIsTrump/ClickableDescription.tsx","games/SpadeIsTrump/SpadeIsTrumpStarted.tsx","games/SpadeIsTrump/NavBar.tsx","games/SpadeIsTrump/index.tsx","games/VeryClever/VeryClever-store.ts","games/Decrypto/NotifyResult.tsx","games/VeryClever/VeryClever-logic.ts","games/VeryClever/AvailableBonus.tsx","games/VeryClever/RoundOverview.tsx","games/VeryClever/ValueSelection.tsx","games/VeryClever/Bonus.tsx","games/VeryClever/Box.tsx","games/VeryClever/BoxRow.tsx","games/VeryClever/BoxGrid.tsx","games/VeryClever/NavBar.tsx","games/VeryClever/Points.tsx","games/VeryClever/ActivatedBonus.tsx","games/VeryClever/VeryCleverInner.tsx","games/VeryClever/index.tsx","games/Decrypto/Decrypto-store.ts","games/Decrypto/CodeWordsSelection.tsx","components/form/SelectOverlay.tsx","games/Decrypto/GuessCode.tsx","games/Decrypto/GuessResult.tsx","games/Decrypto/KnowledgeView.tsx","games/Decrypto/QrCode.tsx","games/Decrypto/QrCodeScanner.tsx","games/Decrypto/QrCodeOverlay.tsx","games/Decrypto/ShowQrCode.tsx","games/Decrypto/DecryptoMe.tsx","games/Decrypto/DecryptoEnemy.tsx","AppNavigation.tsx","games/Decrypto/Decrypto.tsx","games/Decrypto/index.tsx","index.tsx"],"names":["Globals","window","document","navigator","onLine","classNamesFilter","arg","Util","num","defaultValue","Array","fill","classes","filter","join","undefined","before","index","value","copy","splice","uuid","a","Math","random","toString","replace","arr","indices","forEach","i","length","j","floor","_Icon","symbol","props","width","className","viewBox","d","Icons","Icon","Alert","ArrowRight","ArrowDown","Ban","Crown","Glasses","Exchange","Key","Mask","Menu","Undo","QrCode","Refresh","Refresh2","Settings","Times","Trash","reloadPage","open","location","href","newSWInstalledCb","registerServiceWorker","serviceWorker","register","then","reg","onupdatefound","installingWorker","installing","activeWorker","active","onstatechange","state","catch","console","error","doAfter","ms","cb","Promise","resolve","setTimeout","ServiceWorkerUpdater","useState","content","setContent","contentDelayed","useCallback","delay","initRefresh","all","useEffect","addEventListener","_persist","chosen","Persistore","set","addIntlData","deIntl","currentLang","saved","get","_getPersisted","lang","language","startsWith","_detectPreferred","enIntl","Updater","setKey","key","toggleIntl","IntlRoot","children","UrlUtil","search","s","substr","params","split","result","param","pair","decodeURIComponent","allReportedErrors","oldConsoleError","push","onerror","e","Admin","close","map","message","String","Object","keys","localStorage","JSON","stringify","getItem","onClick","_AdminEntry","lastClicked","successCount","margin","timing","AdminEntry","setActive","now","Date","diff","App","src","alt","__","AppNavigation","Link","loc","NavLoc","AGAIN","SIT","VERY_CLEVER","DECRYPTO","parseRawData","starPositions","rowColors","label","grid","stars","backgroundColor","row","Number","AllRawData","AllData","black","blue","green","orange","pink","violet","yellow","dataOptions","DataSelectionOptions","createStore","againSplash","again","crossed","rowPointsBlocked","colorPointsBlocked","takenJokers","turns","againData","veryClever","useAgainSub","store","getHistory","states","parse","randomDataKey","limit","uncrossedRow","uncrossedGrid","unblockedRowPoints","unblockedColorPoints","initialData","getChosenData","option","init","AgainStore","history","unshift","pop","undo","shift","remove","restart","chooseData","selectedOption","dataOption","setSplash","icon","ControlMenu","ControlBar","setOpen","openRef","useRef","current","toggleMenu","event","target","parentElement","containedInControlMenu","removeEventListener","BoxWrapper","NumberJoker","x","y","height","rx","ry","textAnchor","fontSize","fontWeight","ColorJoker","stroke","strokeWidth","x1","y1","x2","y2","JokerSeparator","EqualSign","JokerPlaceholder","taken","cx","cy","r","Jokers","takeJoker","_","COLOR","O","B","G","R","Y","Box","color","customColor","circled","star","borderColor","flicker","xmlns","points","Grid","gridData","clickable","lastTurn","onCross","onClickHandler","boxIndex","rowIndex","completedRows","starPosition","crossedRow","isMiddleRow","isClickable","allLetters","Letters","letter","rowPoints1","rowPoints2","getCompletedRows","every","checked","getCompletedColors","getClickable","allowMiddle","calculate","completedColors","totalPoints","completed","reduce","v","getTotalPoints","blockRowPoints","rowWasCompleted","Boolean","RowPoints","blockColorPoints","ColorList","ColorPoints","VALUE_SVG","Cube","count","innerValue","Abort","Finish","Turn","skipped","TurnControl","onFinish","onAbort","Success","turn","completedColor","isCompleted","Turns","Total","CompletionPopup","onClose","hide","ActionSplash","iconView","iconType","renderIcon","AgainStarted","turnCrossed","setState","currentRow","updatedRow","updatedTurnRow","madeTurn","lastCrossed","newCompletedRows","nextCompletedColors","newCompletedColor","findIndex","calculateTurn","onClosePopup","style","DisplayError","EventUtil","preventDefault","original","Option","__string","Select","serialize","required","onChange","onBlur","options","disabled","name","optionValues","values","o","getOptionValues","handlerRemapped","handler","optionValue","indexOf","currentValue","find","currentIndex","onSelect","OptionsWithRandom","DataSelection","ErrorBoundary","hasError","this","fix","type","Component","getDerivedStateFromError","Again","missions","title","text","MissionControl","processed","selected","interval","processNextLetter","clearInterval","runLetters","setInterval","select","mission","m","isSelected","substring","transformHandler","trim","Input","placeholder","inputClassName","onFocus","autoFocus","forwardedRef","readOnly","ref","FormInput","Field","rest","gameState","players","useSpadeIsTrumpSub","SpadeIsTrumpStore","update","_set","HistoryStore","reset","rearrange","cleared","player","total","_clear","slice","next","moveTo","after","_get","Color","PlayerStore","shortcut","p","initialValues","Morfi","create","Form","Fields","errors","validation","id","AddPlayerForm","data","setData","onSubmit","AddPlayer","focus","setFocus","PlayerRow","pos","moveUp","moveDown","playersFromStartup","startupInfo","rounds","numberOfCards","numberOfPlayers","playerIdx","newPlayer","StartupInfoValidations","isNaN","submit","StartupInfoPicker","parseNum","parsed","_tipToString","tip","Points","activeRound","checkable","currentTip","setCurrentTip","onChangeTip","setEarned","earned","onSuccess","onFailed","clazzName","readyToPlay","ClickableDescription","desc","short","tag","showName","setShowName","displayed","React","createElement","onPointsChange","roundIdx","onPlayerChange","SpadeIsTrumpStarted","earnings","round","getActiveRound","earnedPoints","res","val","isActiveRound","activeReady","activeRoundReady","cards","positives","roundHasError","earnedIdx","max","NavBar","started","SpadeIsTrump","notStarted","BONUS","orangeFactors","Data","YELLOW","contents","rowBonus","BLUE","ORANGE_4","GREEN","FOX","columnBonus","YELLOW_10","YELLOW_14","YELLOW_16","YELLOW_20","PLUS_1","ORANGE_5","REFRESH","PURPLE","bonus","ORANGE","factors","f","ORANGE_6","_setHistoryLocal","_getHistory","isArray","initialGameState","useVeryCleverSub","_Store","Status","VeryCleverStore","_takeBonus","list","firstFalse","_allCrossed","nums","_getRowBonus","_getBonus","collected","includes","_getYellowBonus","_getBlueBonus","_crossableClicked","earnedBonus","_getNextIndex","_selectValue","factor","_sumPoints","cur","red","ROUND_BONUS","ULTIMATE","_getRoundBonus","VeryCleverLogic","takeReshuffleBonus","reshuffle","takePlusOneBonus","plusOne","boxClicked","_isCrossed","_isNextIndex","selection","selectValue","clearSelection","yPoints","bPoints","gPoints","_greenPoints","oPoints","pPoints","min","foxes","useBonus","_useBonus","nextRound","AvailableBonus","c","AvailableReshuffleBonus","AvailablePlusOneBonus","RoundOverview","ValueSelectionOption","ValueSelection","prevVal","currentIdx","CONTENT_AND_COLOR","BLACK","CROSS","Bonus","gePrefix","highlight","_isHighLight","newContent","BoxRow","bonusList","point","array6","BoxGrid","rowBonusList","columnBonusList","ActivatedBonus","VeryCleverInner","VeryClever","NoKnowledge","initialDecryptoState","results","losses","wins","me","knowledge","enemy","raw","_fetch","useDecryptoSub","Store","DecryptoStore","initialCodeWords","first","second","third","initialCodeWordsData","codeWordValidator","btoa","codeWordValidation","CodeWordsSelection","code","codeWordsData","setCodeWordsData","hasErrors","SelectOverlayValue","SelectOverlay","isOpen","node","GuessOptions","GuessCode","codeWords","setFirst","setSecond","setThird","duplicated","duplicate","_getDuplicated","_getAllDuplicated","wasGuessed","useMemo","onGuessedMe","GuessResult","guessed","firstIncorrect","secondIncorrect","thirdIncorrect","KnowledgeView","rows","k","idx","QrCodeColorOptions","white","dark","light","info","setError","canvas","QRCode","toCanvas","QrCodeScanner","onInput","prepareClose","permissionDenied","setPermissionDenied","stream","setStream","streamRef","innerWidth","innerHeight","video","isRunning","createSnap","clearStream","getTracks","track","removeTrack","srcObject","mediaDevices","getUserMedia","audio","facingMode","pause","startScanning","requestAnimationFrame","videoElem","URL","createObjectURL","setAttribute","handleQrCodeResult","atob","context","getContext","qr","drawImage","imageData","getImageData","callback","decode","initialQrCodeState","scanning","closingScanner","useQrCodeInfo","qrCodeInfoStore","closeQrCodeOverlay","_onScanInput","QrCodeOverlay","display","ShowQrCode","_generateCode","_setCodeWords","_setGuessed","wrongGuess","updatedMe","DecryptoMe","disableGeneration","finishedEnemyRound","meRound","noCodeOrFinishedGuessing","correctGuess","updatedEnemy","DecryptoEnemy","disableCatch","meUpdates","NotifyResult","status","setStatus","last","WON","LOST","DecryptoInternal","showEnemy","setShowEnemy","onSwitch","Decrypto","_getCurrentNavLoc","useNavSub","NavStore","Root","MISSION","pushState","ReactDOM","render","getElementById"],"mappings":"ohZAAaA,EAAU,CACnBC,OAAO,SAAD,mGAAC,EAAC,kBAAMA,UACdC,SAAS,SAAD,mGAAC,EAAC,kBAAMA,YAChBC,UAAU,SAAD,mGAAC,EAAC,kBAAWA,aACtBC,OAAQ,mBAAiB,WAAYJ,EAAQG,cAAgBH,EAAQG,YAAYC,S,sBCJ/EC,EAAmB,SAACC,GAAD,QAAgBA,GAAsB,kBAARA,GAqC1CC,EAlCC,SAAIC,EAAaC,GAAjB,OAAgDC,MAAMF,GAAKG,KAAKF,IAkCjEF,EApCM,sCAAIK,EAAJ,yBAAIA,EAAJ,uBAA2CA,EAAQC,OAAOR,GAAkBS,KAAK,WAAQC,GAoC/FR,EAxBK,SAAIS,EAAaC,EAAeC,GAC9C,IAAMC,EAAI,YAAOH,GAEjB,OADAG,EAAKC,OAAOH,EAAO,EAAGC,GACfC,GAqBEZ,EALA,SAAPc,EAAQC,GAAD,OACRA,GACOA,EAA8B,GAAhBC,KAAKC,UAAoBF,EAAY,GAAKG,SAAS,KACjE,CAAC,MAAgB,KAAO,KAAO,KAAO,MAAMC,QAAQ,SAAUL,IAE7Dd,EAhCK,SAAIoB,EAAUC,EAAmBV,GAC/C,IAAMC,EAAI,YAAOQ,GAIjB,OAHAC,EAAQC,SAAQ,SAACC,GACbX,EAAKW,GAAKZ,KAEPC,GA2BEZ,EAlBQ,SAAIoB,GAGrB,IAFA,IAAMR,EAAI,YAAOQ,GAERG,EADKX,EAAKY,OAAS,EACRD,EAAI,EAAGA,IAAK,CAC5B,IAAME,EAAIT,KAAKU,MAAMV,KAAKC,UAAYM,EAAI,IADd,EAEP,CAACX,EAAKa,GAAIb,EAAKW,IAAnCX,EAAKW,GAFsB,KAElBX,EAAKa,GAFa,KAIhC,OAAOb,GCpBLe,EAAQ,SAACC,GAAD,IAA6BC,EAA7B,uDAAgD,GAAIC,EAApD,uDAAoE,IAApE,OACV,yBAAKC,UAAWF,EAAME,UAAYF,EAAME,UAAY,QAAU,OAAQC,QAAO,cAASF,EAAT,SACzE,0BAAM1B,KAAK,eAAe6B,EAAGC,EAAMN,OAM9BO,EAAO,CAChBC,MAAO,SAACP,GAAD,OAAuBF,EAAM,QAASE,EAAO,MACpDQ,WAAY,SAACR,GAAD,OAAuBF,EAAM,cAAeE,EAAO,MAC/DS,UALc,SAAC,GAAD,IAAGP,EAAH,EAAGA,UAAH,OAA8B,kBAACI,EAAKE,WAAN,CAAiBN,UAAW/B,EAAgB,YAAa+B,MAMrGQ,IAAK,SAACV,GAAD,OAAuBF,EAAM,MAAOE,IACzCW,MAAO,SAACX,GAAD,OAAuBF,EAAM,QAASE,EAAO,MACpDY,QAAS,SAACZ,GAAD,OAAuBF,EAAM,UAAWE,EAAO,MACxDa,SAAU,SAACb,GAAD,OAAuBF,EAAM,WAAYE,IACnDc,IAAK,SAACd,GAAD,OAAuBF,EAAM,MAAOE,IACzCe,KAAM,SAACf,GAAD,OAAuBF,EAAM,OAAQE,EAAO,MAClDgB,KAAM,SAAChB,GAAD,OAAuBF,EAAM,OAAQE,EAAO,MAClDiB,KAAM,SAACjB,GAAD,OAAuBF,EAAM,OAAQE,IAC3CkB,OAAQ,SAAClB,GAAD,OAAuBF,EAAM,UAAWE,EAAO,MACvDmB,QAAS,SAACnB,GAAD,OAAuBF,EAAM,UAAWE,EAAO,MACxDoB,SAAU,SAACpB,GAAD,OAAuBF,EAAM,YAAaE,IACpDqB,SAAU,SAACrB,GAAD,OAAuBF,EAAM,WAAYE,IACnDsB,MAAO,SAACtB,GAAD,OAAuBF,EAAM,QAASE,IAC7CuB,MAAO,SAACvB,GAAD,OAAuBF,EAAM,QAASE,EAAO,OC3BlDwB,EAAa,WACf5D,EAAQC,SAAS4D,KAAK5D,OAAO6D,SAASC,KAAM,UAG5CC,EAAmB,aAEjBC,EAAwB,kBAC1BjE,EAAQG,YACH+D,cAAcC,SAAS,UACvBC,MAAK,SAACC,GACHA,EAAIC,cAAgB,WAIhB,IAAMC,EAAmBF,EAAIG,WACvBC,EAAeJ,EAAIK,OACzBH,EAAiBI,cAAgB,WAOE,cAA3BJ,EAAiBK,OAAyBH,GAAcT,SAIvEa,OAAM,kBAAM7E,EAAQC,SAAS6E,QAAQC,MAAM,+CAQ9CC,EAAU,SAACC,EAAYC,GAAb,OACZ,IAAIC,SAAQ,SAACC,GAAD,OACRpF,EAAQC,SAASoF,YAAW,WACxBH,IACAE,MACDH,OAGEK,EAAuB,WAAO,IAAD,EACRC,qBADQ,mBAC/BC,EAD+B,KACtBC,EADsB,KAGhCC,EAAiBC,uBACnB,SAACC,EAAeJ,GAAhB,OAAsDR,EAAQY,GAAO,kBAAMH,EAAWD,QACtF,IAGEK,EAAcF,uBAChB,kBACIR,QAAQW,IAAI,CACRJ,EAAe,EAAG,mBAClBA,EAAe,IAAM,mBACrBA,EAAe,KAAM,oBACrBA,EAAe,KAAM,qBACrBA,EAAe,KAAM,sBACrBA,EAAe,KAAM,kBAAChD,EAAKW,KAAN,OACrB2B,EAAQ,KAAMpB,OAEtB,IAQJ,OALAmC,qBAAU,WACN/B,EAAmB6B,EAnCnB,kBAAmB1F,WAAaF,OAAO+F,iBAAiB,OAAQ/B,KAqCjE,IAEEuB,EAGD,yBAAKlD,UAAU,aACX,yBAAKA,UAAU,sBACf,yBAAKA,UAAU,qBAAqBkD,IALvB,M,8BChEnBS,EAAW,SAACC,GAAD,OAA+BC,IAAWC,IAF9C,OAEwDF,IAMrEG,YAAYC,GAEZ,IAKIC,EAZkB,WAClB,IAAMC,EAAQL,IAAWM,IAJhB,QAKT,MAAiB,OAAVD,GAA4B,OAAVA,EAAiBA,OAAQzF,EAUpC2F,IALO,WACrB,IAAMC,EAAOxG,UAAUyG,SACvB,OAAOD,GAAQA,EAAKE,WAAW,MAAQ,KAAO,KAGbC,GAEjB,OAAhBP,GACAF,YAAYU,GAGhB,IAAMC,EAAU,CAAEC,OAAQ,SAACC,MAEdC,EAAa,WACF,OAAhBZ,GACAA,EAAc,KACdF,YAAYU,GACZC,EAAQC,OAAO,MACfhB,EAAS,QAETM,EAAc,KACdF,YAAYC,GACZU,EAAQC,OAAO,MACfhB,EAAS,QAIJmB,EAA8C,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACnD9B,mBAA4BgB,GADuB,mBAClEW,EADkE,KAC7DD,EAD6D,KAOzE,OAJAlB,qBAAU,WACNiB,EAAQC,OAASA,IAClB,IAEI,kBAAC,WAAD,CAAUC,IAAKA,GAAMG,I,OCCnBC,EAtCiB,WAI1B,IAJ4E,IAAjDC,EAAgD,uDAA/B,GACtCC,EAAID,EAAOV,WAAW,KAAOU,EAAOE,OAAO,GAAKF,EAChDG,EAASF,EAAEG,MAAM,KACjBC,EAAS,GACN9F,EAAI,EAAGA,EAAI4F,EAAO3F,OAAQD,IAAK,CACpC,IAAM+F,EAAQH,EAAO5F,GACrB,GAAI+F,EAAO,CACP,IAAMC,EAAOD,EAAMF,MAAM,KACnBzG,EAAQ4G,EAAK,QACL/G,IAAVG,IAAqB0G,EAAOG,mBAAmBD,EAAK,KAAOC,mBAAmB7G,KAG1F,OAAO0G,G,QCzBLI,EAA2B,GAC3BC,EAAkBhI,OAAO6E,QAAQC,MACvC9E,OAAO6E,QAAQC,MAAQ,WACnBiD,EAAkBE,KAAlB,MAAAF,EAAiB,WACjBC,EAAe,WAAf,cAEJhI,OAAOkI,QAAU,SAACC,GACdJ,EAAkBE,KAAKE,IAKpB,IAAMC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,yBAAKhG,UAAU,SACX,yBAAKA,UAAU,iBACX,6CACC0F,EAAkBO,KAAI,SAACC,EAASvH,GAAV,OACnB,uBAAGiG,IAAKjG,GAAQwH,OAAOD,QAG/B,yBAAKlG,UAAU,gBACX,4CACCoG,OAAOC,KAAKC,cAAcL,KAAI,SAACrB,GAAD,OAC3B,kBAAC,WAAD,CAAUA,IAAKA,GACX,4BAAKA,GACL,2BAAI2B,KAAKC,UAAUF,aAAaG,QAAQ7B,UAIpD,4BAAQ8B,QAASV,GAAjB,WC5BFW,EAAc,CAChBC,YAAa,EACbC,aAAc,EACdC,OAAQ,IACRC,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,MAIzBC,EAAuB,WAAO,IAAD,EACV/D,oBAAS,GADC,mBAC/Bb,EAD+B,KACvB6E,EADuB,KAEhCP,EAAUrD,uBAAY,WACxB,IAAM6D,EAAMC,KAAKD,MACXE,EAAOF,EAAMP,EAAYC,YAC/B,GAAIQ,EAAO,IAEPT,EAAYE,aAAe,MACxB,CACH,IAAME,EAASJ,EAAYI,OAAOJ,EAAYE,cAC1CO,EAAOT,EAAYG,OAASC,GAAUA,EAASK,EAAOT,EAAYG,OAEjC,IAA7BH,EAAYE,cACZF,EAAYE,aAAe,EAC3BI,GAAU,IAEVN,EAAYE,eAIhBF,EAAYE,aAAe,EAGnCF,EAAYC,YAAcM,IAC3B,IAEGlB,EAAQ3C,uBAAY,kBAAM4D,GAAU,KAAQ,IAElD,OAAO7E,EAAS,kBAAC,EAAD,CAAO4D,MAAOA,IAAY,yBAAKhG,UAAU,cAAc0G,QAASA,KChCvEW,EAAgB,kBACzB,yBAAKrH,UAAU,OACX,4BAAQA,UAAU,cACd,yBAAKsH,IAAI,YAAYtH,UAAU,WAAWuH,IAAI,SAC9C,yBACID,IAA0B,OJ2CarD,EI3CN,oBAAsB,gBACvDjE,UAAU,WACVuH,IAAI,kBACJb,QAAS7B,KAGjB,yBAAK7E,UAAU,eACX,kBAAC,IAAD,KACI,yBAAKA,UAAU,wBAAwB4E,IAAI,SACvC,4BAAK4C,YAAG,UACR,kBAACC,GAAcC,KAAf,CAAoBC,IAAKC,GAAOC,OAAQL,YAAG,cAE/C,yBAAKxH,UAAU,sBAAsB4E,IAAI,OACrC,4BAAK4C,YAAG,QACR,kBAACC,GAAcC,KAAf,CAAoBC,IAAKC,GAAOE,KAAMN,YAAG,cAE7C,yBAAKxH,UAAU,6BAA6B4E,IAAI,cAC5C,4BAAK4C,YAAG,OACR,kBAACC,GAAcC,KAAf,CAAoBC,IAAKC,GAAOG,aAAcP,YAAG,cAErD,yBAAKxH,UAAU,2BAA2B4E,IAAI,YAC1C,4BAAK4C,YAAG,aACR,kBAACC,GAAcC,KAAf,CAAoBC,IAAKC,GAAOI,UAAWR,YAAG,gBAI1D,kBAAC,EAAD,Q,OC7BFS,EAAe,SAAC,GAAD,IADUC,EADLC,EAEFC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,gBAAvB,MAA6D,CAC9EH,QACAC,MAJsBF,EAICE,EAJkCF,EAAUlC,KAAI,SAACuC,GAAD,OAAcA,EAAInD,MAAM,QAK/FiD,OAJ2BJ,EAIEI,EAJkCJ,EAAc7C,MAAM,IAAIY,IAAIwC,SAK3FF,oBAGEG,EAuBI,CACFN,MAAO,mBACPG,gBAAiB,UACjBD,MAAO,kBACPD,KAAM,CACF,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YA1CNK,EA6CK,CACHN,MAAO,oBACPG,gBAAiB,UACjBD,MAAO,kBACPD,KAAM,CACF,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YAhENK,EAmEM,CACJN,MAAO,qBACPG,gBAAiB,UACjBD,MAAO,kBACPD,KAAM,CACF,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YAtFNK,EAyFI,CACFN,MAAO,mBACPG,gBAAiB,UACjBD,MAAO,kBACPD,KAAM,CACF,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YA5GNK,EA+GM,CACJN,MAAO,qBACPG,gBAAiB,UACjBD,MAAO,kBACPD,KAAM,CACF,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YAlINK,EAqIM,CACJN,MAAO,qBACPG,gBAAiB,UACjBD,MAAO,kBACPD,KAAM,CACF,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YAMCM,EAAyC,CAClDC,MAAOX,EA9JA,CACHG,MAAO,oBACPG,gBAAiB,UACjBD,MAAO,kBACPD,KAAM,CACF,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,aA4IRQ,KAAMZ,EAAaS,GACnBI,MAAOb,EAAaS,GACpBK,OAAQd,EAAaS,GACrBM,KAAMf,EAAaS,GACnBO,OAAQhB,EAAaS,GACrBQ,OAAQjB,EAAaS,IAEZS,EAA4B/C,OAAOC,KAAKsC,GAExCS,EAAwDD,EAAYlD,KAC7E,SAACrB,GAAD,MAAgD,CAC5CwD,MAAOO,EAAQ/D,GAAKwD,MACpBxJ,MAAOgG,M,GC3JcyE,YAAmB,CAC5CC,YAAa,KACbC,MAAO,CAAEC,QAAS,GAAIC,iBAAkB,GAAIC,mBAAoB,GAAIC,YAAa,EAAGC,MAAO,IAC3FC,UAAW,KACXC,WAAY,K,qBAJTC,G,MAAaC,G,MAcdC,GAAa,WACf,IACI,IAAMC,EAASrG,IAAWM,IALrB,SAML,OAAOoC,KAAK4D,MAAMD,GACpB,MAAOpE,GACL,MAAO,KAKTsE,GAAgB,kBAAkBjB,GADrBkB,EAC2ClB,EAAY1J,OADrCR,KAAKU,MAAMV,KAAKC,SAAWmL,KAA9C,IAACA,GAiCbC,GAA0BrM,EAAW,GAAGgI,KAAI,kBAAM,KAC3CsE,GAA6BtM,EAAW,IAAIgI,KAAI,kBAAMqE,MAC7DE,GAAgCvM,EAAW,IAAIgI,KAAI,kBAAM,KACzDwE,GAAkCxM,EAAW,GAAGgI,KAAI,kBAAM,KAC1DyE,GAA0B,CAC5BlB,QAASe,GACTd,iBAAkBe,GAClBd,mBAAoBe,GACpBd,YAAa,EACbC,MAAO,IAILe,GAAgB,WAClB,IAAMC,EAAS/G,IAAWM,IA1DX,gBA2Df,OAAOyG,EAASjC,EAASiC,GAAgC,MAGvDC,GAAO,kBAAMb,GAAMlG,IAAI,CAAEyF,MANDU,KAAa,IAAMS,GAMJb,UAAWc,QAIxDE,KAEO,IAAMC,GAAa,CAAEhH,IA9ChB,SAACxB,GACT0H,GAAMlG,KAAI,gBAAGyF,EAAH,EAAGA,MAAH,MAAgB,CAAEA,MAAM,eAAMA,EAAP,GAAiBjH,OAClD,IAAMyI,EAAUd,KAChBc,EAAQC,QAAQhB,GAAM7F,MAAMoF,OACxBwB,EAAQtL,OAAS,IAAIsL,EAAQE,MACjCpH,IAAWC,IA5BF,QA4BYyC,KAAKC,UAAUuE,KAyCPG,KAtCpB,WACT,IAAKlB,GAAM7F,MAAMmF,YAAa,CAC1B,IAAMyB,EAAUd,KACZc,EAAQtL,OAAS,GACjBsL,EAAQI,QACRtH,IAAWC,IApCV,QAoCoByC,KAAKC,UAAUuE,IACpCf,GAAMlG,IAAI,CAAEyF,MAAOwB,EAAQ,GAAIzB,YAAa,WAE5CzF,IAAWuH,OAvCV,SAwCDpB,GAAMlG,IAAI,CAAEyF,MAAOmB,GAAapB,YAAayB,EAAQtL,OAAS,EAAI,OAAS,UA6BhD4L,QAJvB,kBAAYxH,IAAWuH,OAjE1B,UAiE0CvH,IAAWuH,OAhE/C,iBAgEqEP,MAIxCS,WApD7B,SAACV,GAChB,IAAMW,EAHS,SAACX,GAAD,MAA2D,WAAXA,EAAsBR,KAAkBQ,EAGhFY,CAAWZ,GAClCZ,GAAMlG,IAAI,CAAE+F,UAAWlB,EAAQ4C,KAC/B1H,IAAWC,IAnBI,eAmBYyH,IAiD6BE,UAvE1C,SAACC,GAAD,OAAiC1B,GAAMlG,IAAI,CAAEwF,YAAaoC,MCrC/DC,GAA0C,SAAC,GAAD,IAAGT,EAAH,EAAGA,KAAMG,EAAT,EAASA,QAAT,OACnD,yBAAKrL,UAAU,aACX,6BACKkL,GACG,4BAAQxE,QAASwE,EAAMlL,UAAU,QAC7B,kBAACI,EAAKW,KAAN,CAAWf,UAAU,aAG5BqL,GACG,4BAAQ3E,QAAS2E,EAASrL,UAAU,WAC/BwH,YAAG,mBCAXoE,GAAa,SAAC,GAAkD,IAAhDV,EAA+C,EAA/CA,KAAMG,EAAyC,EAAzCA,QAAStG,EAAgC,EAAhCA,SAAgC,EAChD9B,oBAAkB,GAD8B,mBACjE1B,EADiE,KAC3DsK,EAD2D,KAElEC,EAAUC,iBAAgBxK,GAChCuK,EAAQE,QAAUzK,EAElB,IAAM0K,EAAa5I,uBAAY,kBAAMwI,GAAQ,SAAC3G,GAAD,OAAQA,OAAI,IAEnDc,EAAQ3C,uBAAY,SAAC6I,GACnBJ,EAAQE,SAAWE,IAnBA,SAACC,GAE5B,IADA,IAAIH,EAAUG,EACL3M,EAAI,EAAGwM,GAAWxM,EAAI,IAAKA,IAAK,CACrC,GAAIwM,GAAiC,cAAtBA,EAAQhM,UAA2B,OAAO,EACzDgM,EAAUA,EAAQI,cAEtB,OAAO,EAa8BC,CAAuBH,EAAMC,SAASN,GAAQ,KAChF,IAOH,OALApI,qBAAU,WAEN,OADA9F,OAAO+F,iBAAiB,QAASsC,GAAO,GACjC,kBAAMrI,OAAO2O,oBAAoB,QAAStG,GAAO,MACzD,CAACA,IAGA,yBAAKhG,UAAU,QACX,6BACI,4BAAQ0G,QAASuF,EAAYjM,UAAU,QACnC,kBAACI,EAAKU,KAAN,QAGPS,GAAQ,kBAAC,GAAD,CAAa8J,QAASA,EAASH,KAAMA,IAC7CnG,ICnCPwH,GAAsE,SAAC,GAAD,IAAGxH,EAAH,EAAGA,SAAU2B,EAAb,EAAaA,QAAb,OACxE,6BACI,yBAAK1G,UAAU,MAAM0G,QAASA,GACzB3B,KAKPyH,GAAwB,kBAC1B,kBAAC,GAAD,KACI,yBAAKvM,QAAQ,aACT,0BAAMwM,EAAE,IAAIC,EAAE,IAAI3M,MAAM,KAAK4M,OAAO,KAAKC,GAAG,KAAKC,GAAG,KAAKxO,KAAK,UAC9D,0BAAMyO,WAAW,SAASL,EAAE,KAAKC,EAAE,KAAKK,SAAS,KAAKC,WAAW,MAAM3O,KAAK,SAA5E,QAON4O,GAAuB,kBACzB,kBAAC,GAAD,KACI,yBAAKhN,QAAQ,aACT,0BAAMwM,EAAE,IAAIC,EAAE,IAAI3M,MAAM,KAAK4M,OAAO,KAAKC,GAAG,KAAKC,GAAG,KAAKxO,KAAK,UAC9D,uBAAG6O,OAAO,QAAQC,YAAY,MAC1B,0BAAMC,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,OACjC,0BAAMH,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,WAM3CC,GAA2B,kBAC7B,kBAAC,GAAD,KACI,yBAAKvN,QAAQ,aACT,0BAAMmN,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAIL,OAAO,QAAQC,YAAY,UAKtEM,GAAsB,kBACxB,kBAAC,GAAD,KACI,yBAAKxN,QAAQ,aACT,0BAAMmN,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKL,OAAO,QAAQC,YAAY,MACjE,0BAAMC,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKL,OAAO,QAAQC,YAAY,SAKvEO,GAAuE,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOjH,EAAV,EAAUA,QAAV,OACzE,kBAAC,GAAD,CAAYA,QAASA,GACjB,yBAAKzG,QAAQ,aACT,4BAAQ2N,GAAG,KAAKC,GAAG,KAAKC,EAAE,KAAKzP,KAAK,OAAO6O,OAAO,QAAQC,YAAY,MACtE,0BAAML,WAAW,SAASL,EAAE,KAAKC,EAAE,KAAKK,SAAS,KAAKC,WAAW,OAAjE,KAGCW,GACG,uBAAGT,OAAO,QAAQC,YAAY,KAC1B,0BAAMC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKC,GAAG,OAC/B,0BAAMH,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,UAQvCQ,GAAgC,SAAC,GAAqB,IAAnBpE,EAAkB,EAAlBA,YACtCqE,EAAY3K,uBAAY,kBAAMyH,GAAWhH,IAAI,CAAE6F,YAAaA,EAAc,MAAM,CAACA,IACvF,OACI,yBAAK3J,UAAU,gBACX,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACC/B,EAAW,GAAGgI,KAAI,SAACgI,EAAGtP,GAAJ,OACf,kBAAC,GAAD,CACI+H,QAAS/H,IAAUgL,EAAcqE,OAAYvP,EAC7CmG,IAAKjG,EACLgP,MAAOhP,EAAQgL,SClFtBuE,GAAQ,CACjBC,EAAG,UACHC,EAAG,UACHC,EAAG,UACHC,EAAG,UACHC,EAAG,WCUMC,GAA0B,SAAC,GAAD,IACnCtL,EADmC,EACnCA,QACAuL,EAFmC,EAEnCA,MACAC,EAHmC,EAGnCA,YACAC,EAJmC,EAInCA,QACAnF,EALmC,EAKnCA,QACA9C,EANmC,EAMnCA,QACAkI,EAPmC,EAOnCA,KACAC,EARmC,EAQnCA,YACAC,EATmC,EASnCA,QATmC,OAWnC,6BACI,yBAAK9O,UAAW/B,EAAgB,mBAAoB6Q,GAAW,eAAgBpI,QAASA,GACpF,yBAAKqI,MAAM,6BAA6B9O,QAAQ,aAC5C,0BACIwM,EAAE,IACFC,EAAE,IACF3M,MAAM,KACN4M,OAAO,KACPC,GAAG,KACHC,GAAG,KACHxO,KAAOoQ,GAASP,GAAMO,IAAWC,GAAe,UAEnDG,GACG,0BACIpC,EAAE,IACFC,EAAE,IACF3M,MAAM,KACN4M,OAAO,KACPC,GAAG,KACHC,GAAG,KACHxO,KAAK,OACL6O,OAAQ2B,EACR1B,YAAY,MAGnByB,GAAQ,6BAASI,OAAO,2DAA2D3Q,KAAK,eAC5EI,IAAZyE,GACG,0BAAM4J,WAAW,SAASL,EAAE,KAAKC,EAAE,KAAKK,SAAS,MAC5C7J,GAGRyL,GAAW,4BAAQf,GAAG,KAAKC,GAAG,KAAKC,EAAE,KAAKzP,KAAK,OAAO6O,OAAO,QAAQC,YAAY,MACjF3D,GACG,uBAAG0D,OAAO,QAAQC,YAAY,KAC1B,0BAAMC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKC,GAAG,OAC/B,0BAAMH,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,WC9C3C0B,GAA4B,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,SAAU1F,EAA4C,EAA5CA,QAAS2F,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAC1EC,EAAiBjM,uBAAY,SAACkM,EAAkBC,GAAnB,OAAwC,kBAAMH,EAAQE,EAAUC,MAAW,CAC1GH,IAEJ,OACI,yBAAKrP,UAAU,cACVkP,EAAS7G,KAAKpC,KAAI,SAACuC,EAAcgH,GAAf,OACf,yBACIxP,UAAW/B,EACP,YACAmR,GAAYA,EAASK,eAAiBL,EAASK,cAAcD,IAAa,aAE9E5K,IAAK4K,GACJhH,EAAIvC,KAAI,SAACwI,EAAOc,GACb,IAAMG,EAAeR,EAAS5G,MAAMkH,GAC9BG,EAAanG,EAAQgG,GACrBI,EAA2B,IAAbJ,EACdK,EAAcV,EAAUK,GAAUD,GAExC,OACI,kBAAC,GAAD,CACI7I,QAASmJ,EAAcP,EAAeC,EAAUC,QAAY/Q,EAC5DmG,IAAK2K,EACLd,MAAOA,EACPG,KAAMc,IAAiBH,EACvB/F,QAASmG,EAAWJ,GACpBV,YAAae,EAAc,QAAU,mBCtCxDE,GAAa,kBAAkBzK,MAAM,IAErC0K,GAAoB,kBAC7B,yBAAK/P,UAAU,iBACV8P,GAAW7J,KAAI,SAAC+J,EAAQrR,GAAT,OACZ,kBAAC,GAAD,CAAKiG,IAAKjG,EAAOuE,QAAS8M,SCLhCC,GAAa,kBAAkB5K,MAAM,IAAIY,IAAIwC,QAC7CyH,GAAa,kBAAkB7K,MAAM,IAAIY,IAAIwC,QAEtC0H,GAAmB,SAAC3G,GAAD,OAC5BA,EAAQvD,KAAI,SAACuC,GAAD,OAASA,EAAI4H,OAAM,SAACC,GAAD,OAAaA,SACnCC,GAAqB,SAAC9G,EAAsB0F,GAAvB,MAC9B,QACK7J,MAAM,IACNY,KAAI,SAACwI,GAAD,OACDjF,EAAQ4G,OAAM,SAAC5H,EAAK7J,GAAN,OACV6J,EAAI4H,OAAM,SAACC,EAASd,GAAV,OAAuBL,EAAS7G,KAAK1J,GAAO4Q,KAAcd,GAAS4B,YAyBhFE,GAAe,SAAC/G,GAAD,IAAuBgH,IAAvB,gEACxBhH,EAAQvD,KAAI,SAACuC,EAAKgH,GAAN,OACRhH,EAAIvC,KACA,SAACoK,EAASd,GAAV,OACKc,IACCG,GAA4B,IAAbhB,IAChBhG,EAAQgG,EAAW,IAAM,IAAID,KAC7B/F,EAAQgG,EAAW,IAAM,IAAID,IAC9B/G,EAAI+G,EAAW,IACX/G,EAAI+G,EAAW,WAMtBkB,GAAY,SAAClH,EAAmB2F,GACzC,IAAMO,EAAgBU,GAAiB5G,EAAMC,SACvCkH,EAAkBJ,GAAmB/G,EAAMC,QAAS0F,GACpDyB,EAvCa,SACnBpH,EACA2F,EACAO,EACAiB,GACU,IACFjH,EAA+DF,EAA/DE,iBAAkBC,EAA6CH,EAA7CG,mBAAoBF,EAAyBD,EAAzBC,QAASG,EAAgBJ,EAAhBI,YAYvD,OAXkB8F,EACbxJ,KAAI,SAAC2K,EAAWjS,GAAZ,OAAwBiS,EAAgBnH,EAAiB9K,GAASuR,GAAWvR,GAASsR,GAAWtR,GAA7D,KACxCkS,QAAO,SAAC/C,EAAGgD,GAAJ,OAAUhD,EAAIgD,IAAG,GACTJ,EACfzK,KAAI,SAAC2K,EAAWjS,GAAZ,OAAwBiS,EAAgBlH,EAAmB/K,GAAS,EAAI,EAApC,KACxCkS,QAAO,SAAC/C,EAAGgD,GAAJ,OAAUhD,EAAIgD,IAAG,IACT,EAAInH,GACLH,EACdvD,KAAI,SAACuC,EAAK7J,GAAN,OAAiB6J,EAAI0G,EAAS5G,MAAM3J,IAAU,GAAK,KACvDkS,QAAO,SAAC/C,EAAGgD,GAAJ,OAAUhD,EAAIgD,IAAG,GAuBTC,CAAexH,EAAO2F,EAAUO,EAAeiB,GACnE,MAAO,CAAEjB,gBAAeiB,kBAAiBC,gBCpDvCV,GAAa,kBAAkB5K,MAAM,IAAIY,IAAIwC,QAC7CyH,GAAa,kBAAkB7K,MAAM,IAAIY,IAAIwC,QAE7CuI,GAAiB,SAACrS,EAAe8K,GAAhB,OAAgD,WACnEqB,GAAWhH,IAAI,CAAE2F,iBAAkBxL,EAAewL,EAAkB9K,GAAO,OAGzEsS,GAAkB,SAACtS,EAAeyQ,GAAhB,OACpB8B,QAAQ9B,GAAYA,EAASK,eAAiBL,EAASK,cAAc9Q,KAK5DwS,GAAsC,SAAC,GAAD,IAAG1H,EAAH,EAAGA,iBAAkBgG,EAArB,EAAqBA,cAAeL,EAApC,EAAoCA,SAApC,OAC/C,yBAAKpP,UAAU,oBACX,yBAAKA,UAAU,sBACViQ,GAAWhK,KAAI,SAAC/H,EAAKS,GAAN,OACZ,kBAAC,GAAD,CACIiG,IAAKjG,EACLuE,QAAShF,EACTsL,QAASC,EAAiB9K,GAC1B+H,QAAS+C,EAAiB9K,QAASF,EAAYuS,GAAerS,EAAO8K,GACrEkF,SAAUlF,EAAiB9K,IAAU8Q,EAAc9Q,GACnD+P,aAAcjF,EAAiB9K,IAAUsS,GAAgBtS,EAAOyQ,GAblE,eAa0F3Q,QAIpG,yBAAKuB,UAAU,sBACVkQ,GAAWjK,KAAI,SAAC/H,EAAKS,GAAN,OACZ,kBAAC,GAAD,CACIiG,IAAKjG,EACLuE,QAAShF,EACTyQ,QAASlF,EAAiB9K,IAAU8Q,EAAc9Q,GAClD+P,YAAajF,EAAiB9K,IAAUsS,GAAgBtS,EAAOyQ,GAvBjE,eAuByF3Q,UCjCrG2S,GAAmB,SAACzS,EAAe+K,GAAhB,OAAkD,WACvEoB,GAAWhH,IAAI,CAAE4F,mBAAoBzL,EAAeyL,EAAoB/K,GAAO,OAGtE0S,GAAY,QAAQhM,MAAM,IAG1BiM,GAA0C,SAAC,GAAD,IAAG5H,EAAH,EAAGA,mBAAoBgH,EAAvB,EAAuBA,gBAAvB,OACnD,yBAAK1Q,UAAW/B,EAAgB,uBAC5B,yBAAK+B,UAAU,wBACVqR,GAAUpL,KAAI,SAACwI,EAAY9P,GAAb,OACX,kBAAC,GAAD,CACIiG,IAAKjG,EACLuE,QAAS,EACTuL,MAAOA,EACPjF,QAASE,EAAmB/K,GAC5B+H,QAAS0K,GAAiBzS,EAAO+K,GACjCiF,SAAUjF,EAAmB/K,IAAU+R,EAAgB/R,SAInE,yBAAKqB,UAAU,wBACVqR,GAAUpL,KAAI,SAACwI,EAAY9P,GAAb,OACX,kBAAC,GAAD,CACIiG,IAAKjG,EACLuE,QAAS,EACTuL,MAAOA,EACPE,QAASjF,EAAmB/K,IAAU+R,EAAgB/R,WC5BpE4S,GAAY,CACd,0BAAM9E,EAAE,MAAMC,EAAE,MAAMK,SAAS,MAAMnI,IAAI,KAAzC,KAGA,4BAAQgJ,GAAG,MAAMC,GAAG,MAAMC,EAAE,KAAKzP,KAAK,QAAQuG,IAAI,MAClD,uBAAGvG,KAAK,QAAQuG,IAAI,KAChB,4BAAQgJ,GAAG,MAAMC,GAAG,MAAMC,EAAE,OAC5B,4BAAQF,GAAG,MAAMC,GAAG,MAAMC,EAAE,QAEhC,uBAAGzP,KAAK,QAAQuG,IAAI,KAChB,4BAAQgJ,GAAG,MAAMC,GAAG,MAAMC,EAAE,OAC5B,4BAAQF,GAAG,MAAMC,GAAG,MAAMC,EAAE,OAC5B,4BAAQF,GAAG,MAAMC,GAAG,MAAMC,EAAE,QAEhC,uBAAGzP,KAAK,QAAQuG,IAAI,KAChB,4BAAQgJ,GAAG,MAAMC,GAAG,MAAMC,EAAE,OAC5B,4BAAQF,GAAG,MAAMC,GAAG,MAAMC,EAAE,OAC5B,4BAAQF,GAAG,MAAMC,GAAG,MAAMC,EAAE,OAC5B,4BAAQF,GAAG,MAAMC,GAAG,MAAMC,EAAE,QAEhC,uBAAGzP,KAAK,QAAQuG,IAAI,KAChB,4BAAQgJ,GAAG,MAAMC,GAAG,MAAMC,EAAE,OAC5B,4BAAQF,GAAG,MAAMC,GAAG,MAAMC,EAAE,OAC5B,4BAAQF,GAAG,MAAMC,GAAG,MAAMC,EAAE,OAC5B,4BAAQF,GAAG,MAAMC,GAAG,MAAMC,EAAE,OAC5B,4BAAQF,GAAG,MAAMC,GAAG,MAAMC,EAAE,SAIvB0D,GAAqC,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOhD,EAAY,EAAZA,MAClDiD,OAAuBjT,IAAVgT,EAAsBF,GAAUE,QAAShT,EAE5D,OACI,yBAAKuB,UAAU,QACX,yBAAK+O,MAAM,6BAA6B9O,QAAQ,eAC5C,0BAAMwM,EAAE,IAAIC,EAAE,IAAI3M,MAAM,MAAM4M,OAAO,MAAMC,GAAG,MAAMC,GAAG,MAAMxO,KAAK,UACjEqT,GACG,uBAAGxE,OAASuB,GAASP,GAAMO,IAAW,QAAStB,YAAY,OACvD,0BAAMC,GAAG,KAAKC,GAAG,KAAKC,GAAG,MAAMC,GAAG,QAClC,0BAAMH,GAAG,KAAKC,GAAG,MAAMC,GAAG,MAAMC,GAAG,WClC9CoE,GAAQ,kBACjB,yBAAK5C,MAAM,6BAA6B9O,QAAQ,eAC5C,uBAAGiN,OAAO,MAAMC,YAAY,OACxB,0BAAMC,GAAG,KAAKC,GAAG,KAAKC,GAAG,MAAMC,GAAG,QAClC,0BAAMH,GAAG,KAAKC,GAAG,MAAMC,GAAG,MAAMC,GAAG,UAKlCqE,GAAS,kBAClB,yBAAK7C,MAAM,6BAA6B9O,QAAQ,eAC5C,uBAAGiN,OAAO,YAAYC,YAAY,OAC9B,0BAAMC,GAAG,KAAKC,GAAG,MAAMC,GAAG,MAAMC,GAAG,QACnC,0BAAMH,GAAG,MAAMC,GAAG,MAAMC,GAAG,MAAMC,GAAG,UAKnCsE,GAAO,SAAC,GAAD,QAAGJ,aAAH,MAAW,EAAX,EAAchD,EAAd,EAAcA,MAAd,SAAqBqD,QAEjC,6BACI,kBAAC1R,EAAKI,IAAN,CAAUR,UAAU,UAGxB,6BACI,kBAAC,GAAD,CAAMyR,MAAOA,IACb,kBAAC,GAAD,CAAMhD,MAAOA,MAKZsD,GAAc,SAAC,GAAD,IAAGnO,EAAH,EAAGA,OAAQoO,EAAX,EAAWA,SAAUC,EAArB,EAAqBA,QAArB,OACvB,yBAAKjS,UAAU,eACT4D,GACE,yBAAK5D,UAAU,OAAO0G,QAASsL,GAC1BxK,YAAG,eAGX5D,GACG,yBAAK5D,UAAU,QAAQ0G,QAASuL,GAC5B,kBAAC,GAAD,OAGR,yBAAKjS,UAAU,gBAAgB4D,EAAS,kBAAC,GAAD,CAAM6N,MAAO7N,EAAO6N,MAAOhD,MAAO7K,EAAO6K,QAAY,kBAAC,GAAD,OAC5F7K,GACG,yBAAK5D,UAAU,SAAS0G,QAASsL,GAC7B,kBAAC,GAAD,SAMVE,GAAyC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACtCC,EAAkCD,EAAlCC,eAAgB3C,EAAkB0C,EAAlB1C,cAClBmB,EAAY,GAMlB,OALIwB,GAAgBxB,EAAUhL,KAAK,kBAAC,GAAD,CAAM6I,MAAO2D,EAAgBxN,IAAI,WAChE6K,GACAA,EAAclQ,SAAQ,SAAC8S,EAAa1T,GAC5B0T,GAAazB,EAAUhL,KAAK,kBAAC,GAAD,CAAK1C,QAAS4M,GAAWnR,GAAQiG,IAAKjG,QAEvEiS,EAAUnR,OAAS,EACtB,oCACI,kBAACW,EAAKE,WAAN,CAAiBN,UAAU,kBAC1B4Q,GAEL,MAIK0B,GAAQ,SAAC,GAAD,IAAG1I,EAAH,EAAGA,MAAH,OACjB,yBAAK5J,UAAU,eACX,4BAAKwH,YAAG,oBACPoC,EAAM3D,KAAI,SAACkM,EAAMxT,GAAP,OACP,yBAAKqB,UAAU,aAAa4E,IAAKjG,GAAjC,UACQA,EAAQ,EADhB,MAEI,yBAAKqB,UAAU,eACX,kBAAC,GAAD,CAAMyR,MAAOU,EAAKV,MAAOhD,MAAO0D,EAAK1D,MAAOqD,QAASK,EAAKL,QAASlN,IAAKjG,KAE5E,yBAAKqB,UAAU,gBACX,kBAAC,GAAD,CAASmS,KAAMA,WClFtBI,GAA8B,SAAC,GAAD,IAAG5B,EAAH,EAAGA,YAAavB,EAAhB,EAAgBA,SAAhB,OACvC,yBAAKpP,UAAU,eACVwH,YAAG,gBACJ,yBAAKxH,UAAU,sBAAsB2Q,GACpCvB,GACG,yBAAKpP,UAAU,mBACVwH,YAAG,kBACJ,kBAAC,GAAS4H,MCNboD,GAAkB,SAAC,GAAD,IAAG/D,EAAH,EAAGA,MAAOgE,EAAV,EAAUA,QAAV,OAC3B,yBAAKzS,UAAU,cAAc0G,QAAS+L,GAClC,yBAAKzS,UAAU,kBACf,yBAAKA,UAAU,iBACVwH,YAAG,wBACJ,kBAAC,GAAD,CAAMiH,MAAOA,OCSnBiE,GAAO,kBAAM5H,GAAWW,UAAU,OAE3BkH,GAAyB,WAAO,IACjCjH,EAAS3B,IAAY,kBAAsB,CAAE2B,KAAxB,EAAGpC,gBAAxBoC,KAERjI,qBACI,kBAAM,WACF9F,OAAOoF,WAAW2P,GAAM,QAE5B,CAAChH,IAGL,IAAMkH,EA5BS,SAACC,GAChB,IAAKA,EAAU,OAAO,KACtB,OAAQA,GACJ,IAAK,SACD,OAAO,kBAAC,GAAD,MACX,IAAK,SACD,OAAO,kBAAC,GAAD,MACX,IAAK,OACD,OAAO,kBAACzS,EAAKW,KAAN,CAAWf,UAAU,YAChC,IAAK,OACD,OAAO,kBAACI,EAAKI,IAAN,MACX,QACI,OAAO,MAgBEsS,CAAWpH,GAE5B,OAAKkH,EAGD,yBAAK5S,UAAU,gBACX,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,kBAAkB4S,IALnB,MCiBbG,GAA6C,SAAC,GAAkB,IAAhB7D,EAAe,EAAfA,SAAe,EACzCnF,IAAY,kBAA6B,CAAER,MAA/B,EAAGA,MAAmCD,YAAtC,EAAUA,gBAA7CC,EADgE,EAChEA,MAAOD,EADyD,EACzDA,YADyD,EAE9CrG,mBAA4B,CAClDuG,QAASD,EAAMC,QACfwJ,YAAazI,KAJuD,mBAEjEjI,EAFiE,KAE1D2Q,EAF0D,KAMhEzJ,EAAiDlH,EAAjDkH,QAAS5F,EAAwCtB,EAAxCsB,OAAQoP,EAAgC1Q,EAAhC0Q,YAAaZ,EAAmB9P,EAAnB8P,eAEtC3O,qBAAU,WACNwP,GAAS,SAAC/N,GAAD,sBAAaA,EAAb,CAAgBsE,QAASD,EAAMC,eACzC,CAACD,IAEJ,IAAM8F,EAAUhM,uBACZ,SAACkM,EAAkBC,GACf,IAAM0D,EAAa1J,EAAQgG,GAC3B,IAAK0D,EAAW3D,GAAW,CACvB,IAAMd,EAAQS,EAAS7G,KAAKmH,GAAUD,GACtC,GAAI3L,EAAQ,CACR,GAAI6K,IAAU7K,EAAO6K,MAAO,OAE5B,GADsB7K,EAAO6N,MACT,EAAG,OAE3B,IAAM0B,EAAalV,EAAeiV,EAAY3D,GAAU,GAClD6D,EAAiBnV,EAAe+U,EAAYxD,GAAWD,GAAU,GACjEkC,EAAQ7N,EAASA,EAAO6N,MAAQ,EAAI,EAC1CwB,GAAS,SAAC/N,GAAD,sBACFA,EADE,CAELsE,QAASvL,EAAeuL,EAASgG,EAAU2D,GAC3CH,YAAa/U,EAAe+U,EAAaxD,EAAU4D,GACnDxP,OAAQ,CAAE6K,QAAOgD,iBAI7B,CAACjI,EAAS5F,EAAQoP,EAAa9D,IAG7B8C,EAAW3O,uBAAY,WACzB,IAAKiG,EAAa,CACd,IAAM+J,EAxEI,SAClBzP,EACA0P,EACA9J,EACA0F,GAEA,GAAItL,EAAQ,CACR,IAAM6L,EAAgBU,GAAiBmD,GAEjCC,EADoBpD,GAAiB3G,GACAvD,KAAI,SAACuC,EAAK7J,GAAN,OAAgB6J,IAAQiH,EAAc9Q,MAE/E6U,EAAsBlD,GAAmB9G,EAAS0F,GAClDwB,EAAkBJ,GAAmBgD,EAAapE,GAElDuE,EAAoBD,EACrBvN,KAAI,SAACuC,EAAK7J,GAAN,OAAgB6J,IAAQkI,EAAgB/R,MAC5C+U,UAAUxC,SACf,OAAO,eACAtN,EADP,CAEIkO,SAAS,EACTrC,cAAe8D,EACfnB,eAAgBf,GAAUoC,KAGlC,MAAO,CAAE3B,SAAS,GAgDO6B,CAAc/P,EAAQ2F,EAAMC,QAASA,EAAS0F,GAE/DpE,GAAWhH,IAAI,CAAE0F,UAASI,MAAM,GAAD,mBAAML,EAAMK,OAAZ,CAAmByJ,MAClDvI,GAAWW,UAAU4H,EAASvB,QAAU,OAAS,UAEjDmB,GAAS,SAAC/N,GAAD,sBACFA,EADE,CAEL8N,YAAazI,GACb3G,YAAQnF,EACR2T,eAAgBiB,EAASjB,uBAGlC,CAAC9I,EAAa1F,EAAQ2F,EAAMC,QAASD,EAAMK,MAAOJ,EAAS0F,IAExD+C,EAAU5O,uBAAY,WACnBiG,IACDwB,GAAWW,UAAU,UACrBwH,EAAS,CAAED,YAAazI,GAAe3G,YAAQnF,EAAW+K,QAASD,EAAMC,aAE9E,CAACF,EAAaC,IAEXqK,EAAevQ,uBAAY,kBAAM4P,GAAS,SAAC/N,GAAD,sBAAaA,EAAb,CAAgBkN,oBAAgB3T,SAAe,IAEvFgL,EAA6DF,EAA7DE,iBAAkBC,EAA2CH,EAA3CG,mBAAoBC,EAAuBJ,EAAvBI,YAAaC,EAAUL,EAAVK,MA7Da,EA8DhB6G,GAAUlH,EAAO2F,GAAjEO,EA9DgE,EA8DhEA,cAAeiB,EA9DiD,EA8DjDA,gBAAiBC,EA9DgC,EA8DhCA,YAChCpI,EAAoB2G,EAApB3G,gBACF4G,EAAYvL,EAAS2M,GAAayC,GAAa,GAASzC,GAAa/G,GACrE4F,EAAWxF,EAAMA,EAAMnK,OAAS,GAEtC,OACI,6BACI,kBAAC,GAAD,MACC2S,IAAmB9I,GAAe,kBAAC,GAAD,CAAiBmF,MAAO2D,EAAgBK,QAASmB,IACpF,kBAAC,GAAD,CAAY1I,KAAMJ,GAAWI,KAAMG,QAASP,GAAWO,SACnD,yBAAKrL,UAAU,QAAQ6T,MAAO,CAAEtL,oBAC5B,kBAAC,GAAD,CAAayJ,SAAUA,EAAUC,QAASA,EAASrO,OAAQA,IAC3D,kBAAC,GAAD,CACIsL,SAAUA,EACV1F,QAASA,EACT2F,UAAWA,EACXE,QAASA,EACTD,SAAUA,IAEd,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAW3F,iBAAkBA,EAAkBgG,cAAeA,EAAeL,SAAUA,IACvF,kBAAC,GAAD,CAAQzF,YAAaA,IACrB,kBAAC,GAAD,CAAaD,mBAAoBA,EAAoBgH,gBAAiBA,IACtE,kBAAC,GAAD,CAAOC,YAAaA,EAAavB,SAAUA,IAC3C,kBAAC,GAAD,CAAOxF,MAAOA,Q,SCvIrBkK,GAA6C,SAAC,GAAD,IAAGrR,EAAH,EAAGA,MAAH,OACtD,0BAAMzC,UAAU,oBAAoBwH,YAAG/E,KCY9BsR,GAXQ,SACjBnR,GADiB,6DAEgC,GAFhC,IAEfoR,sBAFe,gBAGF,SAAC9H,GACZ8H,GAAgB9H,EAAM8H,iBAC1B,IAAMC,EAAW/H,EAAMC,OAAOvN,MAC9BgE,EAAGqR,KCsBDC,GAA4D,SAAC,GAAD,IAAG9L,EAAH,EAAGA,MAAOxJ,EAAV,EAAUA,MAAV,OAC9D,4BAAQA,MAAOA,GAAQuV,YAAS/L,KAWvBgM,GAAiD,SAAC,GAYxD,IAXHxV,EAWE,EAXFA,MACAyV,EAUE,EAVFA,UACAjM,EASE,EATFA,MACA3F,EAQE,EARFA,MACA6R,EAOE,EAPFA,SACAtU,EAME,EANFA,UACAuU,EAKE,EALFA,SACAC,EAIE,EAJFA,OACAC,EAGE,EAHFA,QACAC,EAEE,EAFFA,SACAC,EACE,EADFA,KAEMC,EApB+B,SAACH,EAASJ,GAC/C,IAAMQ,EAASJ,EAAQxO,KAAI,SAAC6O,GAAD,OAAOA,EAAElW,SACpC,OAAOyV,EACDQ,EAAO5O,IAAIoO,GACXQ,EAAO5O,KAAI,SAAC6K,EAAGtR,GAAJ,YAAiBf,IAANqS,EAAkB,GAAkB,kBAANA,EAAiBA,EAAI3K,OAAO3G,MAgBjEuV,CAAgBN,EAASJ,GACxCW,EAAkB,SAACC,GAAD,OAA+B,SAACC,GAAD,OACnDD,GAAWA,EAAQR,EAAQG,EAAaO,QAAQD,IAActW,SAC5DwW,EAAeX,EAAQY,MAAK,SAACzK,GAAD,OAAYA,EAAOhM,QAAUA,KACzD0W,EAAeF,EAAeX,EAAQU,QAAQC,GAAgB,EAEpE,OACI,yBACIpV,UAAW/B,EACP+B,EACAsU,GAAY,YACX1V,GAAS,aACV6D,GAAS,cAEZ2F,GAAS,+BAAQZ,YAAGY,IACrB,4BACIpI,UAAU,gBACV2U,KAAMA,EACND,SAAUA,EACVH,SAAUR,GAAuBiB,EAAgBT,IACjDC,OAAQT,GAAuBiB,EAAgBR,IAC/C5V,MAAOgW,EAAaU,IACnBb,EAAQxO,KAAI,SAAC2E,EAAQjM,GAAT,OACT,kBAAC,GAAD,CAAQyJ,MAAOwC,EAAOxC,MAAOxJ,MAAOgW,EAAajW,GAAQiG,IAAKjG,QAGrE8D,GAAS,kBAAC,GAAD,CAAcA,MAAOA,MC7ErC8S,GAAW,SAAC3K,GAAD,OAAyBA,GAAUE,GAAWQ,WAAWV,IAEpE4K,GAAyD,CAJrC,CAAEpN,MAAO,qBAAsBxJ,WAAOH,IAID,mBAExD2K,GAFwD,CAH1C,CAAEhB,MAAO,qBAAsBxJ,MAAO,YAS9C6W,GAA0B,kBACnC,yBAAKzV,UAAU,mBACX,kBAAC,GAAD,CAAQyU,QAASe,GAAmBjB,SAAUgB,GAAU3W,WAAOH,M,oCCX1DiX,GAAb,+MACIpT,MAA4B,CAAEqT,UAAU,GAD5C,wDAKc,IACEA,EAAaC,KAAKtT,MAAlBqT,SADH,EAEqBC,KAAK9V,MAAvBiF,EAFH,EAEGA,SAAU8Q,EAFb,EAEaA,IAElB,OAAIF,EAEI,yBAAK3V,UAAU,cACX,4BAAKwH,YAAG,8BACR,2BAAIA,YAAG,yBACP,4BAAQsO,KAAK,SAASpP,QAASmP,GAC1BrO,YAAG,wBAKbzC,MApBf,GAAmCgR,aAAtBL,GAGFM,yBAA2B,iBAA2B,CAAEL,UAAU,ICHtE,IAAMM,GAAkB,WAAO,IAC1BpM,EAAcE,IAAY,kBAAoB,CAAEF,UAAtB,EAAGA,cAA7BA,UACR,OAAKA,EAED,kBAAC,GAAD,CAAegM,IAAK/K,GAAWO,SAC3B,kBAAC,GAAD,CAAc6D,SAAUrF,KAHT,kBAAC,GAAD,OCLrBqM,GAAW,CACb,CACIC,MAAO,iBACPC,KACI,2MAGR,CACID,MAAO,YACPC,KAAM,uGAEV,CACID,MAAO,eACPC,KACI,wKAKCC,GAAb,+MACI/T,MAAQ,CAAEgU,UAAW,EAAGC,SAAU,GADtC,EAEIC,SAAW,EAFf,EAIIC,kBAAoB,WAChB,IAAMzK,EAAU,EAAK1J,MAAMgU,UACvBtK,IAAYkK,GAAS,EAAK5T,MAAMiU,UAAUH,KAAK3W,QAAQ/B,EAAQC,SAAS+Y,cAAc,EAAKF,UAC/F,EAAKvD,SAAS,CAAEqD,UAAWtK,EAAU,KAP7C,EAcI2K,WAAa,kBAAO,EAAKH,SAAW9Y,EAAQC,SAASiZ,YAAY,EAAKH,kBAAmB,KAd7F,EAgBII,OAAS,SAACC,GAAD,OAAqB,WAC1BpZ,EAAQC,SAAS+Y,cAAc,EAAKF,UACpC,EAAKvD,SAAS,CAAEqD,UAAW,EAAGC,SAAUO,IACxC,EAAKH,eAnBb,mEAWQf,KAAKe,eAXb,6CAuBQjZ,EAAQC,SAAS+Y,cAAcd,KAAKY,YAvB5C,+BA0Bc,IAAD,OACL,OACI,yBAAKxW,UAAU,mBACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,gBACX,4BACKkW,GAASjQ,KAAI,SAAC8Q,EAAGvX,GACd,IAAMwX,EAAa,EAAK1U,MAAMiU,WAAa/W,EACrCQ,EAAYgX,EAAa,gBAAavY,EACtCwW,EAAU+B,OAAavY,EAAY,EAAKoY,OAAOrX,GACrD,OACI,wBAAIoF,IAAKpF,EAAGkH,QAASuO,EAASjV,UAAWA,GACpC+W,EAAEZ,YAMvB,yBAAKnW,UAAU,gBACVkW,GAASN,KAAKtT,MAAMiU,UAAUH,KAAKa,UAAU,EAAGrB,KAAKtT,MAAMgU,kBA7CpF,GAAoCP,a,SCe9BmB,GAAmB,SAACjC,EAAuBkC,GAAxB,OAAyD,SAACvY,GAAD,OAC9EqW,EAAQkC,EAAOvY,GAASA,EAAMuY,OAASvY,KAE9BwY,GAA8B,SAAC,GAAD,IACvCxY,EADuC,EACvCA,MACAwJ,EAFuC,EAEvCA,MACAiP,EAHuC,EAGvCA,YACA5U,EAJuC,EAIvCA,MACA6R,EALuC,EAKvCA,SACAtU,EANuC,EAMvCA,UACAsX,EAPuC,EAOvCA,eACA/C,EARuC,EAQvCA,SACAC,EATuC,EASvCA,OACA+C,EAVuC,EAUvCA,QACAC,EAXuC,EAWvCA,UACA9C,EAZuC,EAYvCA,SAZuC,IAavCoB,YAbuC,MAahC,OAbgC,EAcvCqB,EAduC,EAcvCA,KACAxC,EAfuC,EAevCA,KACA8C,EAhBuC,EAgBvCA,aACAC,EAjBuC,EAiBvCA,SAjBuC,OAmBvC,yBAAK1X,UAAW/B,EAAgB+B,EAAWsU,GAAY,aAClDlM,GAAS,+BAAQZ,YAAGY,IACrB,yCACIuM,KAAMA,EACN3U,UAAW/B,EAAgBqZ,EAAgB7U,GAAS,cACpD8R,SAAUA,GAAYR,GAAuBmD,GAAiB3C,EAAU4C,IACxE3C,OAAQA,GAAUT,GAAuBmD,GAAiB1C,EAAQ2C,IAClEI,QAASA,EACTF,YAAaA,GAAelD,YAASkD,GACrCM,IAAKF,EACLC,SAAUA,GACN,CAAE9Y,QAAO4Y,YAAW9C,WAAUoB,UAErCrT,GAAS,kBAAC,GAAD,CAAcA,MAAOA,MAM1BmV,GAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,IAAU7X,iBAAV,MAAsB,eAAtB,EAAyC8X,EAAzC,6CACrB,kBAACD,EAAD,MACK,gBAAGtD,EAAH,EAAGA,SAAUC,EAAb,EAAaA,OAAQF,EAArB,EAAqBA,SAAU1V,EAA/B,EAA+BA,MAAO6D,EAAtC,EAAsCA,MAAtC,OACG,kBAAC,GAAD,cAAW,CAAE6R,WAAUE,SAAQD,WAAUvU,YAAWpB,QAAO6D,SAAaqV,Q,GC5EpCzO,YAA+B,CAAE0O,UAAW,GAAIC,QAAS,K,qBAAlGC,G,MAAoBC,G,MCCrBjO,GAAa,WACf,IACI,IAAM+N,EAAUnU,IAAWM,IAJtB,eAKL,OAAOoC,KAAK4D,MAAM6N,GACpB,MAAOlS,GACL,MAAO,KAWThC,GAAM,SAACqU,GACa,oBAAXA,EACPD,GAAkBpU,KAAI,gBAAGiU,EAAH,EAAGA,UAAH,MAAoB,CAAEA,UAAWI,EAAOJ,OAE9DG,GAAkBpU,IAAI,CAAEiU,UAAWI,IAX9B,SAACJ,GACV,IAAMhN,EAAUd,KAChBc,EAAQC,QAAQ+M,GACZhN,EAAQtL,OAAS,IAAIsL,EAAQE,MACjCpH,IAAWC,IAfF,cAeYyC,KAAKC,UAAUuE,IASpCqN,CAAKF,GAAkB/T,MAAM4T,YAyB3B5T,GAAM,kBAAiB8F,KAAa,IAAM,IAEhDiO,GAAkBpU,IAAI,CAAEiU,UAAW5T,OAE5B,IAAMkU,GAAe,CAAEvU,OAAKK,OAAK+G,KAxB3B,WACT,IAAMH,EAAUd,KACZc,EAAQtL,OAAS,GAAGsL,EAAQI,QAChCtH,IAAWC,IAhCF,cAgCYyC,KAAKC,UAAUuE,IACpCmN,GAAkBpU,IAAI,CAAEiU,UAAWhN,EAAQ,MAoBDuN,MA1BhC,kBAAMD,GAAavU,IAAI,KA0BgByU,UAVnC,kBACdzU,IAAI,SAACxB,GACD,IAAMkW,EATC,SAAClW,GAAD,OACXA,EAAM2D,KAAI,SAACwS,GAAD,sBACHA,EADG,CAENC,MAAO,EACP1J,OAAQyJ,EAAOzJ,OAAO/I,KAAI,iBAAO,WAKjB0S,CAAOrW,GACvB,MAAM,GAAN,mBAAWkW,EAAQI,MAAM,IAAzB,CAA6BJ,EAAQ,UC5BvC1U,GAAM,SAACqU,GAFA,IAACU,EAGY,oBAAXV,EACPD,GAAkBpU,KAAI,gBAAGkU,EAAH,EAAGA,QAAH,MAAkB,CAAEA,QAASG,EAAOH,OAE1DE,GAAkBpU,IAAI,CAAEkU,QAASG,IAN3BU,EAQLX,GAAkB/T,MAAM6T,QARMnU,IAAWC,IAfrC,cAe+CyC,KAAKC,UAAUqS,KAqBrEC,GAAS,SAACpa,EAAgBqa,GAAjB,OACXjV,IAAI,SAACkU,GACD,IAAMa,EAAOb,EAAQzZ,QAAO,SAAC0P,EAAGtP,GAAJ,OAAcA,IAAUD,KAEpD,OADAma,EAAK/Z,OAAOia,EAAO,EAAGf,EAAQtZ,IACvBma,MAMfX,GAAkBpU,IAAI,CAAEkU,QAxCX,WACT,IACI,IAAMA,EAAUnU,IAAWM,IARtB,eASL,OAAOoC,KAAK4D,MAAM6N,GACpB,MAAOlS,GACL,MAAO,IAmCkBkT,KAE1B,I,GCrDKC,GDqDCC,GAtBD,SAACvE,EAAcwE,GAAf,OAAqCrV,IAAI,SAACkU,GAAD,OAAc,CAAErD,OAAMwE,WAAUpa,KAAMd,MAAtC,mBAAwD+Z,QAsBhGkB,GAdE,SAACT,GAAD,OAA0B3U,IAAI,SAACkU,GAAD,OAAaA,EAAQzZ,QAAO,SAAC6a,GAAD,OAAOA,EAAEra,OAAS0Z,EAAO1Z,YAcrFma,GAJI,SAAClN,GAAD,OAAqB8M,GAAO9M,EAASA,EAAU,IAInDkN,GALE,SAAClN,GAAD,OAAsBA,EAAU,EAAI8M,GAAO9M,EAASA,EAAU,QAAKvN,GEzC5E4a,GAAqC,CAAE1E,KAAM,GAAIwE,SAAU,I,GACxCG,KAAMC,OAA4BF,IAAnDG,G,GAAAA,KAAMC,G,GAAAA,OACR/O,GAA6C,CAAEmK,OAAQwE,GAAeK,OAAQ,IAC9EC,GAAa,CAAEhF,KAAM,CAAEJ,SAAU,SAACzD,GAAD,OAAkBA,OAA4CrS,EAAxC,CAAEmb,GAAI,kCAEtDC,GAAiD,SAAC,GAAe,IAAb7T,EAAY,EAAZA,MAAY,EACjD/C,mBAASyH,IADwC,mBAClEoP,EADkE,KAC5DC,EAD4D,KAGnEC,EAAW3W,uBACb,YAAyB,IAAtBsR,EAAqB,EAArBA,KAAMwE,EAAe,EAAfA,SACLD,GAAgBvE,EAAMwE,GACtBnT,MAEJ,CAACA,IAGL,OACI,kBAACwT,GAAD,CACIxZ,UAAU,sBACVga,SAAUA,EACVL,WAAYA,GACZG,KAAMA,EACNvF,SAAUwF,GACV,kBAAC,GAAD,CAAWvC,WAAS,EAACK,MAAO4B,GAAO9E,KAAMvM,MAAM,uBAC/C,kBAAC,GAAD,CAAWyP,MAAO4B,GAAON,SAAU/Q,MAAM,2BACzC,4BAAQ0N,KAAK,UAAUtO,YAAG,2BAKzByS,GAAsB,WAAO,IAAD,EACXhX,oBAAS,GADE,mBAC9BiX,EAD8B,KACvBC,EADuB,KAG/BzT,EAAUrD,uBAAY,kBAAM8W,GAAS,KAAO,IAC5CnU,EAAQ3C,uBAAY,kBAAM8W,GAAS,KAAQ,IAEjD,OAAOD,EACH,kBAAC,GAAD,CAAelU,MAAOA,IAEtB,4BAAQhG,UAAU,aAAa0G,QAASA,EAASoP,KAAK,UACjDtO,YAAG,mBC3CH4S,GAAuD,SAAC,GAAqB,IAAnB3B,EAAkB,EAAlBA,OAAQ4B,EAAU,EAAVA,IACnE1F,EAAmB8D,EAAnB9D,KAAMwE,EAAaV,EAAbU,SAERmB,EAASjX,uBAAY,kBAAM6V,GAAmBmB,KAAM,CAACA,IACrDE,EAAWlX,uBAAY,kBAAM6V,GAAqBmB,KAAM,CAACA,IACzDjP,EAAS/H,uBAAY,kBAAM6V,GAAmBT,KAAS,CAACA,IAE9D,OACI,wBAAIzY,UAAU,cACV,wBAAIA,UAAU,cACV,0BAAMA,UAAU,mBAAmB0G,QAAS6T,GACxC,kBAACna,EAAKE,WAAN,OAEJ,0BAAMN,UAAU,sBAAsBqa,EAAM,GAC5C,0BAAMra,UAAU,iBAAiB0G,QAAS4T,GACtC,kBAACla,EAAKE,WAAN,QAGR,wBAAIN,UAAU,eAAe2U,GAC7B,wBAAI3U,UAAU,mBAAmBmZ,GACjC,wBAAInZ,UAAU,kBACV,0BAAMA,UAAU,gBAAgB0G,QAAS0E,GACrC,kBAAChL,EAAKiB,MAAN,UCTdmZ,GAAqB,SAACC,GACxB,IAAMC,EAASzb,KAAKU,MAAM8a,EAAYE,cAAgBF,EAAYG,iBAClE,OAAO1C,GAAkB/T,MACpB6T,QAAQY,MAAM,EAAG6B,EAAYG,iBAC7B3U,KAAI,SAACwS,EAAQ9Z,GAAT,OAVK,SAAC8Z,EAAgBoC,EAAmBH,GAApC,MAAqE,CACnFjC,SACAzJ,OAAQ/Q,EAAWyc,GAAQzU,KAAI,iBAAO,MACtCyS,MAAO,GAOqBoC,CAAUrC,EAAQ9Z,EAAO+b,OAOnDK,GAAyB,CAC3BJ,cAAe,CACXpG,SAAU,SAACzD,GACP,IAAM5S,EAAMuK,OAAOqI,GACnB,OAAOkK,MAAM9c,IAAQA,EAAM,GAAK,CAAE0b,GAAI,sCAAoCnb,IAGlFmc,gBAAiB,CACbrG,SAAU,SAACzD,GACP,IAAM5S,EAAMuK,OAAOqI,GACnB,OAAIkK,MAAM9c,IAAQA,EAAM,GAAKA,EAAM,GAAW,CAAE0b,GAAI,mCAChD1b,EAAMga,GAAkB/T,MAAM6T,QAAQvY,OAC/B,CAAEma,GAAI,kDADjB,KAMNqB,GAAS,SAAC,GAA2D,IArB9CR,EAqBXE,EAAwD,EAAxDA,cAAeC,EAAyC,EAAzCA,gBArBJH,EAsBL,CAAEE,eAAgBA,EAAeC,iBAAkBA,GAtBjBvC,GAAavU,IAAI0W,GAAmBC,KAyBxFpB,GAAmC,CAAEsB,cAAe,KAAMC,gBAAiB,I,GACxDtB,KAAMC,OAA0BF,IAAjDG,G,GAAAA,KAAMC,G,GAAAA,OAEDyB,GAAoB,WAAO,IAC5BlD,EAAYC,IAAmB,kBAAkB,CAAED,QAApB,EAAGA,YAAlCA,QAD2B,EAGX/U,mBAAsC,CAAE4R,OAAQwE,GAAeK,OAAQ,KAH5D,mBAG5BI,EAH4B,KAGtBC,EAHsB,KAKnC,OACI,yBAAK/Z,UAAU,kBACX,yBAAKA,UAAU,WACX,kBAAC,GAAD,CACIA,UAAU,UACVga,SAAUiB,GACVtB,WAAYoB,GACZjB,KAAMA,EACNvF,SAAUwF,GACV,kBAAC,GAAD,CAAWlC,MAAO4B,GAAOkB,cAAevS,MAAM,wBAAwB0N,KAAK,WAC3E,kBAAC,GAAD,CAAW+B,MAAO4B,GAAOmB,gBAAiBxS,MAAM,0BAA0B0N,KAAK,WAC/E,4BAAQA,KAAK,UAAUtO,YAAG,wBAGlC,yBAAKxH,UAAU,WACX,yBAAKA,UAAU,sBACX,+BACI,+BACKgY,EAAQ/R,KAAI,SAACwS,EAAQ9Z,GAAT,OACT,kBAAC,GAAD,CAAW8Z,OAAQA,EAAQ4B,IAAK1b,EAAOiG,IAAK6T,EAAO1Z,aAKnE,kBAAC,GAAD,SCnEVoc,GAAW,SAACrK,GACd,GAAIA,GAAKA,EAAEqG,OAAQ,CACf,IAAMiE,EAAS3S,OAAOqI,EAAEqG,QACxB,IAAK6D,MAAMI,IAAWA,GAAU,EAC5B,OAAOA,IAKbC,GAAe,SAACC,GAAD,YAA2B7c,IAAR6c,EAAoBnV,OAAOmV,GAAO,IAE7DC,GAAS,SAAC,GAAuF,IAArFvM,EAAoF,EAApFA,OAAQwM,EAA4E,EAA5EA,YAAanR,EAA+D,EAA/DA,MAAOkK,EAAwD,EAAxDA,SAAUkH,EAA8C,EAA9CA,UAAWrZ,EAAmC,EAAnCA,OAAmC,EAC/Ea,oBAAS,GADsE,mBAClGiX,EADkG,KAC3FC,EAD2F,OAErElX,oBAAiB,kBAAMoY,GAAarM,EAAOsM,QAF0B,mBAElGI,EAFkG,KAEtFC,EAFsF,KAInGpE,EAAUlU,uBAAY,WACxBmY,GAAerB,GAAS,KACzB,CAACqB,IAEEI,EAAcvY,uBAChB,SAACiY,GACG,GAAIE,EAAa,CACb,IAAMtd,EAAMid,GAASG,QACT7c,IAARP,EACAyd,EAAc,IACPzd,GAAO,GAAKA,GAAOmM,GAC1BsR,EAAcL,MAI1B,CAACE,EAAanR,IAGZmK,EAASnR,uBACX,SAACiY,GACG,GAAIE,EAAa,CACb,IAAMtd,EAAMid,GAASG,QACT7c,IAARP,GACAqW,EAAS,eAAKvF,EAAN,CAAcsM,IAAKpd,KAE/Bic,GAAS,MAGjB,CAACqB,EAAaxM,EAAQuF,IAGpByF,EAAW3W,uBACb,SAAC6I,GACGA,EAAM8H,iBACNQ,EAAOkH,KAEX,CAAClH,EAAQkH,IAGPG,EAAYxY,uBACd,SAACyY,GACQN,IAAexM,EAAO8M,QAC3BvH,EAAS,eAAKvF,EAAN,CAAc8M,cAE1B,CAACN,EAAaxM,EAAQuF,IAGpBwH,EAAY1Y,uBAAY,WAC1BwY,EAAUpT,OAAOuG,EAAOsM,KAAO,MAChC,CAACO,EAAW7M,IAETgN,EAAW3Y,uBAAY,WACzBwY,GAAgC,EAAtBpT,OAAOuG,EAAOsM,QACzB,CAACO,EAAW7M,IAMf,GAJAvL,qBAAU,WACNkY,EAAcN,GAAarM,EAAOsM,QACnC,CAACtM,EAAOsM,WAEW7c,IAAlBuQ,EAAO8M,OACP,OAAO9M,EAAO8M,OAAS,EACnB,wBAAI9b,UAAU,wBAAwBgP,EAAO8M,QAE7C,wBAAI9b,UAAU,sBAAsBgP,EAAO8M,QAInD,IAAK5B,EAAO,CACR,IAAM+B,EAAYT,GAAepZ,EAAS,gBAAkB,SACtD8Z,EAAcV,GAAeC,EACnC,OACI,wBAAI/U,QAASwV,OAAczd,EAAY8Y,EAASvX,UAAWic,GACvD,yBAAKvV,QAASwV,EAAc3E,OAAU9Y,EAAWuB,UAAU,cACtD0b,GAEJQ,GACG,oCACI,4BAAQlc,UAAU,iBAAiB8V,KAAK,SAASpP,QAASqV,GAA1D,KAGA,4BAAQ/b,UAAU,gBAAgB8V,KAAK,SAASpP,QAASsV,GAAzD,OAQpB,OACI,4BACI,0BAAMhC,SAAUA,GACZ,kBAAC,GAAD,CACIha,UAAU,eACVpB,MAAO8c,EACPlE,WAAS,EACTjD,SAAUqH,EACVpH,OAAQA,EACRsB,KAAK,cC1HZqG,GAA4D,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,MAAOrc,EAA6B,EAA7BA,UAA6B,IAAlBsc,WAAkB,MAAZ,MAAY,IAClFrZ,oBAAS,GADyE,mBAC3GsZ,EAD2G,KACjGC,EADiG,KAE5GC,EAAYF,EAAWH,EAAOC,GAASD,EAEvC1V,EAAUrD,uBAAY,WACpBgZ,IACAG,GAAY,GACZ7e,OAAOoF,YAAW,kBAAMyZ,GAAY,KAAQ,QAEjD,CAACH,IAEJ,OAAOK,IAAMC,cAAcL,EAAK,CAAE5V,UAAS1G,aAAayc,ICgCtDG,GAAiB,SAACnE,EAAqBoC,EAAmBgC,GAAzC,OAA8D,SAAC7N,GAClF,IAAM6J,EAAI,YAAOJ,EAAOzJ,QACxB6J,EAAKgE,GAAY7N,EATE,SAACyJ,EAAqBoC,GACzCxC,GAAavU,KAAI,SAACiU,GACd,IAAMc,EAAI,YAAOd,GAEjB,OADAc,EAAKgC,GAAapC,EACXI,KAMXiE,CAAe,eAAKrE,EAAN,CAAczJ,OAAQ6J,IAAQgC,KAGnCkC,GAAgC,WAAO,IACxChF,EAAcE,IAAmB,kBAAoB,CAAEF,UAAtB,EAAGA,cAApCA,UACF2C,EAAS3C,EAAU,GAAG/I,OAAOvP,OAC7B+b,EA9Ca,SAACzD,EAAsB2C,GAE1C,IADA,IAAMsC,EAAW/e,EAAWyc,GAAQzU,KAAI,kBAAM,KACrCzG,EAAI,EAAGA,EAAIuY,EAAUtY,OAAQD,IAElC,IADA,IAAMwP,EAAwB+I,EAAUvY,GAAGwP,OAClCtP,EAAI,EAAGA,EAAIsP,EAAOvP,OAAQC,SACNjB,IAArBuQ,EAAOtP,GAAGoc,QAAsBkB,EAAStd,KAGrD,IAAMud,EAAQD,EAAStJ,WAAU,SAACxV,GAAD,OAASA,EAAM6Z,EAAUtY,UAC1D,OAAkB,IAAXwd,OAAexe,EAAYwe,EAqCdC,CAAenF,EAAW2C,GACxCyC,EAAepF,EAAU9R,KAAI,SAACwS,GAAD,OAAYA,EAAOzJ,OAAO6B,QAAO,SAACuM,EAAKC,GAAN,OAAcD,GAAOC,EAAIvB,QAAU,KAAI,MAE3G,OACI,+BACI,+BACI,4BACI,kBAAC,GAAD,CAAsBM,KAAMjI,YAAS,iBAAkBkI,MAAM,IAAIC,IAAI,KAAKtc,UAAU,gBACnF+X,EAAU9R,KAAI,WAAiC4U,GAAjC,QAAGpC,OAAU9D,EAAb,EAAaA,KAAMwE,EAAnB,EAAmBA,SAAnB,OACX,kBAAC,GAAD,CAAsBiD,KAAMzH,EAAM0H,MAAOlD,EAAUvU,IAAKiW,EAAWyB,IAAI,YAInF,+BACKre,EAAWyc,GAAQzU,KAAI,SAACgI,EAAG4O,GACxB,IAAMS,EAAgB9B,IAAgBqB,EAChCU,EAlDD,SAACxF,EAAsByD,GAC5C,QAAoB/c,IAAhB+c,EAA2B,OAAO,EACtC,IAAK,IAAIhc,EAAI,EAAGA,EAAIuY,EAAUtY,OAAQD,IAAK,CAEvC,QAAmBf,IADJsZ,EAAUvY,GAAGwP,OAAOwM,GACxBF,IAAmB,OAAO,EAEzC,OAAO,EA4C6BkC,CAAiBzF,EAAWyD,GAC1CiC,EAAQ/C,EAASmC,EACjBlH,EA3CJ,SAACoC,EAAsBkF,EAAeQ,GACxD,IAAMT,EAAWjF,EAAU9R,KACvB,SAACwS,GAAD,OAAYA,EAAOzJ,OAAO/I,KAAI,SAAC+I,GAAD,OAAYA,EAAO8M,UAAQvd,QAAO,SAAC0P,EAAGtP,GAAJ,OAAcA,IAAUse,KAAO,MAEnG,GAAID,EAASze,QAAO,SAACuS,GAAD,YAAarS,IAANqS,KAAiBrR,OAAQ,OAAO,EAC3D,IAAMie,EAAYV,EAAS/W,KAAI,SAACH,GAAD,OAAaA,EAAI,GAAKA,EAAI,QAAKrH,KAAYoS,QAAO,SAAC/C,GAAD,IAAYgD,EAAZ,uDAAgB,EAAhB,OAAsBhD,EAAIgD,IAAG,GAC9G,OAAOI,QAAQwM,EAAYD,GAAUC,IAAcD,GAAST,EAASze,QAAO,SAACuS,GAAD,OAAa,IAANA,KAASrR,QAqC3Dke,CAAc5F,EAAW8E,EAAUY,GACpD,OACI,wBAAI7Y,IAAK6Y,EAAOzd,UAAWwb,GAAeqB,EAAWrB,EAAc,gBAAa/c,GAC5E,4BACKgf,EACA9H,GACG,0BAAM3V,UAAU,eACZ,kBAACI,EAAKC,MAAN,QAIX0X,EAAU9R,KAAI,SAACwS,EAAQoC,GAAT,OACX,kBAAC,GAAD,CACIjW,IAAKiW,EACL7L,OAAQyJ,EAAOzJ,OAAO6N,GACtBxS,MAAOoT,EACPhC,UAAW8B,EACXhJ,SAAUqI,GAAenE,EAAQoC,EAAWgC,GAC5Cza,OAAQya,EAAW9E,EAAUtY,SAAWob,EACxCW,YAAa8B,WAMjC,wBAAItd,UAAU,OACV,kBAAC,GAAD,CAAsBoc,KAAMjI,YAAS,cAAekI,MAAM,SAAIC,IAAI,OACjEa,EAAalX,KAAI,SAAC6V,EAAQ8B,GAAT,OACd,wBAAIhZ,IAAKgZ,GACJ9B,OACgBrd,IAAhB+c,GAA6BM,IAAW7c,KAAK4e,IAAL,MAAA5e,KAAI,YAAQke,KACjD,kBAAC/c,EAAKK,MAAN,CAAYT,UAAU,mBCpGzC8d,GAAyC,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAClD,6BACI,4BAAQrX,QAAS2R,GAAanN,KAAMlL,UAAU,QAC1C,kBAACI,EAAKW,KAAN,OAEHgd,GACG,4BAAQrX,QAAS2R,GAAaC,MAAOtY,UAAU,WAC1CwH,YAAG,gBAGXuW,GACG,4BAAQrX,QAAS2R,GAAaE,UAAWvY,UAAU,aAC/C,kBAACI,EAAKa,QAAN,SCTH+c,GAAyB,WAAO,IACjCC,EAAehG,IAAmB,kBAAoB,CAAEgG,YAAtB,EAAGlG,UAA0CtY,WAA/Ewe,WAER,OACI,kBAAC,GAAD,CAAepI,IAAKwC,GAAaC,OAC7B,yBAAKtY,UAAU,kBACX,kBAAC,GAAD,CAAQ+d,SAAUE,IACjBA,EAAa,kBAAC,GAAD,MAAwB,kBAAC,GAAD,S,kBRf1ChF,K,iBAAAA,E,eAAAA,E,aAAAA,E,gBAAAA,E,iBAAAA,E,kBAAAA,Q,KASL,IAEKiF,I,SAAAA,K,UAAAA,E,gBAAAA,E,kBAAAA,E,gBAAAA,E,sBAAAA,E,sBAAAA,E,sBAAAA,E,sBAAAA,E,YAAAA,E,cAAAA,E,oBAAAA,E,oBAAAA,E,oBAAAA,E,gBAAAA,E,qBAAAA,Q,KAkBZ,I,MAAMC,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAExCC,IAAI,sBACZnF,GAAMoF,OAAS,CACZC,SAAU,CAAC,EAAG,EAAG,EAxBJ,SAwBc,EAAG,EAxBjB,SAwB2B,EAAG,EAxB9B,SAwBwC,EAAG,EAxB3C,SAwBqD,EAAG,EAAG,GACxEC,SAAU,CAACL,GAAMM,KAAMN,GAAMO,SAAUP,GAAMQ,MAAOR,GAAMS,KAC1DC,YAAa,CAACV,GAAMW,UAAWX,GAAMY,UAAWZ,GAAMa,UAAWb,GAAMc,UAAWd,GAAMe,UAJ/E,gBAMZhG,GAAMuF,KAAO,CACVF,SAAU,CA7BG,SA6BK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAClDtP,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAChDuP,SAAU,CAACL,GAAMgB,SAAUhB,GAAMG,OAAQH,GAAMS,KAC/CC,YAAa,CAACV,GAAMiB,QAASjB,GAAMQ,MAAOR,GAAMkB,OAAQlB,GAAMe,UAVrD,gBAYZhG,GAAMyF,MAAQ,CACXJ,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzCtP,OAAQ,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC9CqQ,MAAO,MACH5gB,OACAA,OACAA,EACAyf,GAAMe,YACNxgB,EACAyf,GAAMM,KACNN,GAAMS,SACNlgB,EACAyf,GAAMkB,OACNlB,GAAMiB,aACN1gB,KA1BK,gBA6BZwa,GAAMqG,OAAS,CACZC,QAASpB,GACTG,SAAUH,GAAclY,KAAI,SAACuZ,GAAD,OAAQA,EAAI,EAAJ,WAAYA,GAAM,MACtDH,MAAO,MACH5gB,OACAA,EACAyf,GAAMiB,aACN1gB,EACAyf,GAAMG,OACNH,GAAMe,YACNxgB,EACAyf,GAAMS,SACNlgB,EACAyf,GAAMkB,YACN3gB,KA3CK,gBA8CZwa,GAAMmG,OAAS,CACZd,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACnDe,MAAO,MACH5gB,OACAA,EACAyf,GAAMiB,QACNjB,GAAMM,KACNN,GAAMe,OACNf,GAAMG,OACNH,GAAMS,IACNT,GAAMiB,QACNjB,GAAMQ,MACNR,GAAMuB,SACNvB,GAAMe,UA3DD,ISpBXS,GAAmB,SAAC3U,GAAD,OAA0BlH,IAAWC,IANjD,aAM2DyC,KAAKC,UAAUuE,KACjF4U,GAAc,WAChB,IACI,IAAM5U,EAAUxE,KAAK4D,MAAMtG,IAAWM,IATjC,eAS8C,MACnD,GAAI/F,MAAMwhB,QAAQ7U,GAAU,OAAOA,EACrC,MAAOjF,GACL4Z,GAAiB,IAErB,MAAO,IAsBEG,IAAgB,sBACxB5G,GAAMoF,OAASpgB,EAAeA,EAAW,IAAI,GAAQ,CAAC,EAAG,EAAG,EAAG,KAAK,IAD5C,gBAExBgb,GAAMuF,KAAOvgB,EAAeA,EAAW,IAAI,GAAQ,CAAC,IAAI,IAFhC,gBAGxBgb,GAAMyF,MAAQzgB,EAAW,IAAI,IAHL,gBAIxBgb,GAAMqG,OAASrhB,EAAW,GAAI,IAJN,gBAKxBgb,GAAMmG,OAASnhB,EAAW,GAAI,IALN,qDAOpBgb,GAAMoF,OAAS,IAPK,gBAQpBpF,GAAMuF,KAAO,IARO,iCAUd,EAAC,IAVa,0BAWhB,IAXgB,wBAYlB,GAZkB,4BAad,MAbc,4BAcd,MAdc,wBAelB,IAfkB,wBAgBlB,GAhBkB,I,GAoBMnV,YAAuBwW,I,qBAAnDC,G,MAAkBC,G,MAEnB3H,GAA6B,SAACD,GAJlB,IAAC7V,EAKfyd,GAAOjc,IAAIqU,GALI7V,EAMLyd,GAAO5b,MANmBub,GAAiB,GAAD,mBAAKC,KAAc/G,OAAO,IAA1B,CAA8BtW,MAStFyd,GAAOjc,IA/CY6b,KAAc1U,OA+CZ,IAErB,I,GClEK+U,GDgFQC,GAAkB,CAC3B9b,IAAK4b,GAAO5b,IACZL,IAAKsU,GACL/M,QAAS,kBAAM+M,GAAKyH,KACpB3U,KAlBS,WACT,IAAMH,EAAU4U,KACZ5U,EAAQtL,OAAS,IACjBsL,EAAQE,MACRyU,GAAiB3U,GACjBgV,GAAOjc,IAAIiH,EAAQA,EAAQtL,OAAS,MAcxC6Y,MAVU,WACVoH,GAAiB,IACjBtH,GAAKyH,M,SE7EHK,GAAa,SAACC,GAChB,IAAMC,EAAaD,EAAKzM,WAAU,SAAC5C,GAAD,OAAQA,KAC1C,OAAOsP,GAAc,EAAIniB,EAAekiB,EAAMC,GAAY,GAAQD,GAMhEE,GAAc,SAAC7W,GAAD,2BAAsB8W,EAAtB,iCAAsBA,EAAtB,yBAAkDA,EAAKlQ,OAAM,SAAClS,GAAD,OAASsL,EAAQtL,OAgE5FqiB,GAAe,SAAC9R,EAAkDjF,EAAkB7K,GACtF,IAAM0gB,EAAQjB,GAAK3P,GAAO4Q,MAAM1gB,GAChC,OAAO0gB,EAAQ,CAACA,GAAS,IAGvBmB,GAAY,SACd/R,EACAjF,EACAsS,EACAnd,GAEA,OAAI8P,IAAUwK,GAAMoF,OAzEA,SAAC7U,EAAkBsS,GACvC,IAAM2E,EAAY,GA8BlB,OA5BK3E,EAAO4E,SAASxC,GAAMW,YAAcwB,GAAY7W,EAAS,EAAG,EAAG,IAChEiX,EAAU7a,KAAKsY,GAAMW,YAEpB/C,EAAO4E,SAASxC,GAAMY,YAAcuB,GAAY7W,EAAS,EAAG,EAAG,KAChEiX,EAAU7a,KAAKsY,GAAMY,YAEpBhD,EAAO4E,SAASxC,GAAMa,YAAcsB,GAAY7W,EAAS,EAAG,GAAI,KACjEiX,EAAU7a,KAAKsY,GAAMa,YAEpBjD,EAAO4E,SAASxC,GAAMc,YAAcqB,GAAY7W,EAAS,EAAG,GAAI,KACjEiX,EAAU7a,KAAKsY,GAAMc,YAEpBlD,EAAO4E,SAASxC,GAAMM,OAAS6B,GAAY7W,EAAS,EAAG,EAAG,IAC3DiX,EAAU7a,KAAKsY,GAAMM,OAEpB1C,EAAO4E,SAASxC,GAAMO,WAAa4B,GAAY7W,EAAS,EAAG,EAAG,IAC/DiX,EAAU7a,KAAKsY,GAAMO,WAEpB3C,EAAO4E,SAASxC,GAAMQ,QAAU2B,GAAY7W,EAAS,EAAG,GAAI,KAC7DiX,EAAU7a,KAAKsY,GAAMQ,QAEpB5C,EAAO4E,SAASxC,GAAMS,MAAQ0B,GAAY7W,EAAS,GAAI,GAAI,KAC5DiX,EAAU7a,KAAKsY,GAAMS,MAEpB7C,EAAO4E,SAASxC,GAAMe,SAAWoB,GAAY7W,EAAS,EAAG,EAAG,GAAI,KACjEiX,EAAU7a,KAAKsY,GAAMe,QAGlBwB,EA0C4BE,CAAgBnX,EAASsS,GACxDrN,IAAUwK,GAAMuF,KAxCF,SAAChV,EAAkBsS,GACrC,IAAM2E,EAAY,GAwBlB,OAtBK3E,EAAO4E,SAASxC,GAAMiB,UAAYkB,GAAY7W,EAAS,EAAG,IAC3DiX,EAAU7a,KAAKsY,GAAMiB,UAEpBrD,EAAO4E,SAASxC,GAAMQ,QAAU2B,GAAY7W,EAAS,EAAG,EAAG,IAC5DiX,EAAU7a,KAAKsY,GAAMQ,QAEpB5C,EAAO4E,SAASxC,GAAMkB,SAAWiB,GAAY7W,EAAS,EAAG,EAAG,KAC7DiX,EAAU7a,KAAKsY,GAAMkB,SAEpBtD,EAAO4E,SAASxC,GAAMe,SAAWoB,GAAY7W,EAAS,EAAG,EAAG,KAC7DiX,EAAU7a,KAAKsY,GAAMe,SAEpBnD,EAAO4E,SAASxC,GAAMgB,WAAamB,GAAY7W,EAAS,EAAG,EAAG,IAC/DiX,EAAU7a,KAAKsY,GAAMgB,WAEpBpD,EAAO4E,SAASxC,GAAMG,SAAWgC,GAAY7W,EAAS,EAAG,EAAG,EAAG,IAChEiX,EAAU7a,KAAKsY,GAAMG,SAEpBvC,EAAO4E,SAASxC,GAAMS,MAAQ0B,GAAY7W,EAAS,EAAG,EAAG,GAAI,KAC9DiX,EAAU7a,KAAKsY,GAAMS,KAGlB8B,EAe0BG,CAAcpX,EAASsS,GACpDrN,IAAUwK,GAAMyF,MAAc6B,GAAatH,GAAMyF,MAAOlV,EAAS7K,QAArE,GAKEkiB,GAAoB,SAACpS,EAAgD9P,EAAemZ,GAAhE,OACtBmI,GAAgBnc,KAAI,SAACxB,GAAW,IAAD,EACrBkH,EAAUvL,EAAeqE,EAAMmM,GAAQ9P,GAAO,GAC9Cmd,EAASrN,IAAUwK,GAAMyF,MAAQ,GAAKpc,EAAMwe,YAAYrS,GACxDgS,EAAYD,GAAU/R,EAAOjF,EAASsS,EAAQnd,GAEpD,OAAO,EAAP,kBACK8P,EAAQjF,GADb,4CAGWlH,EAAMwe,YAHjB,gBAISrS,EAJT,sBAIqBqN,GAJrB,YAIgC2E,OAJhC,6CAMgB3I,GAAQxV,EAAM+c,OAN9B,YAMyCoB,KANzC,2BAOe,CAAEhS,QAAO9P,UAPxB,MAWFoiB,GAAgB,SAACtS,GAAD,OAClBwR,GAAgB9b,MAAMsK,GAAOiF,WAAU,SAAC5C,GAAD,OAAaA,MAmBlDkQ,GAAe,SAACvS,EAAoC7P,EAAekZ,GACrE,IAAMnZ,EAAQoiB,GAActS,GACtBwS,EAASxS,IAAUwK,GAAMqG,OAASlB,GAAKnF,GAAMqG,QAAQC,QAAQ5gB,GAAS,EAC5EshB,GAAgBnc,KAAI,SAACxB,GAAW,IAAD,EACrBuS,EAAS5W,EAAeqE,EAAMmM,GAAQ9P,EAAOsiB,EAASriB,GAC5D,OAAO,EAAP,kBACK6P,EAAQoG,GADb,2BAEe,MAFf,6CAGgBiD,GAAQxV,EAAM+c,OAH9B,YAGyCkB,GAAa9R,EAAOoG,EAAO5O,IAAIiL,SAAUvS,MAHlF,2BAIe,CAAE8P,MAAOA,EAAO9P,UAJ/B,MA0BFuiB,GAAa,SAAC1X,GAAD,OAAqBA,EAAQqH,QAAO,SAACsQ,EAAaC,GAAd,OAA8BD,EAAMC,IAAK,IAkC1FC,GAAc,CAACnD,GAAMiB,QAASjB,GAAMe,OAAQf,GAAMiB,QAASjB,GAAMoD,UACjEC,GAAiB,SAACtE,GAAD,OAAoBoE,GAAYpE,GAAS,CAACoE,GAAYpE,IAAU,IAQ1EuE,GAAkB,CAC3BC,mBArMuB,kBAAMxB,GAAgBnc,KAAI,gBAAG4d,EAAH,EAAGA,UAAH,MAAoB,CAAEA,UAAWxB,GAAWwB,QAsM7FC,iBArMqB,kBAAM1B,GAAgBnc,KAAI,gBAAG8d,EAAH,EAAGA,QAAH,MAAkB,CAAEA,QAAS1B,GAAW0B,QAsMvFC,WAxFe,SAACpT,EAAoC9P,GACpD,IAPe,SAAC8P,EAAoC9P,GAArC,QACbshB,GAAgB9b,MAAMsK,GAAO9P,GAM3BmjB,CAAWrT,EAAO9P,GAAtB,CACA,GAAI8P,IAAUwK,GAAMqG,QAAU7Q,IAAUwK,GAAMmG,QAAU3Q,IAAUwK,GAAMyF,MAAO,CAC3E,IANa,SAACjQ,EAAkD9P,GAAnD,OACjBoiB,GAActS,KAAW9P,EAKhBojB,CAAatT,EAAO9P,GAAQ,OACjC,GAAI8P,IAAUwK,GAAMyF,MAAO,OAAOuB,GAAgBnc,IAAI,CAAEke,UAAWvT,IAEvE,OAAOoS,GAAkBpS,EAAO9P,KAmFhCsjB,YAhEgB,SAACrjB,GAAmB,IAC5BojB,EAAc/B,GAAgB9b,MAA9B6d,UACJA,GACAhB,GAAagB,EAAWpjB,IA8D5BsjB,eAjFmB,kBAAMjC,GAAgBnc,IAAI,CAAEke,UAAW,QAkF1DhT,OA/CW,SAAC1M,GACZ,IAbmBwZ,EAOFtS,EAMX2Y,IAbarG,EAaWxZ,EAAMwe,YAAY7H,GAAMoF,SAZzBqC,SAASxC,GAAMW,WAAa,GAAK,IACxC/C,EAAO4E,SAASxC,GAAMY,WAAa,GAAK,IACxChD,EAAO4E,SAASxC,GAAMa,WAAa,GAAK,IACxCjD,EAAO4E,SAASxC,GAAMc,WAAa,GAAK,GAUxDoD,GAPW5Y,EAOWlH,EAAM2W,GAAMuF,MAPFJ,GAAKnF,GAAMuF,MAAMxP,OAAOxF,EAAQjL,OAAO2S,SAASzR,OAAS,IAQzF4iB,EAPW,SAAC7Y,GAAD,OACjB4U,GAAKnF,GAAMyF,OAAO1P,OAAOxF,EAAQjL,OAAO2S,SAASzR,OAAS,GAM1C6iB,CAAahgB,EAAM2W,GAAMyF,SAAW,EAC9C6D,EAAUrB,GAAW5e,EAAM2W,GAAMqG,SACjCkD,EAAUtB,GAAW5e,EAAM2W,GAAMmG,SAEvC,OAAO+C,EAAUC,EAAUC,EAAUE,EAAUC,EAD7BvjB,KAAKwjB,IAAIN,EAASC,EAASC,EAASE,EAASC,GAAWlgB,EAAMogB,OA0ChFC,SAxBa,WAAO,IACZtD,EAAUY,GAAgB9b,MAA1Bkb,MACR,GAAIA,EAAO,CAAC,IAAD,eACkBA,IAjBf,SAACA,EAAcvH,GACzBuH,IAAUnB,GAAMQ,MAAOmC,GAAkB5H,GAAMyF,MAAOqC,GAAc9H,GAAMyF,OAAQ5G,GAC7EuH,IAAUnB,GAAMO,SAAUuC,GAAa/H,GAAMqG,OAAQ,EAAGxH,GACxDuH,IAAUnB,GAAMgB,SAAU8B,GAAa/H,GAAMqG,OAAQ,EAAGxH,GACxDuH,IAAUnB,GAAMuB,SAAUuB,GAAa/H,GAAMqG,OAAQ,EAAGxH,GACxDuH,IAAUnB,GAAMkB,OAAQ4B,GAAa/H,GAAMmG,OAAQ,EAAGtH,GACtDuH,IAAUnB,GAAMS,IAAKsB,GAAgBnc,KAAI,kBAAgB,CAAE4e,MAAlB,EAAGA,MAA8B,EAAGrD,MAAOvH,MACpFuH,IAAUnB,GAAMe,OACrBgB,GAAgBnc,KAAI,gBAAG8d,EAAH,EAAGA,QAAH,MAAkB,CAAEA,QAAQ,GAAD,mBAAMA,GAAN,EAAe,IAAQvC,MAAOvH,MACxEuH,IAAUnB,GAAMiB,QACrBc,GAAgBnc,KAAI,gBAAG4d,EAAH,EAAGA,UAAH,MAAoB,CAAEA,UAAU,GAAD,mBAAMA,GAAN,EAAiB,IAAQrC,MAAOvH,MAClFmI,GAAgBnc,IAAI,CAAEub,MAAOvH,IAO9B8K,CAFO,mBAuBXC,UAdc,kBACd5C,GAAgBnc,KAAI,gBAAGmZ,EAAH,EAAGA,MAAH,MAAgB,CAChCA,MAAOA,EAAQ,EACfoC,MAAOkC,GAAetE,SClMxB6F,GAAgD,SAAC,GAAD,IAAG/d,EAAH,EAAGA,SAAUyE,EAAb,EAAaA,QAAS9C,EAAtB,EAAsBA,QAAtB,OAClD,yBAAK1G,UAAU,kBACX,yBAAKA,UAAU,aAAa+E,GAC3ByE,EAAQvD,KAAI,SAAC8c,EAAGne,GAAJ,OACT,yBAAKA,IAAKA,EAAK5E,UAAU,YAAY0G,QAASA,GAC1C,yBAAK1G,UAAW/B,EAAgB,MAAO8kB,GAAK,mBAM/CC,GAAoC,WAAO,IAC5CtB,EAAc5B,IAAiB,kBAAoB,CAAE4B,UAAtB,EAAGA,cAAlCA,UAER,OACI,kBAAC,GAAD,CAAgBlY,QAASkY,EAAWhb,QAAS8a,GAAgBC,oBACzD,kBAACrhB,EAAKc,SAAN,QAKC+hB,GAAkC,WAAO,IAC1CrB,EAAY9B,IAAiB,kBAAkB,CAAE8B,QAApB,EAAGA,YAAhCA,QAER,OACI,kBAAC,GAAD,CAAgBpY,QAASoY,EAASlb,QAAS8a,GAAgBG,kBACvD,yBAAK3hB,UAAU,WAAf,QC7BCkjB,GAA0B,WAAO,IAClCjG,EAAU6C,IAAiB,kBAAgB,CAAE7C,MAAlB,EAAGA,UAA9BA,MACR,OACI,yBAAKjd,UAAU,kBACX,0BAAMA,UAAU,SACXwH,YAAG,YACHyV,GAEL,4BAAQvW,QAAS8a,GAAgBqB,WAAYrb,YAAG,cCN/C2b,GAA4D,SAAC,GAAsB,IAApBvkB,EAAmB,EAAnBA,MAAO6P,EAAY,EAAZA,MACzE/H,EAAUrD,uBAAY,kBAAMme,GAAgBS,YAAYrjB,KAAQ,CAACA,IACvE,OACI,yBAAKoB,UAAU,QAAQ6T,MAAO,CAAEtL,gBAAiBkG,GAAS/H,QAASA,GAC9D9H,IAOAwkB,GAAgD,SAAC,GAAe,IAAb3U,EAAY,EAAZA,MACpD4U,EAAYvD,IAAiB,SAACxd,GAClC,IAAMghB,EAAa7U,IAAUwK,GAAMmG,OAAS9c,EAAM2W,GAAMmG,QAAQ1L,WAAU,SAAC5C,GAAD,OAAQA,KAAK,GAAK,EAC5F,MAAO,CAAEuS,QAASC,GAAc,EAAIhhB,EAAM2W,GAAMmG,QAAQkE,GAAc,MAFlED,QAKR,OACI,yBAAKrjB,UAAU,mBACX,yBAAKA,UAAU,yBACV,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG4Y,MAAkB,IAAZyK,EAAgB,EAAIA,GAASpd,KAAI,SAAC6K,GAAD,OACvD,kBAAC,GAAD,CAAsBlM,IAAKkM,EAAGrC,MAAOA,EAAO7P,MAAOkS,QAG3D,yBAAK9Q,UAAU,0BAA0B0G,QAAS8a,GAAgBU,mBCzBjE/C,GAAU,kBAAC/e,EAAKc,SAAN,MAEjBqiB,IAA6E,sBAC9ErF,GAAMS,IAAM,CAAEzb,QALA,eAKcuL,MAAOwK,GAAMuK,QADqC,gBAE9EtF,GAAMe,OAAS,CAAE/b,QALA,KAKiBuL,MAAOwK,GAAMuK,QAF+B,gBAG9EtF,GAAMiB,QAAU,CAAEjc,QAASic,GAAS1Q,MAAOwK,GAAMuK,QAH6B,gBAI9EtF,GAAMG,OAAS,CAAEnb,QfHD,SeGiBuL,MAAOwK,GAAMoF,SAJgC,gBAK9EH,GAAMW,UAAY,CAAE3b,QAAS,GAAIuL,MAAOwK,GAAMoF,SALgC,gBAM9EH,GAAMY,UAAY,CAAE5b,QAAS,GAAIuL,MAAOwK,GAAMoF,SANgC,gBAO9EH,GAAMa,UAAY,CAAE7b,QAAS,GAAIuL,MAAOwK,GAAMoF,SAPgC,gBAQ9EH,GAAMc,UAAY,CAAE9b,QAAS,GAAIuL,MAAOwK,GAAMoF,SARgC,gBAS9EH,GAAMM,KAAO,CAAEtb,QfRC,SeQeuL,MAAOwK,GAAMuF,OATkC,gBAU9EN,GAAMQ,MAAQ,CAAExb,QfTA,SeSgBuL,MAAOwK,GAAMyF,QAViC,gBAW9ER,GAAMO,SAAW,CAAEvb,QAAS,EAAGuL,MAAOwK,GAAMqG,SAXkC,gBAY9EpB,GAAMgB,SAAW,CAAEhc,QAAS,EAAGuL,MAAOwK,GAAMqG,SAZkC,gBAa9EpB,GAAMuB,SAAW,CAAEvc,QAAS,EAAGuL,MAAOwK,GAAMqG,SAbkC,gBAc9EpB,GAAMkB,OAAS,CAAElc,QAAS,EAAGuL,MAAOwK,GAAMmG,SAdoC,gBAe9ElB,GAAMoD,SAAW,CAAEpe,QAASugB,WAAchV,MAAOwK,GAAMuK,QAfuB,IAoBtEE,GAA8B,SAAC,GAAD,IAAGrE,EAAH,EAAGA,MAAH,OACvC,yBAAKrf,UAAU,YAAY6T,MAAO,CAAEtL,gBAAiBgb,GAAkBlE,GAAO5Q,QAC1E,yBAAKzO,UAAU,WAAWujB,GAAkBlE,GAAOnc,WCjB9CsL,GAAM,SAAC,GAAmD,IAAjDtL,EAAgD,EAAhDA,QAASuL,EAAuC,EAAvCA,MAAOkV,EAAgC,EAAhCA,SAAUhlB,EAAsB,EAAtBA,MAAsB,EACvBmhB,IAAiB,SAACxd,GACzD,IAAMshB,EATO,SAACA,EAA6BnV,EAAc9P,GAC7D,QAAKilB,IACOA,EAAUnV,QAAUA,GAASmV,EAAUjlB,QAAUA,GAOvCklB,CAAavhB,EAAMshB,UAAWnV,EAAO9P,GACvD,OAAQ8P,GACJ,KAAKwK,GAAMqG,OACX,KAAKrG,GAAMmG,OACP,MAAO,CAAE5V,SAAS,EAAOsa,WAAYxhB,EAAMmM,GAAO9P,GAAQilB,aAC9D,QACI,MAAO,CAAEpa,QAASlH,EAAMmM,GAAO9P,GAAQilB,iBAP3Cpa,EAD0D,EAC1DA,QAASsa,EADiD,EACjDA,WAAYF,EADqC,EACrCA,UAWvBld,EAAUrD,uBAAY,WACxBme,GAAgBK,WAAWpT,EAAO9P,KACnC,CAAC8P,EAAO9P,IAEX,OACI,yBACI+H,QAASA,EACT1G,UAAW/B,EAAgB,MAAOuL,GAAW,UAAWoa,GAAa,aACrE/P,MAAO,CAAEpF,QAAOI,YAAaJ,IAC5BkV,EACG,yBAAK3jB,UAAU,WAAf,SAEKkD,GAEL4gB,EACA,yBAAK9jB,UAAU,UAAU8jB,GAEzB,yBAAK9jB,UAAU,WAAWkD,KC3B7B6gB,GAAgC,SAAC,GAAD,IAAGtV,EAAH,EAAGA,MAAO6P,EAAV,EAAUA,SAAUte,EAApB,EAAoBA,UAAW2jB,EAA/B,EAA+BA,SAAUK,EAAzC,EAAyCA,UAAzC,IAAoDhV,cAApD,MAA6D,GAA7D,SACzC,yBAAKhP,UAAW/B,EAAgB,WAAY+B,GAAY6T,MAAO,CAAEhF,YAAaJ,IACzE6P,EAASrY,KAAI,SAAC/C,EAASvE,GACpB,IAAMslB,EAAQjV,EAAOrQ,GACf0gB,EAAQ2E,EAAUrlB,GACxB,OACI,yBAAKiG,IAAKjG,EAAOqB,UAAU,aACvB,kBAAC,GAAD,CAAKkD,QAASA,EAASuL,MAAOA,EAAOkV,SAAUA,EAAUhlB,MAAOA,IAC/DslB,GACG,yBAAKjkB,UAAU,SAAS6T,MAAO,CAAEtL,gBAAiBkG,IAC7CwV,GAGR5E,GAAS,kBAAC,GAAD,CAAOA,MAAOA,UCdtC6E,GAASjmB,EAAW,GAEbkmB,GAAU,SAAC,GAAD,IAAG1V,EAAH,EAAGA,MAAO6P,EAAV,EAAUA,SAAU8F,EAApB,EAAoBA,aAAcC,EAAlC,EAAkCA,gBAAlC,OACnB,yBAAKrkB,UAAU,kBACX,yBAAKA,UAAU,WAAW6T,MAAO,CAAEhF,YAAaJ,EAAOA,UAClDxQ,EAAWqgB,EAAS7e,OAAS,GAAGwG,KAAI,SAACgI,EAAGzF,GAAJ,OACjC,kBAAC,WAAD,CAAU5D,IAAK4D,GACV8V,EAAS1F,MAAY,EAANpQ,EAAe,EAANA,EAAU,GAAGvC,KAAI,SAAC/C,EAAS0B,GAAV,OACtC,yBAAK5E,UAAU,YAAY4E,IAAKA,GAC5B,kBAAC,GAAD,CAAKA,IAAKA,EAAK1B,QAASA,EAASuL,MAAOA,EAAO9P,MAAO,EAAI6J,EAAM5D,QAGxE,yBAAK5E,UAAU,wBACX,kBAACI,EAAKE,WAAN,OAEJ,yBAAKN,UAAU,aACX,kBAAC,GAAD,CAAOqf,MAAO+E,EAAa5b,UAItC0b,GAAOje,KAAI,SAACgI,EAAGzO,GAAJ,OACR,yBAAKQ,UAAU,uBAAuB4E,IAAKpF,GACtCA,EAAI6kB,EAAgB5kB,OACX,IAAND,EACI,kBAACY,EAAKE,WAAN,CAAiBN,UAAU,cAE3B,kBAACI,EAAKG,UAAN,MAEJ,SAIX8jB,EAAgBpe,KAAI,SAACoZ,EAAO7f,GAAR,OACjB,kBAAC,WAAD,CAAUoF,IAAKpF,GACJ,IAANA,GAAW,yBAAKQ,UAAU,cAC3B,yBAAKA,UAAU,aACX,kBAAC,GAAD,CAAOqf,MAAOA,YC7CzBvB,GAAmB,kBAC5B,6BACI,4BAAQpX,QAASuZ,GAAgB/U,KAAMlL,UAAU,QAC7C,kBAACI,EAAKW,KAAN,OAEJ,4BAAQ2F,QAASuZ,GAAgB5U,QAASrL,UAAU,WAC/CwH,YAAG,kBCNH+T,GAAmB,WAAO,IAC3BvM,EAAW8Q,IAAiB,SAACxd,GAAD,MAAY,CAAE0M,OAAQwS,GAAgBxS,OAAO1M,OAAzE0M,OAER,OACI,yBAAKhP,UAAU,gBACVwH,YAAG,aACHwH,ICJAsV,GAAgD,SAAC,GAAD,IAAGxI,EAAH,EAAGA,OAAH,OACzDA,EAAOrc,OACH,yBAAKO,UAAU,eAAe0G,QAAS8a,GAAgBmB,UACnD,yBAAK3iB,UAAU,yBACf,yBAAKA,UAAU,sBACV8b,EAAO7V,KAAI,SAACoZ,EAAc1gB,GAAf,OACR,kBAAC,GAAD,CAAO0gB,MAAOA,EAAOza,IAAKjG,SAItC,MCLK4lB,GAA4B,WAAO,IAAD,EACdzE,IAAiB,kBAA2B,CAAEkC,UAA7B,EAAGA,UAAqC3C,MAAxC,EAAcA,UAApD2C,EADmC,EACnCA,UAAW3C,EADwB,EACxBA,MACnB,OACI,yBAAKrf,UAAU,qBACX,kBAAC,GAAD,MACA,yBAAKA,UAAU,eACX,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CACIyO,MAAOwK,GAAMoF,OACbC,SAAUF,GAAKnF,GAAMoF,QAAQC,SAC7B8F,aAAchG,GAAKnF,GAAMoF,QAAQE,SACjC8F,gBAAiBjG,GAAKnF,GAAMoF,QAAQO,cAExC,kBAAC,GAAD,CACInQ,MAAOwK,GAAMuF,KACbF,SAAUF,GAAKnF,GAAMuF,MAAMF,SAC3B8F,aAAchG,GAAKnF,GAAMuF,MAAMD,SAC/B8F,gBAAiBjG,GAAKnF,GAAMuF,MAAMI,cAEtC,kBAAC,GAAD,CACInQ,MAAOwK,GAAMyF,MACbJ,SAAUF,GAAKnF,GAAMyF,OAAOJ,SAC5BqF,UAAQ,EACRK,UAAW5F,GAAKnF,GAAMyF,OAAOW,MAC7BrQ,OAAQoP,GAAKnF,GAAMyF,OAAO1P,SAE9B,kBAAC,GAAD,CACIP,MAAOwK,GAAMqG,OACbhB,SAAUF,GAAKnF,GAAMqG,QAAQhB,SAC7B0F,UAAW5F,GAAKnF,GAAMqG,QAAQD,QAElC,kBAAC,GAAD,CACI5Q,MAAOwK,GAAMmG,OACbd,SAAUF,GAAKnF,GAAMmG,QAAQd,SAC7Bte,UAAU,UACVgkB,UAAW5F,GAAKnF,GAAMmG,QAAQC,QAElC,kBAAC,GAAD,MACC2C,GAAa,kBAAC,GAAD,CAAgBvT,MAAOuT,IACpC3C,GAAS,kBAAC,GAAD,CAAgBvD,OAAQuD,OChDrCmF,GAAuB,kBAChC,kBAAC,GAAD,CAAe3O,IAAKoK,GAAgB3H,OAChC,kBAAC,GAAD,QCCFmM,GAAyB,CAAC,GAAI,GAAI,GAAI,IAItCC,GAAsC,CACxCC,QAAS,CAAEC,OAAQ,EAAGC,KAAM,GAC5BC,GAAI,CAAEC,UAAWN,GAAaxH,MAAO,GACrC+H,MAAO,CAAED,UAAWN,GAAaxH,MAAO,I,GAkBZ5T,YAbjB,WACX,IACI,IAAM4b,EAAMphB,IAAWM,IAJlB,YAKL,GAAI8gB,EACA,OAAO1e,KAAK4D,MAAM8a,GAExB,MAAOnf,IAGT,OAAO4e,GAIgDQ,I,qBAApDC,G,MAAgBC,G,MAGjBthB,GAA2B,SAACqU,GALjB,IAAC7V,EAMd8iB,GAAMthB,IAAIqU,GANI7V,EAOL8iB,GAAMjhB,MAPwBN,IAAWC,IAbzC,WAamDyC,KAAKC,UAAUlE,KAYlE+iB,GAAgB,CAAEvhB,OAAKwU,MAFtB,kBAAMxU,GAAI4gB,MCjClBY,GAAmB,CAAEC,MAAO,GAAIC,OAAQ,GAAIC,MAAO,IACnDC,GAAuB,CAAE7Q,OAAQyQ,GAAkB5L,OAAQ,I,GACxCJ,KAAMC,OAAkB+L,IAAzC9L,G,GAAAA,KAAMC,G,GAAAA,OACRkM,GAAoB,SAAC7U,GACvB,IAAKA,IAAMA,EAAEqG,OAAQ,MAAO,CAAEyC,GAAI,8BAClC,IACIgM,KAAK9U,GACP,MAAOhL,GACL,MAAO,CAAE8T,GAAI,+BAGfiM,GAAqB,CACvBN,MAAO,CAAEhR,SAAUoR,IACnBH,OAAQ,CAAEjR,SAAUoR,IACpBF,MAAO,CAAElR,SAAUoR,KAKVG,GAAwD,SAAC,GAAwB,IAAtB9L,EAAqB,EAArBA,SAAU+L,EAAW,EAAXA,KAAW,EAC/C9iB,mBAA8ByiB,IADiB,mBAClFM,EADkF,KACnEC,EADmE,KAEzF,OACI,yBAAKjmB,UAAU,wBACV+lB,GACG,yBAAK/lB,UAAU,QACX,8BAAO+lB,EAAKvnB,KAAK,OAGzB,kBAAC,GAAD,CAAM+V,SAAU0R,EAAkBnM,KAAMkM,EAAehM,SAAUA,EAAUL,WAAYkM,IACnF,kBAAC,GAAD,CAAWhO,MAAO4B,GAAO8L,QACzB,kBAAC,GAAD,CAAW1N,MAAO4B,GAAO+L,SACzB,kBAAC,GAAD,CAAW3N,MAAO4B,GAAOgM,QACzB,4BAAQ3P,KAAK,SAASpB,SAAU4E,KAAM4M,UAAUF,IAC5C,kBAAC5lB,EAAKS,KAAN,MACA,yBAAKb,UAAU,eAAewH,YAAG,4BCjCxC2e,GAAqB,YAAsF,IAApEvnB,EAAmE,EAAnEA,MAAOmG,EAA4D,EAA5DA,SAAUwP,EAAkD,EAAlDA,SAAUvO,EAAwC,EAAxCA,MACrEU,EAAUrD,uBAAY,WACxBkR,EAAS3V,GACToH,MACD,CAACuO,EAAUvO,EAAOpH,IACrB,OACI,yBAAKoB,UAAU,QAAQ0G,QAASA,GAC3B3B,IAYAqhB,GAAgB,YAA4E,IAA1DrhB,EAAyD,EAAzDA,SAAU0P,EAA+C,EAA/CA,QAASF,EAAsC,EAAtCA,SAAsC,EAC1EtR,oBAAkB,GADwD,mBAC7FojB,EAD6F,KACrFxa,EADqF,KAG9F7F,EAAQ3C,uBAAY,kBAAMwI,GAAQ,KAAQ,IAC1CtK,EAAO8B,uBAAY,kBAAMwI,GAAQ,KAAO,IAE9C,OACI,oCACI,0BAAMnF,QAASnF,GAAOwD,GACrBshB,GACG,yBAAKrmB,UAAU,kBACX,yBAAKA,UAAU,wBACVyU,EAAQxO,KAAI,WAAkBtH,GAAlB,IAAGC,EAAH,EAAGA,MAAO0nB,EAAV,EAAUA,KAAV,OACT,kBAAC,GAAD,CAAoB1hB,IAAKjG,EAAOqH,MAAOA,EAAOuO,SAAUA,EAAU3V,MAAOA,GACpE0nB,OAIb,yBAAKtmB,UAAU,uBAAuB0G,QAASV,OCtC7DugB,GAAiD,CACnD,CAAE3nB,MAAO,EAAgB0nB,KAAM,GAC/B,CAAE1nB,MAAO,EAAgB0nB,KAAM,GAC/B,CAAE1nB,MAAO,EAAgB0nB,KAAM,GAC/B,CAAE1nB,MAAO,EAAgB0nB,KAAM,IAYtBE,GAAsC,SAAC,GAA6B,IAA3BxM,EAA0B,EAA1BA,SAAUyM,EAAgB,EAAhBA,UAAgB,EAClDxjB,qBADkD,mBACrEsiB,EADqE,KAC9DmB,EAD8D,OAEhDzjB,qBAFgD,mBAErEuiB,EAFqE,KAE7DmB,EAF6D,OAGlD1jB,qBAHkD,mBAGrEwiB,EAHqE,KAG9DmB,EAH8D,KAItEC,EATgB,SAACtB,EAAmBC,EAAoBC,GAC9D,IAAMqB,EALa,SAACvB,EAAmBC,EAAoBC,GAC3D,OAAIF,GAASA,IAAUC,EAAeD,GAClCE,GAAUA,IAAUD,GAAUC,IAAUF,OAA5C,EAA2DE,EAGzCsB,CAAexB,EAAOC,EAAQC,GAChD,OAAOqB,EAAY,CAACA,IAAcvB,EAAOuB,IAActB,EAAQsB,IAAcrB,GAAS,EAAC,GAAO,GAAO,GAOlFuB,CAAkBzB,EAAOC,EAAQC,GAE9CwB,EAAaC,mBACf,oBAAS3B,GAASC,GAAUC,GAASF,IAAUC,GAAUD,IAAUE,GAASD,IAAWC,KACvF,CAACF,EAAOC,EAAQC,IAGd0B,EAAc9jB,uBAAY,WAC5B2W,EAAS,CAACuL,EAAQC,EAASC,MAC5B,CAACzL,EAAUuL,EAAOC,EAAQC,IAE7B,OACI,yBAAKzlB,UAAU,YACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,aAAaymB,EAAUlB,OACtC,kBAAC,GAAD,CAAe9Q,QAAS8R,GAAchS,SAAUmS,GAC5C,0BAAM1mB,UAAW/B,EAAgB,aAAc4oB,EAAW,IAAM,YAAhE,OAA6EtB,QAA7E,IAA6EA,IAAS,OAG9F,yBAAKvlB,UAAU,SACX,yBAAKA,UAAU,aAAaymB,EAAUjB,QACtC,kBAAC,GAAD,CAAe/Q,QAAS8R,GAAchS,SAAUoS,GAC5C,0BAAM3mB,UAAW/B,EAAgB,aAAc4oB,EAAW,IAAM,YAAhE,OAA6ErB,QAA7E,IAA6EA,IAAU,OAG/F,yBAAKxlB,UAAU,SACX,yBAAKA,UAAU,aAAaymB,EAAUhB,OACtC,kBAAC,GAAD,CAAehR,QAAS8R,GAAchS,SAAUqS,GAC5C,0BAAM5mB,UAAW/B,EAAgB,aAAc4oB,EAAW,IAAM,YAAhE,OAA6EpB,QAA7E,IAA6EA,IAAS,OAG7FwB,GACG,4BAAQvgB,QAASygB,EAAarR,KAAK,UAC/B,kBAAC1V,EAAKQ,IAAN,MACA,yBAAKZ,UAAU,eAAewH,YAAG,2BCxDxC4f,GAA0C,SAAC,GAAkC,IAAhCX,EAA+B,EAA/BA,UAAWV,EAAoB,EAApBA,KAAMsB,EAAc,EAAdA,QACjEC,EAAiBD,EAAQ,KAAOtB,EAAK,GACrCwB,EAAkBF,EAAQ,KAAOtB,EAAK,GACtCyB,EAAiBH,EAAQ,KAAOtB,EAAK,GAE3C,OACI,yBAAK/lB,UAAU,WACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,aAAaymB,EAAUlB,OACtC,0BAAMvlB,UAAW/B,EAAgB,aAAcqpB,EAAiB,UAAY,UACvED,EAAQ,IAEZC,GAAkB,0BAAMtnB,UAAU,YAAY+lB,EAAK,KAExD,yBAAK/lB,UAAU,SACX,yBAAKA,UAAU,aAAaymB,EAAUjB,QACtC,0BAAMxlB,UAAW/B,EAAgB,aAAcspB,EAAkB,UAAY,UACxEF,EAAQ,IAEZE,GAAmB,0BAAMvnB,UAAU,YAAY+lB,EAAK,KAEzD,yBAAK/lB,UAAU,SACX,yBAAKA,UAAU,aAAaymB,EAAUhB,OACtC,0BAAMzlB,UAAW/B,EAAgB,aAAcupB,EAAiB,UAAY,UACvEH,EAAQ,IAEZG,GAAkB,0BAAMxnB,UAAU,YAAY+lB,EAAK,OC3BvD0B,GAA8C,SAAC,GAAmB,IAAjB1C,EAAgB,EAAhBA,UACpD2C,EAAOR,mBAAQ,WAGjB,IAFA,IAAM5hB,EAAS,GACTuY,EAAMkH,EAAUlU,QAAO,SAACuQ,EAAKD,GAAN,OAAcliB,KAAK4e,IAAIuD,EAAKD,EAAI1hB,UAAS,GAF/C,WAGdD,GACL8F,EAAOM,KACH,wBAAIhB,IAAKpF,GACJulB,EAAU9e,KAAI,SAAC0hB,EAAGC,GAAJ,OACX,wBAAIhjB,IAAKgjB,GAAMD,EAAEnoB,UAJxBA,EAAI,EAAGA,EAAIqe,EAAKre,IAAM,EAAtBA,GAST,OAAO8F,IACR,CAACyf,IAEJ,OACI,yBAAK/kB,UAAU,aACX,+BACI,+BACI,4BACI,iCACA,iCACA,iCACA,mCAGR,+BAAQ0nB,M,oBCzBXG,GAAqB,CAC9BC,MAAO,CAAEC,KAAM,OAAQC,MAJP,SAKhBpf,MAAO,CAAEmf,KAAM,OAAQC,MALP,UAYPhnB,GAAgC,SAAC,GAAuB,IAArBinB,EAAoB,EAApBA,KAAMxT,EAAc,EAAdA,QAAc,EACtCxR,qBADsC,mBACzDR,EADyD,KAClDylB,EADkD,KAE1DC,EAASpc,iBAAiC,MAQhD,OANAtI,qBAAU,WACN2kB,KAAOC,SAASF,EAAOnc,QAASic,EAAMxT,GAAS,SAAChS,GACxCA,GAAOylB,EAASzlB,QAEzB,CAACwlB,EAAMxT,IAENhS,EAAc,6EAEX,4BAAQkV,IAAKwQ,K,SClBXG,GAA8C,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aAAmB,EACtCvlB,oBAAS,GAD6B,mBAC/EwlB,EAD+E,KAC7DC,EAD6D,OAE5DzlB,qBAF4D,mBAE/ER,EAF+E,KAExEylB,EAFwE,OAG1DjlB,qBAH0D,mBAG/E0lB,EAH+E,KAGvEC,EAHuE,KAIhFC,EAAY9c,mBAClB8c,EAAU7c,QAAU2c,EALkE,MAM5DzB,mBACtB,iBAAO,CACHnnB,MAAOpC,OAAOmrB,WACdnc,OAAQhP,OAAOorB,eAEnB,IALIhpB,EAN8E,EAM9EA,MAAO4M,EANuE,EAMvEA,OAOTwb,EAASpc,iBAAiC,MAC1Cid,EAAQjd,iBAAgC,MACxCkd,EAAYld,kBAAO,GACnBmd,EAAand,kBAAO,eAEpBod,EAAc9lB,uBAAY,WAC5BwlB,EAAU7c,QAASod,YAAY7pB,SAAQ,SAAC8pB,GAAD,OAAWR,EAAU7c,QAASsd,YAAYD,MACjFL,EAAMhd,QAASud,UAAY,KAC3BP,EAAMhd,QAAS1E,IAAM,KACtB,IAEH7D,qBAAU,WA5BV5F,UAAU2rB,aAAaC,aAAa,CAAEC,OAAO,EAAOV,MAAO,CAAEW,WAAY,iBA8BhE7nB,KAAK8mB,GACLrmB,OAAM,SAACuD,GACW,oBAAXA,EAAE6O,KAGF+T,GAAoB,GAGpBR,EAASpiB,QAGtB,CAACqjB,IAEJ1lB,qBAAU,WACF+kB,IACAQ,EAAMhd,QAAS4d,QACfT,OAEL,CAACX,EAAcW,IAElB,IAAMU,EAAgBxmB,uBAAY,WAC9B1F,OAAOmsB,sBAAsBZ,EAAWld,WACzC,IAEHvI,qBAAU,WACN,IAAMsmB,EAAYf,EAAMhd,QACpB2c,IAAWM,EAAUjd,UACrBid,EAAUjd,SAAU,EAChB,cAAe+d,EACfA,EAAUR,UAAYZ,EAGtBoB,EAAWziB,IAAM3J,OAAOqsB,IAAIC,gBAAgBtB,GAIhDoB,EAAUG,aAAa,WAAY,IACnCH,EAAUG,aAAa,QAAS,IAChCH,EAAUG,aAAa,cAAe,IACtCL,OAEL,CAACA,EAAelB,IAEnB,IAAMwB,EAAqB9mB,uBACvB,SAACZ,EAAY6C,GACT,GAAI7C,GAAS+lB,EAAc,OAAOqB,IAClC,IAAK,IAAD,EAC4BtjB,KAAK4D,MAAMigB,KAAK9kB,EAAOA,SAA3CygB,EADR,EACQA,KAAMU,EADd,EACcA,UAEVV,EAAK3V,OAAM,SAACgJ,GAAD,MAAyB,kBAANA,MACH,kBAApBqN,EAAUlB,OACW,kBAArBkB,EAAUjB,QACU,kBAApBiB,EAAUhB,OAEjB8C,EAAQ,CAAExC,OAAMU,cAEtB,MAAO3gB,IAMT+jB,MAEJ,CAACtB,EAASsB,EAAerB,IAe7B,OAZAU,EAAWld,QAAU3I,uBAAY,WAC7B,IAAMgnB,EAAUlC,EAAOnc,SAAWmc,EAAOnc,QAAQse,WAAW,MAE5D,GAAID,EAAS,CACT,IAAME,EAAK,IAAIvpB,KACdqpB,EAAgBG,UAAUxB,EAAMhd,QAAS,EAAG,EAAGjM,EAAO4M,EAAQ,EAAG,EAAG5M,EAAO4M,GAC5E,IAAM8d,EAAYJ,EAAQK,aAAa,EAAG,EAAG3qB,EAAO4M,GACpD4d,EAAGI,SAAWR,EACdI,EAAGK,OAAOH,MAEf,CAACN,EAAoBxd,EAAQ5M,IAE5B0oB,EAAyB,oCAAGjhB,YAAG,6BAC/B/E,EAAc,6EAGd,yBAAKzC,UAAU,WACV2oB,GACG,6BACI,2BAAOhR,IAAKqR,IACZ,4BAAQjpB,MAAOA,EAAO4M,OAAQA,EAAQgL,IAAKwQ,OCnHzD0C,GAAqB,CAAE5C,KAAM,KAAM6C,UAAU,EAAOC,gBAAgB,G,GAEjC1hB,YAAyBwhB,I,qBAA3DG,G,MAAeC,G,MAETC,GAAqB,WAAO,IAAD,EACCD,GAAgB9mB,MAA7C4mB,EAD4B,EAC5BA,eAAgBD,EADY,EACZA,SACpBC,IACKD,GACLG,GAAgBnnB,IAAI,CAAEinB,gBAAgB,IAMtChoB,YAAW,kBAAMkoB,GAAgBnnB,IAAI+mB,MAAqB,MAE1DI,GAAgBnnB,IAAI+mB,MAMtBM,GAAe,SAAC,GAA+D,IAA7DpF,EAA4D,EAA5DA,KAAMU,EAAsD,EAAtDA,UAC1ByE,KACA7F,GAAcvhB,KAAI,gBAAGkhB,EAAH,EAAGA,MAAH,MAAgB,CAAEA,MAAM,eAAMA,EAAP,CAAce,OAAMU,YAAWxJ,MAAO+H,EAAM/H,MAAQ,SAGpFmO,GAA0B,WAAO,IAAD,EACEJ,IAAc,SAAC1oB,GAAD,OAAWA,KAA5D2lB,EADiC,EACjCA,KAAM6C,EAD2B,EAC3BA,SAAUC,EADiB,EACjBA,eAClBhrB,EAAQd,KAAKwjB,IAAI9kB,OAAOmrB,WAAYnrB,OAAOorB,aAEjD,OAAOd,EACH,yBAAKjoB,UAAU,WACX,kBAAC,GAAD,CAAQioB,KAAMA,EAAMxT,QAAS,CAAEhG,MAAOoZ,GAAmBjf,MAAO7I,WAChE,4BAAQ2G,QAASwkB,IACb,kBAAC9qB,EAAKgB,MAAN,QAGR0pB,EACA,yBAAK9qB,UAAU,cAAc6T,MAAOkX,EAAiB,CAAEM,QAAS,aAAW5sB,GACvE,kBAAC,GAAD,CAAe8pB,QAAS4C,GAAc3C,aAAcuC,IACpD,4BAAQrkB,QAASwkB,IACb,kBAAC9qB,EAAKgB,MAAN,QAGR,MC7CKkqB,GAAwC,SAAC,GAAyB,IAAvB7E,EAAsB,EAAtBA,UAAWV,EAAW,EAAXA,KACzDrf,EAAUrD,uBAAY,kBDkBM4kB,EClBsBrC,KAAKrf,KAAKC,UAAU,CAAEuf,OAAMU,eDkBjCwE,GAAgBnnB,IAAI,CAAEmkB,SAAxC,IAACA,IClBkE,CAChGlC,EACAU,IAGJ,OACI,4BAAQzmB,UAAU,eAAe0G,QAASA,EAASoP,KAAK,UACpD,kBAAC1V,EAAKY,OAAN,MACA,yBAAKhB,UAAU,eAAewH,YAAG,4BCNvC+jB,GAAgB,kBAClBlG,GAAcvhB,KAAI,gBAAGghB,EAAH,EAAGA,GAAH,MAAa,CAC3BA,GAAG,eAAMA,EAAP,CAAWiB,KAHW9nB,EAAkB,CAAC,EAAG,EAAG,EAAG,IAAI2a,MAAM,EAAG,GAG/B6N,eAAWhoB,EAAW4oB,aAAS5oB,EAAWwe,MAAO6H,EAAG7H,MAAQ,SAEhGuO,GAAgB,SAAC/E,GAAD,OAA0BpB,GAAcvhB,KAAI,gBAAGghB,EAAH,EAAGA,GAAH,MAAa,CAAEA,GAAG,eAAMA,EAAP,CAAW2B,mBACxFgF,GAAc,SAACpE,GAAD,OAChBhC,GAAcvhB,KAAI,YAAwC,IAArCghB,EAAoC,EAApCA,GAAoC,IAAhCH,QAAWE,EAAqB,EAArBA,KAAMD,EAAe,EAAfA,OAC9B6B,EAAoB3B,EAApB2B,UAAWV,EAASjB,EAATiB,KADkC,EAEpBU,EAAzBlB,EAF6C,EAE7CA,MAAOC,EAFsC,EAEtCA,OAAQC,EAF8B,EAE9BA,MACjBiG,EAAarE,EAAQ,KAAOtB,EAAM,IAAMsB,EAAQ,KAAOtB,EAAM,IAAMsB,EAAQ,KAAOtB,EAAM,GACxFhB,EAAiB,YAAID,EAAGC,WAAW9e,KAAI,SAAC5G,GAAD,mBAAaA,MAC1D0lB,EAAUgB,EAAM,GAAK,GAAGngB,KAAK2f,GAC7BR,EAAUgB,EAAM,GAAK,GAAGngB,KAAK4f,GAC7BT,EAAUgB,EAAM,GAAK,GAAGngB,KAAK6f,GAC7B,IAAMkG,EAAY,CAAE7G,GAAG,eAAMA,EAAP,CAAWC,YAAWsC,aAC5C,OAAOqE,EAAU,eAAQC,EAAR,CAAmBhH,QAAS,CAAEE,OAAMD,OAAQA,EAAS,KAAQ+G,MAGzEC,GAAuB,WAAO,IAAD,EACiBzG,IAAe,qBAAGL,MAAjEiB,EAD8B,EAC9BA,KAAMU,EADwB,EACxBA,UAAWY,EADa,EACbA,QAAStC,EADI,EACJA,UAAW9H,EADP,EACOA,MACvC4O,EAAoB1G,IAAe,YAAmE,IAAD,IAA/DH,MAASqC,EAAsD,EAAtDA,QAASpK,EAA6C,EAA7CA,MAAS6H,EAAoC,EAApCA,GAAoC,IAAhCH,QAAWE,EAAqB,EAArBA,KAAMD,EAAe,EAAfA,OAClFkH,EAAqBzE,EAAUpK,EAAQA,EAAQ,EAC/C8O,EAAUjH,EAAG7H,MAEnB,OADkB2H,EAAS,GAAKC,EAAO,GAClBkH,EAAU,GAAKD,IAAuBC,KAGzDC,GAA4BjG,MAAWA,GAAQU,GAAaY,GAElE,OACI,oCACKpK,EAAQ,GACL,yBAAKjd,UAAU,SACVwH,YAAG,kBADR,IAC4ByV,GAG/B+O,GACG,yBAAKhsB,UAAU,iBACX,4BAAQ0G,QAAS6kB,GAAezV,KAAK,SAASpB,SAAUmX,GAAxD,QAEI,yBAAK7rB,UAAU,eAAewH,YAAG,4BAI5Cue,IAASU,GAAa,kBAAC,GAAD,CAAoBzM,SAAUwR,GAAezF,KAAMA,IACzEA,GAAQU,IAAcY,GAAW,kBAAC,GAAD,CAAWrN,SAAUyR,GAAahF,UAAWA,IAC9EV,GAAQU,GAAaY,GAAW,kBAAC,GAAD,CAAaZ,UAAWA,EAAWV,KAAMA,EAAMsB,QAASA,IACxFtB,GAAQU,GAAa,kBAAC,GAAD,CAAYV,KAAMA,EAAMU,UAAWA,IACzD,kBAAC,GAAD,CAAe1B,UAAWA,MChDhC0G,GAAc,SAACpE,GAAD,OAChBhC,GAAcvhB,KAAI,YAA2C,IAAxCkhB,EAAuC,EAAvCA,MAAuC,IAAhCL,QAAWE,EAAqB,EAArBA,KAAMD,EAAe,EAAfA,OACjC6B,EAAoBzB,EAApByB,UAAWV,EAASf,EAATe,KADqC,EAEvBU,EAAzBlB,EAFgD,EAEhDA,MAAOC,EAFyC,EAEzCA,OAAQC,EAFiC,EAEjCA,MACjBwG,EAAe5E,EAAQ,KAAOtB,EAAM,IAAMsB,EAAQ,KAAOtB,EAAM,IAAMsB,EAAQ,KAAOtB,EAAM,GAC1FhB,EAAiB,YAAIC,EAAMD,WAAW9e,KAAI,SAAC5G,GAAD,mBAAaA,MAC7D0lB,EAAUgB,EAAM,GAAK,GAAGngB,KAAK2f,GAC7BR,EAAUgB,EAAM,GAAK,GAAGngB,KAAK4f,GAC7BT,EAAUgB,EAAM,GAAK,GAAGngB,KAAK6f,GAC7B,IAAMyG,EAAe,CAAElH,MAAM,eAAMA,EAAP,CAAcD,YAAWsC,aACrD,OAAO4E,EAAY,eAAQC,EAAR,CAAsBvH,QAAS,CAAEE,KAAMA,EAAO,EAAGD,YAAasH,MAG5EC,GAA0B,WAAO,IAAD,EACchH,IAAe,qBAAGH,SAAjEe,EADiC,EACjCA,KAAMU,EAD2B,EAC3BA,UAAWY,EADgB,EAChBA,QAAStC,EADO,EACPA,UAAW9H,EADJ,EACIA,MACvCmP,EAAejH,IAAe,YAAqE,IAAD,IAAjEL,GAAM7H,EAA2D,EAA3DA,MAAOwJ,EAAoD,EAApDA,UAAazB,EAAuC,EAAvCA,MAAuC,IAAhCL,QAAgC,EAArBE,KAAqB,EAAfD,OAErF,OADqB6B,EAAYxJ,EAAQA,EAAQ,IAC1B+H,EAAM/H,SAG3BvW,EAAUrD,uBAAY,WAtBd,IAACgpB,IAuBD,CAAEtG,UAAMtnB,EAAWgoB,eAAWhoB,EAAW4oB,aAAS5oB,GAtBhE4mB,GAAcvhB,KAAI,gBAAGkhB,EAAH,EAAGA,MAAH,MAAgB,CAAEA,MAAM,eAAMA,EAAP,GAAiBqH,OHkBhBpB,GAAgBnnB,IAAI,CAAEgnB,UAAU,MGMvE,IAEGkB,GAA4BjG,MAAWA,GAAQU,GAAaY,GAElE,OACI,oCACKpK,EAAQ,GACL,yBAAKjd,UAAU,SACVwH,YAAG,kBADR,IAC4ByV,GAG/B+O,GACG,yBAAKhsB,UAAU,aACX,4BAAQ0G,QAASA,EAASoP,KAAK,SAASpB,SAAU0X,GAC9C,kBAAChsB,EAAKM,QAAN,MACA,yBAAKV,UAAU,eAAewH,YAAG,yBAI5Cue,GAAQU,IAAcY,GAAW,kBAAC,GAAD,CAAWrN,SAAUyR,GAAahF,UAAWA,IAC9EV,GAAQU,GAAaY,GAAW,kBAAC,GAAD,CAAaZ,UAAWA,EAAWV,KAAMA,EAAMsB,QAASA,IACzF,kBAAC,GAAD,CAAetC,UAAWA,O,SzBnDjC/E,K,UAAAA,E,aAAAA,Q,KAKE,I0BCKpY,G1BDC0kB,GAAyB,WAAO,IAAD,EACZrpB,qBADY,mBACjCspB,EADiC,KACzBC,EADyB,OAEfrH,IAAe,qBAAGR,WAAnCE,EAFgC,EAEhCA,KAAMD,EAF0B,EAE1BA,OACR6H,EAAO1gB,iBAAO,CAAE8Y,OAAMD,WAEtB5e,EAAQ3C,uBAAY,kBAAMmpB,OAAU/tB,KAAY,IAWtD,OATAgF,qBAAU,WACoB,IAAtBgpB,EAAKzgB,QAAQ6Y,MAAuB,IAATA,EAC3B2H,EAAUxM,GAAO0M,KACc,IAAxBD,EAAKzgB,QAAQ4Y,QAA2B,IAAXA,GACpC4H,EAAUxM,GAAO2M,MAErBF,EAAKzgB,QAAU,CAAE6Y,OAAMD,YACxB,CAACC,EAAMD,IAEL2H,EAGD,yBAAKvsB,UAAU,iBAAiB0G,QAASV,GACrC,8BAAOwB,YAAG+kB,IAAWvM,GAAO0M,IAAM,eAAiB,mBAJvC,M2BfXE,GAA6B,WAAO,IAAD,EACV3pB,oBAAkB,GADR,mBACrC4pB,EADqC,KAC1BC,EAD0B,OAEnB3H,IAAe,qBAAGR,WAAnCC,EAFoC,EAEpCA,OAAQC,EAF4B,EAE5BA,KAEVkI,EAAW1pB,uBAAY,kBAAMypB,GAAa,SAAC5nB,GAAD,OAAQA,OAAI,IAE5D,OACI,yBACIlF,UAAW/B,EAAgB,WAAY4uB,GAAa,QAASjI,EAAS,GAAK,QAASC,EAAO,GAAK,YAChG,kBAAC,GAAD,MACA,yBAAK7kB,UAAU,cACX,4BAAQ8V,KAAK,SAASpP,QAASqmB,GAC3B,kBAAC3sB,EAAKO,SAAN,OAEJ,4BAAQX,UAAU,UAAU8V,KAAK,SAASpP,QAAS2e,GAAc/M,OAC5D9Q,YAAG,iBAGZ,yBAAKxH,UAAU,WAAW6sB,EAAY,kBAAC,GAAD,MAAoB,kBAAC,GAAD,OAC1D,kBAAC,GAAD,QCxBCG,GAAqB,kBAC9B,kBAAC,GAAD,CAAenX,IAAKwP,GAAc/M,OAC9B,kBAAC,GAAD,S,SFGI1Q,K,cAAAA,E,oBAAAA,E,kBAAAA,E,qBAAAA,E,2BAAAA,Q,KAOZ,IAAMqlB,GAAoB,WAAsB,IACpCtlB,EAAQ3C,EAA8BrH,OAAO6D,SAASyD,QAAtD0C,IACR,OAAOvB,OAAOyO,OAAOjN,IAAQ8Y,SAAS/Y,GAAOA,EAAM,M,GAGzB0B,YAAoC,CAAE1B,IAAKslB,O,qBAAlEC,G,MAAWC,G,MAkBlBxvB,OAAO+F,iBAAiB,YAJC,WACrB,IAAMiE,EAAMslB,KACRtlB,IAAQwlB,GAAShpB,MAAMwD,KAAKwlB,GAASrpB,IAAI,CAAE6D,WAInD,IAmBaF,GAAgB,CAAE2lB,KArCR,WACnB,IAAMzlB,EAAMulB,IAAU,qBAAGvlB,OAEzB,OAAIA,IAAQC,GAAOC,MAAc,kBAAC,GAAD,MAC7BF,IAAQC,GAAOI,SAAiB,kBAAC,GAAD,MAChCL,IAAQC,GAAOylB,QAAgB,kBAAC,GAAD,MAC/B1lB,IAAQC,GAAOE,IAAY,kBAAC,GAAD,MAC3BH,IAAQC,GAAOG,YAAoB,kBAAC,GAAD,MAEhC,kBAAC,EAAD,OA4B0BL,KAnB8B,SAAC,GAAuB,IAArB3C,EAAoB,EAApBA,SAAU4C,EAAU,EAAVA,IACtElG,EAAO,QAAUkG,EAEjBjB,EAAUrD,uBACZ,SAAC6I,GACGA,EAAM8H,iBACNmZ,GAASrpB,IAAI,CAAE6D,QACfhK,OAAOoN,QAAQuiB,UAAU,KAAM3lB,EAAKlG,KAExC,CAACkG,EAAKlG,IAGV,OACI,uBAAGA,KAAMA,EAAMiF,QAASA,GACnB3B,KG/CbwoB,IAASC,OACL,kBAAC,EAAD,KACI,kBAAC/lB,GAAc2lB,KAAf,MACA,kBAAC,EAAD,OAEJ1vB,EAAQE,WAAW6vB,eAAe,W","file":"static/js/main.1f22c849.chunk.js","sourcesContent":["export const Globals = {\n    window: () => window,\n    document: () => document,\n    navigator: (): any => navigator,\n    onLine: (): boolean => !('onLine' in Globals.navigator()) || Globals.navigator().onLine,\n};\n","const classNamesFilter = (arg: any) => !!arg && typeof arg === 'string';\nconst classNames = (...classes: any[]): string | undefined => classes.filter(classNamesFilter).join(' ') || undefined;\n\nconst array = <T>(num: number, defaultValue?: T): Array<T> => Array(num).fill(defaultValue);\n\nconst arrayFill = <T>(arr: T[], indices: number[], value: T): T[] => {\n    const copy = [...arr];\n    indices.forEach((i) => {\n        copy[i] = value;\n    });\n    return copy;\n};\n\nconst nextArray = <T>(before: T[], index: number, value: T): T[] => {\n    const copy = [...before];\n    copy.splice(index, 1, value);\n    return copy;\n};\n\nconst arrayShuffle = <T>(arr: T[]): T[] => {\n    const copy = [...arr];\n    const start = copy.length - 1;\n    for (let i = start; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [copy[i], copy[j]] = [copy[j], copy[i]];\n    }\n    return copy;\n};\n\n// optimized as much as possible\n// call this function without arguments to generate a new uuid\ntype UuidParam = void;\nconst uuid = (a: UuidParam): string =>\n    (a as any)\n        ? ((a as any) ^ ((Math.random() * 16) >> ((a as any) / 4))).toString(16)\n        : (([1e7] as any) + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, uuid);\n\nexport const Util = { array, classNames, nextArray, uuid, arrayFill, arrayShuffle };\n","import React from 'react';\nimport Icons from './icon-path.json';\nimport { Util } from '../../util/util';\n\ntype IconProps = { className?: string };\n\nconst _Icon = (symbol: keyof typeof Icons, props: IconProps = {}, width: number = 512) => (\n    <svg className={props.className ? props.className + ' icon' : 'icon'} viewBox={`0 0 ${width} 512`}>\n        <path fill=\"currentColor\" d={Icons[symbol]} />\n    </svg>\n);\n\nconst ArrowDown = ({ className }: IconProps) => <Icon.ArrowRight className={Util.classNames('rotate-90', className)} />;\n\nexport const Icon = {\n    Alert: (props?: IconProps) => _Icon('ALERT', props, 576),\n    ArrowRight: (props?: IconProps) => _Icon('ARROW_RIGHT', props, 448),\n    ArrowDown,\n    Ban: (props?: IconProps) => _Icon('BAN', props),\n    Crown: (props?: IconProps) => _Icon('CROWN', props, 640),\n    Glasses: (props?: IconProps) => _Icon('GLASSES', props, 576),\n    Exchange: (props?: IconProps) => _Icon('EXCHANGE', props),\n    Key: (props?: IconProps) => _Icon('KEY', props),\n    Mask: (props?: IconProps) => _Icon('MASK', props, 640),\n    Menu: (props?: IconProps) => _Icon('MENU', props, 448),\n    Undo: (props?: IconProps) => _Icon('UNDO', props),\n    QrCode: (props?: IconProps) => _Icon('QR_CODE', props, 448),\n    Refresh: (props?: IconProps) => _Icon('REFRESH', props, 640),\n    Refresh2: (props?: IconProps) => _Icon('REFRESH_2', props),\n    Settings: (props?: IconProps) => _Icon('SETTINGS', props),\n    Times: (props?: IconProps) => _Icon('TIMES', props),\n    Trash: (props?: IconProps) => _Icon('TRASH', props, 448),\n};\n","import React, { ReactNode, useEffect, useCallback, useState } from 'react';\nimport { Globals } from './globals';\nimport { Icon } from './components/icons/icon';\n\nconst reloadPage = () => {\n    Globals.window().open(window.location.href, '_self');\n};\n\nlet newSWInstalledCb = () => {};\n\nconst registerServiceWorker = () =>\n    Globals.navigator()\n        .serviceWorker.register('/sw.js')\n        .then((reg: any /* ServiceWorkerRegistration */) => {\n            reg.onupdatefound = () => {\n                // reg.installing -> the installing worker, or undefined\n                // reg.waiting -> the waiting worker, or undefined\n                // reg.active -> the active worker, or undefined\n                const installingWorker = reg.installing;\n                const activeWorker = reg.active;\n                installingWorker.onstatechange = () => {\n                    // \"installing\" - the install event has fired, but not yet complete\n                    // \"installed\"  - install complete\n                    // \"activating\" - the activate event has fired, but not yet complete\n                    // \"activated\"  - fully active\n                    // \"redundant\"  - discarded. Either failed install, or it's been\n                    //                replaced by a newer version\n                    if (installingWorker.state === 'installed' && activeWorker) newSWInstalledCb();\n                };\n            };\n        })\n        .catch(() => Globals.window().console.error('some service worker registration failed'));\n\nconst initServiceWorker = () => {\n    if (process.env.NODE_ENV !== 'development') {\n        'serviceWorker' in navigator && window.addEventListener('load', registerServiceWorker);\n    }\n};\n\nconst doAfter = (ms: number, cb: () => void): Promise<void> =>\n    new Promise((resolve) =>\n        Globals.window().setTimeout(() => {\n            cb();\n            resolve();\n        }, ms)\n    );\n\nexport const ServiceWorkerUpdater = () => {\n    const [content, setContent] = useState<ReactNode | void>();\n\n    const contentDelayed = useCallback(\n        (delay: number, content: ReactNode): Promise<void> => doAfter(delay, () => setContent(content)),\n        []\n    );\n\n    const initRefresh = useCallback(\n        () =>\n            Promise.all([\n                contentDelayed(0, 'Update gefunden'),\n                contentDelayed(1000, 'Update anwenden'),\n                contentDelayed(1300, 'Update anwenden.'),\n                contentDelayed(1600, 'Update anwenden..'),\n                contentDelayed(1900, 'Update anwenden...'),\n                contentDelayed(2200, <Icon.Undo />),\n                doAfter(2500, reloadPage),\n            ]),\n        [] // eslint-disable-line react-hooks/exhaustive-deps\n    );\n\n    useEffect(() => {\n        newSWInstalledCb = initRefresh;\n        initServiceWorker();\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    if (!content) return null;\n\n    return (\n        <div className=\"sw-update\">\n            <div className=\"sw-update-overlay\" />\n            <div className=\"sw-update-content\">{content}</div>\n        </div>\n    );\n};\n","import React, { Fragment, ReactNode, useEffect, useState } from 'react';\nimport { addIntlData } from 'first-intl';\nimport deIntl from './intl-de.json';\nimport enIntl from './intl-en.json';\nimport { Persistore } from 'persistore';\n\ntype SupportedLanguage = 'de' | 'en';\n\nconst _key = 'lang';\n\nconst _persist = (chosen: SupportedLanguage) => Persistore.set(_key, chosen);\nconst _getPersisted = (): SupportedLanguage | undefined => {\n    const saved = Persistore.get(_key);\n    return saved === 'de' || saved === 'en' ? saved : undefined;\n};\n\naddIntlData(deIntl);\n\nconst _detectPreferred = (): SupportedLanguage => {\n    const lang = navigator.language;\n    return lang && lang.startsWith('en') ? 'en' : 'de';\n};\n\nlet currentLang = _getPersisted() || _detectPreferred();\n\nif (currentLang !== 'de') {\n    addIntlData(enIntl);\n}\n\nconst Updater = { setKey: (key: SupportedLanguage) => {} };\n\nexport const toggleIntl = () => {\n    if (currentLang === 'de') {\n        currentLang = 'en';\n        addIntlData(enIntl);\n        Updater.setKey('en');\n        _persist('en');\n    } else {\n        currentLang = 'de';\n        addIntlData(deIntl);\n        Updater.setKey('de');\n        _persist('de');\n    }\n};\n\nexport const IntlRoot: React.FC<{ children: ReactNode }> = ({ children }) => {\n    const [key, setKey] = useState<SupportedLanguage>(currentLang);\n\n    useEffect(() => {\n        Updater.setKey = setKey;\n    }, []);\n\n    return <Fragment key={key}>{children}</Fragment>;\n};\n\nexport const getCurrentIntl = (): SupportedLanguage => currentLang;\n","/**\n * Wording conventions:\n * 1) search string => Part of the url preceded by the pathname.\n *      e.g.: ?uuid=whatever&page=4\n * 2) query string => search string without \"?\"\n *      e.g.: uuid=whatever&page=4\n * 3) query => the associated object of the query string\n *      e.g.: {uuid: 'whatever', page: '4'}\n *\n * ATTENTION: All values will be strings!!!\n */\n\n/**\n * Transforms location search string into query object.\n */\nconst locationSearchToQuery = (search: string = ''): { [key: string]: any } => {\n    const s = search.startsWith('?') ? search.substr(1) : search; // hash history not considered for now\n    const params = s.split('&');\n    const result = {} as { [key: string]: any };\n    for (let i = 0; i < params.length; i++) {\n        const param = params[i];\n        if (param) {\n            const pair = param.split('=');\n            const value = pair[1];\n            if (value !== undefined) result[decodeURIComponent(pair[0])] = decodeURIComponent(value);\n        }\n    }\n    return result;\n};\n\n/**\n * Transforms query object to query string.\n */\nconst queryToString = (query: { [key: string]: any }): string =>\n    Object.keys(query)\n        .map((key) => {\n            const value = query[key];\n            if (value !== undefined && value !== null) {\n                return `${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`;\n            }\n            return undefined;\n        })\n        .filter(Boolean)\n        .join('&');\n\n/**\n * Transforms query object to search string.\n */\nconst queryToSearch = (query: Object): string => {\n    const queryString = queryToString(query);\n    return queryString ? `?${queryString}` : '';\n};\n\nexport const UrlUtil = { queryToString, locationSearchToQuery, queryToSearch };\n","import React, { Fragment } from 'react';\n\nconst allReportedErrors: any[] = [];\nconst oldConsoleError = window.console.error;\nwindow.console.error = (...args: any[]) => {\n    allReportedErrors.push(...args);\n    oldConsoleError(...args);\n};\nwindow.onerror = (e) => {\n    allReportedErrors.push(e);\n};\n\nexport type AdminProps = { close: () => void };\n\nexport const Admin: React.FC<AdminProps> = ({ close }) => (\n    <div className=\"admin\">\n        <div className=\"console-error\">\n            <h1>console.error</h1>\n            {allReportedErrors.map((message, index) => (\n                <p key={index}>{String(message)}</p>\n            ))}\n        </div>\n        <div className=\"localStorage\">\n            <h1>localStorage</h1>\n            {Object.keys(localStorage).map((key) => (\n                <Fragment key={key}>\n                    <h3>{key}</h3>\n                    <p>{JSON.stringify(localStorage.getItem(key))}</p>\n                </Fragment>\n            ))}\n        </div>\n        <button onClick={close}>Close</button>\n    </div>\n);\n","import React, { useCallback, useState } from 'react';\nimport { Admin } from './Admin';\n\nconst _AdminEntry = {\n    lastClicked: 0,\n    successCount: 0,\n    margin: 100,\n    timing: [474, 405, 135, 464, 919, 446], // TODO(VL): Rework this entry strategy. Does not work reliably on all devices\n};\n\n// TODO(VL): Should be possible everywhere to open the admin panel. Not only on first page\nexport const AdminEntry: React.FC = () => {\n    const [active, setActive] = useState(false);\n    const onClick = useCallback(() => {\n        const now = Date.now();\n        const diff = now - _AdminEntry.lastClicked;\n        if (diff > 2000) {\n            // console.log('First');\n            _AdminEntry.successCount = 0;\n        } else {\n            const timing = _AdminEntry.timing[_AdminEntry.successCount];\n            if (diff - _AdminEntry.margin < timing && timing < diff + _AdminEntry.margin) {\n                // console.log('Success');\n                if (_AdminEntry.successCount === 5) {\n                    _AdminEntry.successCount = 0;\n                    setActive(true);\n                } else {\n                    _AdminEntry.successCount++;\n                }\n            } else {\n                // console.log('Failed');\n                _AdminEntry.successCount = 0;\n            }\n        }\n        _AdminEntry.lastClicked = now;\n    }, []);\n\n    const close = useCallback(() => setActive(false), []);\n\n    return active ? <Admin close={close} /> : <div className=\"admin-entry\" onClick={onClick} />;\n};\n","import React from 'react';\nimport { __ } from 'first-intl';\nimport { InfinityStaged } from 'react-staged';\nimport { getCurrentIntl, toggleIntl } from './intl';\nimport { AppNavigation, NavLoc } from './AppNavigation';\nimport { AdminEntry } from './admin/AdminEntry';\n\nexport const App: React.FC = () => (\n    <div className=\"App\">\n        <header className=\"App-header\">\n            <img src=\"/logo.svg\" className=\"App-logo\" alt=\"logo\" />\n            <img\n                src={getCurrentIntl() === 'de' ? '/flag.germany.svg' : '/flag.usa.svg'}\n                className=\"App-logo\"\n                alt=\"toggle language\"\n                onClick={toggleIntl}\n            />\n        </header>\n        <div className=\"App-content\">\n            <InfinityStaged>\n                <div className=\"preview preview-again\" key=\"again\">\n                    <h1>{__('AGAIN')}</h1>\n                    <AppNavigation.Link loc={NavLoc.AGAIN}>{__('APP.play')}</AppNavigation.Link>\n                </div>\n                <div className=\"preview preview-sit\" key=\"sit\">\n                    <h1>{__('SIT')}</h1>\n                    <AppNavigation.Link loc={NavLoc.SIT}>{__('APP.play')}</AppNavigation.Link>\n                </div>\n                <div className=\"preview preview-veryClever\" key=\"veryClever\">\n                    <h1>{__('VC')}</h1>\n                    <AppNavigation.Link loc={NavLoc.VERY_CLEVER}>{__('APP.play')}</AppNavigation.Link>\n                </div>\n                <div className=\"preview preview-decrypto\" key=\"decrypto\">\n                    <h1>{__('DECRYPTO')}</h1>\n                    <AppNavigation.Link loc={NavLoc.DECRYPTO}>{__('APP.play')}</AppNavigation.Link>\n                </div>\n            </InfinityStaged>\n        </div>\n        <AdminEntry />\n    </div>\n);\n","import { Color } from './types';\nimport { SelectOption } from '../../components/form/select';\nimport { StringMessage } from 'first-intl';\n\ntype RawData = { label: StringMessage; grid: string[]; stars: string; backgroundColor: string };\nexport type Data = { label: StringMessage; grid: Color[][]; stars: number[]; backgroundColor: string };\n\nconst parseRawGridData = (rowColors: string[]): Color[][] => rowColors.map((row: any) => row.split(''));\nconst parseRawStarPositions = (starPositions: string): number[] => starPositions.split('').map(Number);\nconst parseRawData = ({ label, grid, stars, backgroundColor }: RawData): Data => ({\n    label,\n    grid: parseRawGridData(grid),\n    stars: parseRawStarPositions(stars),\n    backgroundColor,\n});\n\nconst AllRawData = {\n    black: {\n        label: 'AGAIN.color.black',\n        backgroundColor: '#222222',\n        stars: '251513205150635',\n        grid: [\n            'GOBBRRY',\n            'GGGROBY',\n            'GYRROBB',\n            'YGGGORB',\n            'YYGOORB',\n            'YYGORRB',\n            'YOGBBRR',\n            'GORBBYY',\n            'BRRGOYY',\n            'BBRGOOY',\n            'BBYYORG',\n            'OOYYRBG',\n            'YOOORBG',\n            'YGGRRBO',\n            'YGGBROO',\n        ],\n    },\n    blue: {\n        label: 'AGAIN.color.blue',\n        backgroundColor: '#64a8ff',\n        stars: '125161046141324',\n        grid: [\n            'ROBBGGY',\n            'RROBBGY',\n            'GROOBYY',\n            'GBBORYY',\n            'YBGORRR',\n            'YGGGRBO',\n            'YYGRBBO',\n            'GGRRBYO',\n            'GGOOBYR',\n            'RRGOBYY',\n            'RGGOOBY',\n            'RYGOBBB',\n            'RRGBYOO',\n            'OOGBYYR',\n            'OOYYGBR',\n        ],\n    },\n    green: {\n        label: 'AGAIN.color.green',\n        backgroundColor: '#22b244',\n        stars: '044266214405344',\n        grid: [\n            'OGBBBRY',\n            'GGBORRY',\n            'BGOOORY',\n            'BGGORRY',\n            'RRYOBBG',\n            'RYYGOBB',\n            'RGGGOBY',\n            'GRBBOYY',\n            'GGRBBYO',\n            'GGRBYYO',\n            'YRRBOOG',\n            'YYROOBG',\n            'YYORRGB',\n            'RROOYGB',\n            'RYYOOGB',\n        ],\n    },\n    orange: {\n        label: 'AGAIN.color.orange',\n        backgroundColor: '#d03b09',\n        stars: '030414031051652',\n        grid: [\n            'OBYYRGG',\n            'OOBYYGR',\n            'YOBBGGR',\n            'OOGYBRR',\n            'RGGYBBO',\n            'RRRYGBO',\n            'RGGYYBO',\n            'GGYBOOR',\n            'OYYBBGR',\n            'RRYYBGO',\n            'GRRYBOO',\n            'GGRRBYO',\n            'GBBOOYR',\n            'GYYOBBR',\n            'GYOOBBR',\n        ],\n    },\n    pink: {\n        label: 'AGAIN.color.pink',\n        backgroundColor: '#9c2271',\n        stars: '206201230315514',\n        grid: [\n            'GRBBBOY',\n            'GOBBRYY',\n            'OOBRRGY',\n            'OYRRBGG',\n            'OGGRBBY',\n            'RGGGBOY',\n            'RBBGOOY',\n            'RYYOBGG',\n            'YYROBBG',\n            'BYRROOG',\n            'BGRYYOO',\n            'BOOGYYR',\n            'BOGGYRR',\n            'BOOGYRR',\n            'RROGBYY',\n        ],\n    },\n    violet: {\n        label: 'AGAIN.color.violet',\n        backgroundColor: '#701fa7',\n        stars: '530420214213612',\n        grid: [\n            'YOOOGBR',\n            'YBOGGGR',\n            'OBBYGRR',\n            'OBBYRGG',\n            'ORYYYGB',\n            'GRRYOOB',\n            'BROOGGY',\n            'BROGGYY',\n            'BROOYGG',\n            'YYBBORG',\n            'YYBBORG',\n            'RBBOOYG',\n            'RRRBOYG',\n            'GRBBOYY',\n            'GOBRRRY',\n        ],\n    },\n    yellow: {\n        label: 'AGAIN.color.yellow',\n        backgroundColor: '#d09012',\n        stars: '625062536324220',\n        grid: [\n            'RRBOYYG',\n            'GGROBYY',\n            'GRROBBY',\n            'YRBOOGG',\n            'YRBBOGG',\n            'YYGBROO',\n            'YYGBROO',\n            'OOGBRYY',\n            'RRGGBYO',\n            'RRGYBOO',\n            'GGRYBBO',\n            'GGBBRYO',\n            'GBORRYY',\n            'BBBROYG',\n            'YBRROOG',\n        ],\n    },\n};\n\nexport type DataOption = keyof typeof AllRawData;\nexport const AllData: { [key in DataOption]: Data } = {\n    black: parseRawData(AllRawData.black),\n    blue: parseRawData(AllRawData.blue),\n    green: parseRawData(AllRawData.green),\n    orange: parseRawData(AllRawData.orange),\n    pink: parseRawData(AllRawData.pink),\n    violet: parseRawData(AllRawData.violet),\n    yellow: parseRawData(AllRawData.yellow),\n};\nexport const dataOptions: DataOption[] = Object.keys(AllData) as any;\n\nexport const DataSelectionOptions: Array<SelectOption<DataOption>> = dataOptions.map(\n    (key: DataOption): SelectOption<DataOption> => ({\n        label: AllData[key].label,\n        value: key,\n    })\n);\n","import { Persistore } from 'persistore';\nimport { Util } from '../../util/util';\nimport { AllData, Data, dataOptions, DataOption } from './data';\nimport { Color } from './types';\nimport { createStore } from 'react-use-sub';\n\nexport type SplashIconType = 'cancel' | 'undo' | 'submit' | 'skip';\n\nexport type TurnState = {\n    skipped: boolean;\n    color?: Color;\n    count?: number;\n    completedColor?: Color;\n    completedRows?: boolean[];\n};\n\nexport type VeryCleverState = {};\n\nexport type AgainState = {\n    crossed: boolean[][];\n    rowPointsBlocked: boolean[];\n    colorPointsBlocked: boolean[];\n    takenJokers: number;\n    turns: TurnState[];\n};\n\ntype State = {\n    againSplash: SplashIconType | null;\n    again: AgainState;\n    againData: Data | null;\n    veryClever: VeryCleverState;\n};\n\nconst [useAgainSub, store] = createStore<State>({\n    againSplash: null,\n    again: { crossed: [], rowPointsBlocked: [], colorPointsBlocked: [], takenJokers: 0, turns: [] } as AgainState,\n    againData: null,\n    veryClever: {},\n});\n\nexport { useAgainSub };\n\nconst setSplash = (icon: SplashIconType | null) => store.set({ againSplash: icon });\n\nconst _key = 'again';\nconst _keyChosen = 'again_chosen';\n\nconst getHistory = (): AgainState[] => {\n    try {\n        const states = Persistore.get(_key);\n        return JSON.parse(states as any);\n    } catch (e) {\n        return [];\n    }\n};\n\nconst randomNum = (limit: number) => Math.floor(Math.random() * limit);\nconst randomDataKey = (): DataOption => dataOptions[randomNum(dataOptions.length)];\n\nconst dataOption = (option: DataOption | 'random'): DataOption => (option === 'random' ? randomDataKey() : option);\n\nconst chooseData = (option: DataOption): void => {\n    const selectedOption = dataOption(option);\n    store.set({ againData: AllData[selectedOption] });\n    Persistore.set(_keyChosen, selectedOption);\n};\n\nconst set = (state: Partial<AgainState>): void => {\n    store.set(({ again }) => ({ again: { ...again, ...state } }));\n    const history = getHistory();\n    history.unshift(store.get().again);\n    if (history.length > 10) history.pop();\n    Persistore.set(_key, JSON.stringify(history));\n};\n\nconst undo = (): void => {\n    if (!store.get().againSplash) {\n        const history = getHistory();\n        if (history.length > 1) {\n            history.shift();\n            Persistore.set(_key, JSON.stringify(history));\n            store.set({ again: history[0], againSplash: 'undo' });\n        } else {\n            Persistore.remove(_key);\n            store.set({ again: initialData, againSplash: history.length > 0 ? 'undo' : null });\n        }\n    }\n};\n\nconst uncrossedRow: boolean[] = Util.array(7).map(() => false);\nexport const uncrossedGrid: boolean[][] = Util.array(15).map(() => uncrossedRow);\nconst unblockedRowPoints: boolean[] = Util.array(15).map(() => false);\nconst unblockedColorPoints: boolean[] = Util.array(5).map(() => false);\nconst initialData: AgainState = {\n    crossed: uncrossedGrid,\n    rowPointsBlocked: unblockedRowPoints,\n    colorPointsBlocked: unblockedColorPoints,\n    takenJokers: 0,\n    turns: [],\n};\n\nconst get = (): AgainState => getHistory()[0] || initialData;\nconst getChosenData = (): Data | null => {\n    const option = Persistore.get(_keyChosen);\n    return option ? AllData[(option as any) as DataOption] : null;\n};\n\nconst init = () => store.set({ again: get(), againData: getChosenData() });\n\nconst restart = (): void => Persistore.remove(_key) || Persistore.remove(_keyChosen) || init();\n\ninit();\n\nexport const AgainStore = { set, undo, restart, chooseData, setSplash };\n","import React from 'react';\nimport { Icon } from '../../components/icons/icon';\nimport { __ } from 'first-intl';\n\ntype ControlMenuProps = { undo: () => void; restart: () => void };\nexport const ControlMenu: React.FC<ControlMenuProps> = ({ undo, restart }) => (\n    <div className=\"game-menu\">\n        <div>\n            {undo && (\n                <button onClick={undo} className=\"undo\">\n                    <Icon.Undo className=\"reflect\" />\n                </button>\n            )}\n            {restart && (\n                <button onClick={restart} className=\"restart\">\n                    {__('APP.restart')}\n                </button>\n            )}\n        </div>\n    </div>\n);\n","import React, { useState, useCallback, useEffect, useRef, ReactNode } from 'react';\nimport { Icon } from '../../components/icons/icon';\nimport { ControlMenu } from './ControlMenu';\n\nconst containedInControlMenu = (target: any): boolean => {\n    let current = target;\n    for (let i = 0; current && i < 100; i++) {\n        if (current && current.className === 'game-menu') return true;\n        current = current.parentElement;\n    }\n    return false;\n};\n\ntype ControlBarProps = { undo: () => void; restart: () => void; children: ReactNode };\n\nexport const ControlBar = ({ undo, restart, children }: ControlBarProps) => {\n    const [open, setOpen] = useState<boolean>(false);\n    const openRef = useRef<boolean>(open);\n    openRef.current = open;\n\n    const toggleMenu = useCallback(() => setOpen((s) => !s), []);\n\n    const close = useCallback((event: any) => {\n        if (openRef.current && event && !containedInControlMenu(event.target)) setOpen(false);\n    }, []);\n\n    useEffect(() => {\n        window.addEventListener('click', close, true);\n        return () => window.removeEventListener('click', close, true);\n    }, [close]);\n\n    return (\n        <div className=\"game\">\n            <nav>\n                <button onClick={toggleMenu} className=\"menu\">\n                    <Icon.Menu />\n                </button>\n            </nav>\n            {open && <ControlMenu restart={restart} undo={undo} />}\n            {children}\n        </div>\n    );\n};\n","import React, { ReactNode, useCallback } from 'react';\nimport { AgainStore } from './again-store';\nimport { Util } from '../../util/util';\n\nconst BoxWrapper: React.FC<{ children: ReactNode; onClick?: () => void }> = ({ children, onClick }) => (\n    <div>\n        <div className=\"box\" onClick={onClick}>\n            {children}\n        </div>\n    </div>\n);\n\nconst NumberJoker: React.FC = () => (\n    <BoxWrapper>\n        <svg viewBox=\"0 0 50 50\">\n            <rect x=\"0\" y=\"0\" width=\"50\" height=\"50\" rx=\"10\" ry=\"10\" fill=\"black\" />\n            <text textAnchor=\"middle\" x=\"25\" y=\"38\" fontSize=\"40\" fontWeight=\"900\" fill=\"white\">\n                ?\n            </text>\n        </svg>\n    </BoxWrapper>\n);\n\nconst ColorJoker: React.FC = () => (\n    <BoxWrapper>\n        <svg viewBox=\"0 0 50 50\">\n            <rect x=\"0\" y=\"0\" width=\"50\" height=\"50\" rx=\"10\" ry=\"10\" fill=\"black\" />\n            <g stroke=\"white\" strokeWidth=\"10\">\n                <line x1=\"10\" y1=\"10\" x2=\"40\" y2=\"40\" />\n                <line x1=\"10\" y1=\"40\" x2=\"40\" y2=\"10\" />\n            </g>\n        </svg>\n    </BoxWrapper>\n);\n\nconst JokerSeparator: React.FC = () => (\n    <BoxWrapper>\n        <svg viewBox=\"0 0 50 50\">\n            <line x1=\"15\" y1=\"45\" x2=\"35\" y2=\"5\" stroke=\"black\" strokeWidth=\"10\" />\n        </svg>\n    </BoxWrapper>\n);\n\nconst EqualSign: React.FC = () => (\n    <BoxWrapper>\n        <svg viewBox=\"0 0 50 50\">\n            <line x1=\"10\" y1=\"20\" x2=\"40\" y2=\"20\" stroke=\"black\" strokeWidth=\"7\" />\n            <line x1=\"10\" y1=\"30\" x2=\"40\" y2=\"30\" stroke=\"black\" strokeWidth=\"7\" />\n        </svg>\n    </BoxWrapper>\n);\n\nconst JokerPlaceholder: React.FC<{ taken: boolean; onClick?: () => void }> = ({ taken, onClick }) => (\n    <BoxWrapper onClick={onClick}>\n        <svg viewBox=\"0 0 50 50\">\n            <circle cx=\"25\" cy=\"25\" r=\"23\" fill=\"none\" stroke=\"black\" strokeWidth=\"2\" />\n            <text textAnchor=\"middle\" x=\"25\" y=\"38\" fontSize=\"40\" fontWeight=\"900\">\n                !\n            </text>\n            {taken && (\n                <g stroke=\"black\" strokeWidth=\"4\">\n                    <line x1=\"7\" y1=\"7\" x2=\"43\" y2=\"43\" />\n                    <line x1=\"7\" y1=\"43\" x2=\"43\" y2=\"7\" />\n                </g>\n            )}\n        </svg>\n    </BoxWrapper>\n);\n\ntype JokersProps = { takenJokers: number };\nexport const Jokers: React.FC<JokersProps> = ({ takenJokers }) => {\n    const takeJoker = useCallback(() => AgainStore.set({ takenJokers: takenJokers + 1 }), [takenJokers]);\n    return (\n        <div className=\"again-jokers\">\n            <NumberJoker />\n            <JokerSeparator />\n            <ColorJoker />\n            <EqualSign />\n            {Util.array(8).map((_, index) => (\n                <JokerPlaceholder\n                    onClick={index === takenJokers ? takeJoker : undefined}\n                    key={index}\n                    taken={index < takenJokers}\n                />\n            ))}\n        </div>\n    );\n};\n","export const COLOR = {\n    O: '#d65c0c',\n    B: '#0f63ff',\n    G: '#03860b',\n    R: '#cd0b1b',\n    Y: '#ffdf10',\n};\n\nexport type Color = keyof typeof COLOR;\n","import React from 'react';\nimport { Color, COLOR } from './types';\nimport { Util } from '../../util/util';\n\ntype BoxProps = {\n    content?: string | number;\n    color?: Color;\n    customColor?: string;\n    borderColor?: string;\n    star?: boolean;\n    circled?: boolean;\n    crossed?: boolean;\n    onClick?: () => void;\n    flicker?: boolean;\n};\nexport const Box: React.FC<BoxProps> = ({\n    content,\n    color,\n    customColor,\n    circled,\n    crossed,\n    onClick,\n    star,\n    borderColor,\n    flicker,\n}) => (\n    <div>\n        <div className={Util.classNames('box box-bordered', flicker && 'box-flicker')} onClick={onClick}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\">\n                <rect\n                    x=\"0\"\n                    y=\"0\"\n                    width=\"50\"\n                    height=\"50\"\n                    rx=\"10\"\n                    ry=\"10\"\n                    fill={(color && COLOR[color]) || customColor || 'white'}\n                />\n                {borderColor && (\n                    <rect\n                        x=\"1\"\n                        y=\"1\"\n                        width=\"48\"\n                        height=\"48\"\n                        rx=\"10\"\n                        ry=\"10\"\n                        fill=\"none\"\n                        stroke={borderColor}\n                        strokeWidth=\"3\"\n                    />\n                )}\n                {star && <polygon points=\"25 5 32 20 45 20 35 28 45 45 25 35 5 45 15 28 2 20 18 20\" fill=\"white\" />}\n                {content !== undefined && (\n                    <text textAnchor=\"middle\" x=\"25\" y=\"35\" fontSize=\"30\">\n                        {content}\n                    </text>\n                )}\n                {circled && <circle cx=\"25\" cy=\"25\" r=\"23\" fill=\"none\" stroke=\"black\" strokeWidth=\"2\" />}\n                {crossed && (\n                    <g stroke=\"black\" strokeWidth=\"4\">\n                        <line x1=\"5\" y1=\"5\" x2=\"45\" y2=\"45\" />\n                        <line x1=\"5\" y1=\"45\" x2=\"45\" y2=\"5\" />\n                    </g>\n                )}\n            </svg>\n        </div>\n    </div>\n);\n","import React, { useCallback } from 'react';\nimport { Color } from './types';\nimport { Box } from './Box';\nimport { Data } from './data';\nimport { Util } from '../../util/util';\nimport { TurnState } from './again-store';\n\ntype GridProps = {\n    gridData: Data;\n    crossed: boolean[][];\n    clickable: boolean[][];\n    onCross: (boxIndex: number, rowIndex: number) => void;\n    lastTurn?: TurnState;\n};\n\nexport const Grid: React.FC<GridProps> = ({ gridData, crossed, clickable, lastTurn, onCross }) => {\n    const onClickHandler = useCallback((boxIndex: number, rowIndex: number) => () => onCross(boxIndex, rowIndex), [\n        onCross,\n    ]);\n    return (\n        <div className=\"again-grid\">\n            {gridData.grid.map((row: Color[], rowIndex: number) => (\n                <div\n                    className={Util.classNames(\n                        'again-row',\n                        lastTurn && lastTurn.completedRows && lastTurn.completedRows[rowIndex] && 'row-alert'\n                    )}\n                    key={rowIndex}>\n                    {row.map((color, boxIndex) => {\n                        const starPosition = gridData.stars[rowIndex];\n                        const crossedRow = crossed[rowIndex];\n                        const isMiddleRow = rowIndex === 7;\n                        const isClickable = clickable[rowIndex][boxIndex];\n\n                        return (\n                            <Box\n                                onClick={isClickable ? onClickHandler(boxIndex, rowIndex) : undefined}\n                                key={boxIndex}\n                                color={color}\n                                star={starPosition === boxIndex}\n                                crossed={crossedRow[boxIndex]}\n                                borderColor={isMiddleRow ? 'white' : 'black'}\n                            />\n                        );\n                    })}\n                </div>\n            ))}\n        </div>\n    );\n};\n","import React from 'react';\nimport { Box } from './Box';\n\nexport const allLetters = 'ABCDEFGHIJKLMNO'.split('');\n\nexport const Letters: React.FC = () => (\n    <div className=\"again-letters\">\n        {allLetters.map((letter, index) => (\n            <Box key={index} content={letter} />\n        ))}\n    </div>\n);\n","import { Data } from './data';\nimport { AgainState } from './again-store';\n\nconst rowPoints1 = '533322212223335'.split('').map(Number);\nconst rowPoints2 = '322211101112223'.split('').map(Number);\n\nexport const getCompletedRows = (crossed: boolean[][]): boolean[] =>\n    crossed.map((row) => row.every((checked) => checked));\nexport const getCompletedColors = (crossed: boolean[][], gridData: Data): boolean[] =>\n    'OBGRY'\n        .split('')\n        .map((color) =>\n            crossed.every((row, index) =>\n                row.every((checked, boxIndex) => gridData.grid[index][boxIndex] !== color || checked)\n            )\n        );\n\nconst getTotalPoints = (\n    again: AgainState,\n    gridData: Data,\n    completedRows: boolean[],\n    completedColors: boolean[]\n): number => {\n    const { rowPointsBlocked, colorPointsBlocked, crossed, takenJokers } = again;\n    const rowPoints = completedRows\n        .map((completed, index) => (!completed ? 0 : rowPointsBlocked[index] ? rowPoints2[index] : rowPoints1[index]))\n        .reduce((r, v) => r + v, 0);\n    const colorPoints = completedColors\n        .map((completed, index) => (!completed ? 0 : colorPointsBlocked[index] ? 3 : 5))\n        .reduce((r, v) => r + v, 0 as number);\n    const jokerPoints = 8 - takenJokers;\n    const starPoints = crossed\n        .map((row, index) => (row[gridData.stars[index]] ? 0 : -2))\n        .reduce((r, v) => r + v, 0 as number);\n\n    return rowPoints + colorPoints + jokerPoints + starPoints;\n};\n\nexport const getClickable = (crossed: boolean[][], allowMiddle: boolean = true): boolean[][] =>\n    crossed.map((row, rowIndex) =>\n        row.map(\n            (checked, boxIndex) =>\n                !checked &&\n                ((allowMiddle && rowIndex === 7) || // is allowed middle row\n                (crossed[rowIndex - 1] || {})[boxIndex] || // left box is checked\n                (crossed[rowIndex + 1] || {})[boxIndex] || // right box is checked\n                row[boxIndex - 1] || // upper box is checked\n                    row[boxIndex + 1]) // below box is checked\n        )\n    );\n\ntype Calculation = { completedRows: boolean[]; completedColors: boolean[]; totalPoints: number };\n\nexport const calculate = (again: AgainState, gridData: Data): Calculation => {\n    const completedRows = getCompletedRows(again.crossed);\n    const completedColors = getCompletedColors(again.crossed, gridData);\n    const totalPoints = getTotalPoints(again, gridData, completedRows, completedColors);\n    return { completedRows, completedColors, totalPoints };\n};\n","import React from 'react';\nimport { AgainStore, TurnState } from './again-store';\nimport { Box } from './Box';\nimport { Util } from '../../util/util';\n\nconst rowPoints1 = '533322212223335'.split('').map(Number);\nconst rowPoints2 = '322211101112223'.split('').map(Number);\n\nconst blockRowPoints = (index: number, rowPointsBlocked: boolean[]) => () => {\n    AgainStore.set({ rowPointsBlocked: Util.nextArray(rowPointsBlocked, index, true) });\n};\n\nconst rowWasCompleted = (index: number, lastTurn?: TurnState): boolean =>\n    Boolean(lastTurn && lastTurn.completedRows && lastTurn.completedRows[index]);\n\nconst COMPLETED = '#5eee61';\n\ntype RowPointsProps = { rowPointsBlocked: boolean[]; completedRows: boolean[]; lastTurn?: TurnState };\nexport const RowPoints: React.FC<RowPointsProps> = ({ rowPointsBlocked, completedRows, lastTurn }) => (\n    <div className=\"again-row-points\">\n        <div className=\"again-row-points-1\">\n            {rowPoints1.map((num, index) => (\n                <Box\n                    key={index}\n                    content={num}\n                    crossed={rowPointsBlocked[index]}\n                    onClick={rowPointsBlocked[index] ? undefined : blockRowPoints(index, rowPointsBlocked)}\n                    circled={!rowPointsBlocked[index] && completedRows[index]}\n                    customColor={!rowPointsBlocked[index] && rowWasCompleted(index, lastTurn) ? COMPLETED : undefined}\n                />\n            ))}\n        </div>\n        <div className=\"again-row-points-2\">\n            {rowPoints2.map((num, index) => (\n                <Box\n                    key={index}\n                    content={num}\n                    circled={rowPointsBlocked[index] && completedRows[index]}\n                    customColor={rowPointsBlocked[index] && rowWasCompleted(index, lastTurn) ? COMPLETED : undefined}\n                />\n            ))}\n        </div>\n    </div>\n);\n","import React from 'react';\nimport { AgainStore } from './again-store';\nimport { Box } from './Box';\nimport { Util } from '../../util/util';\n\nconst blockColorPoints = (index: number, colorPointsBlocked: boolean[]) => () => {\n    AgainStore.set({ colorPointsBlocked: Util.nextArray(colorPointsBlocked, index, true) });\n};\n\nexport const ColorList = 'OBGRY'.split('');\n\ntype ColorPointsProps = { colorPointsBlocked: boolean[]; completedColors: boolean[] };\nexport const ColorPoints: React.FC<ColorPointsProps> = ({ colorPointsBlocked, completedColors }) => (\n    <div className={Util.classNames('again-color-points')}>\n        <div className=\"again-color-points-1\">\n            {ColorList.map((color: any, index) => (\n                <Box\n                    key={index}\n                    content={5}\n                    color={color}\n                    crossed={colorPointsBlocked[index]}\n                    onClick={blockColorPoints(index, colorPointsBlocked)}\n                    circled={!colorPointsBlocked[index] && completedColors[index]}\n                />\n            ))}\n        </div>\n        <div className=\"again-color-points-2\">\n            {ColorList.map((color: any, index) => (\n                <Box\n                    key={index}\n                    content={3}\n                    color={color}\n                    circled={colorPointsBlocked[index] && completedColors[index]}\n                />\n            ))}\n        </div>\n    </div>\n);\n","import React from 'react';\nimport { COLOR } from './types';\nimport { TurnState } from './again-store';\n\nconst VALUE_SVG = [\n    <text x=\"110\" y=\"420\" fontSize=\"500\" key=\"0\">\n        ?\n    </text>,\n    <circle cx=\"250\" cy=\"250\" r=\"50\" fill=\"black\" key=\"1\" />,\n    <g fill=\"black\" key=\"2\">\n        <circle cx=\"125\" cy=\"375\" r=\"50\" />\n        <circle cx=\"375\" cy=\"125\" r=\"50\" />\n    </g>,\n    <g fill=\"black\" key=\"3\">\n        <circle cx=\"125\" cy=\"375\" r=\"50\" />\n        <circle cx=\"250\" cy=\"250\" r=\"50\" />\n        <circle cx=\"375\" cy=\"125\" r=\"50\" />\n    </g>,\n    <g fill=\"black\" key=\"4\">\n        <circle cx=\"125\" cy=\"375\" r=\"50\" />\n        <circle cx=\"125\" cy=\"125\" r=\"50\" />\n        <circle cx=\"375\" cy=\"375\" r=\"50\" />\n        <circle cx=\"375\" cy=\"125\" r=\"50\" />\n    </g>,\n    <g fill=\"black\" key=\"5\">\n        <circle cx=\"125\" cy=\"375\" r=\"50\" />\n        <circle cx=\"125\" cy=\"125\" r=\"50\" />\n        <circle cx=\"250\" cy=\"250\" r=\"50\" />\n        <circle cx=\"375\" cy=\"375\" r=\"50\" />\n        <circle cx=\"375\" cy=\"125\" r=\"50\" />\n    </g>,\n];\n\nexport const Cube: React.FC<Partial<TurnState>> = ({ count, color }) => {\n    const innerValue = count !== undefined ? VALUE_SVG[count] : undefined;\n\n    return (\n        <div className=\"cube\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 500 500\">\n                <rect x=\"0\" y=\"0\" width=\"500\" height=\"500\" rx=\"100\" ry=\"100\" fill=\"white\" />\n                {innerValue || (\n                    <g stroke={(color && COLOR[color]) || 'black'} strokeWidth=\"100\">\n                        <line x1=\"80\" y1=\"80\" x2=\"420\" y2=\"420\" />\n                        <line x1=\"80\" y1=\"420\" x2=\"420\" y2=\"80\" />\n                    </g>\n                )}\n            </svg>\n        </div>\n    );\n};\n","import React from 'react';\nimport { Cube } from './Cube';\nimport { Color } from './types';\nimport { Icon } from '../../components/icons/icon';\nimport { Box } from './Box';\nimport { allLetters } from './Letters';\nimport { TurnState } from './again-store';\nimport { __ } from 'first-intl';\n\nexport const Abort = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 500 500\">\n        <g stroke=\"red\" strokeWidth=\"100\">\n            <line x1=\"80\" y1=\"80\" x2=\"420\" y2=\"420\" />\n            <line x1=\"80\" y1=\"420\" x2=\"420\" y2=\"80\" />\n        </g>\n    </svg>\n);\n\nexport const Finish = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 500 500\">\n        <g stroke=\"darkgreen\" strokeWidth=\"100\">\n            <line x1=\"70\" y1=\"180\" x2=\"262\" y2=\"347\" />\n            <line x1=\"220\" y1=\"320\" x2=\"420\" y2=\"80\" />\n        </g>\n    </svg>\n);\n\nexport const Turn = ({ count = 0, color, skipped }: Partial<TurnState>) =>\n    skipped ? (\n        <div>\n            <Icon.Ban className=\"cube\" />\n        </div>\n    ) : (\n        <div>\n            <Cube count={count} />\n            <Cube color={color} />\n        </div>\n    );\n\ntype TurnControlProps = { chosen?: { count: number; color: Color }; onFinish: () => void; onAbort: () => void };\nexport const TurnControl = ({ chosen, onFinish, onAbort }: TurnControlProps) => (\n    <div className=\"again-turn\">\n        {!chosen && (\n            <div className=\"skip\" onClick={onFinish}>\n                {__('AGAIN.skip')}\n            </div>\n        )}\n        {chosen && (\n            <div className=\"abort\" onClick={onAbort}>\n                <Abort />\n            </div>\n        )}\n        <div className=\"main-control\">{chosen ? <Turn count={chosen.count} color={chosen.color} /> : <Turn />}</div>\n        {chosen && (\n            <div className=\"finish\" onClick={onFinish}>\n                <Finish />\n            </div>\n        )}\n    </div>\n);\n\nconst Success: React.FC<{ turn: TurnState }> = ({ turn }) => {\n    const { completedColor, completedRows } = turn;\n    const completed = [];\n    if (completedColor) completed.push(<Cube color={completedColor} key=\"color\" />);\n    if (completedRows)\n        completedRows.forEach((isCompleted, index) => {\n            if (isCompleted) completed.push(<Box content={allLetters[index]} key={index} />);\n        });\n    return completed.length > 0 ? (\n        <>\n            <Icon.ArrowRight className=\"success-arrow\" />\n            {completed}\n        </>\n    ) : null;\n};\n\ntype TurnsProps = { turns: TurnState[] };\nexport const Turns = ({ turns }: TurnsProps) => (\n    <div className=\"again-turns\">\n        <h4>{__('AGAIN.madeTurns')}</h4>\n        {turns.map((turn, index) => (\n            <div className=\"again-turn\" key={index}>\n                {`${index + 1}) `}\n                <div className=\"turn-chosen\">\n                    <Turn count={turn.count} color={turn.color} skipped={turn.skipped} key={index} />\n                </div>\n                <div className=\"turn-success\">\n                    <Success turn={turn} />\n                </div>\n            </div>\n        ))}\n    </div>\n);\n","import React from 'react';\nimport { Turn } from './Turn';\nimport { TurnState } from './again-store';\nimport { __ } from 'first-intl';\n\ntype TotalProps = { totalPoints: number; lastTurn?: TurnState };\nexport const Total: React.FC<TotalProps> = ({ totalPoints, lastTurn }) => (\n    <div className=\"again-total\">\n        {__('AGAIN.points')}\n        <div className=\"again-total-points\">{totalPoints}</div>\n        {lastTurn && (\n            <div className=\"again-last-turn\">\n                {__('AGAIN.lastTurn')}\n                <Turn {...lastTurn} />\n            </div>\n        )}\n    </div>\n);\n","import React from 'react';\nimport { Color } from './types';\nimport { Cube } from './Cube';\nimport { __ } from 'first-intl';\n\ntype CompletionPopupProps = { color: Color; onClose: () => void };\n\nexport const CompletionPopup = ({ color, onClose }: CompletionPopupProps) => (\n    <div className=\"again-popup\" onClick={onClose}>\n        <div className=\"popup-overlay\" />\n        <div className=\"popup-content\">\n            {__('AGAIN.color.finished')}\n            <Cube color={color} />\n        </div>\n    </div>\n);\n","import React, { ReactNode, useEffect } from 'react';\nimport { Abort, Finish } from './Turn';\nimport { Icon } from '../../components/icons/icon';\nimport { AgainStore, SplashIconType, useAgainSub } from './again-store';\n\nconst renderIcon = (iconType: SplashIconType | null): ReactNode => {\n    if (!iconType) return null;\n    switch (iconType) {\n        case 'cancel':\n            return <Abort />;\n        case 'submit':\n            return <Finish />;\n        case 'undo':\n            return <Icon.Undo className=\"reflect\" />;\n        case 'skip':\n            return <Icon.Ban />;\n        default:\n            return null;\n    }\n};\n\nconst hide = () => AgainStore.setSplash(null);\n\nexport const ActionSplash: React.FC = () => {\n    const { icon } = useAgainSub(({ againSplash }) => ({ icon: againSplash }));\n\n    useEffect(\n        () => () => {\n            window.setTimeout(hide, 500);\n        },\n        [icon]\n    );\n\n    const iconView = renderIcon(icon);\n\n    if (!iconView) return null;\n\n    return (\n        <div className=\"again-splash\">\n            <div className=\"splash-overlay\" />\n            <div className=\"splash-content\">{iconView}</div>\n        </div>\n    );\n};\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { AgainStore, TurnState, uncrossedGrid, useAgainSub } from './again-store';\nimport { ControlBar } from './ControlBar';\nimport { Data } from './data';\nimport { Jokers } from './Jokers';\nimport { Grid } from './Grid';\nimport { Letters } from './Letters';\nimport { calculate, getClickable, getCompletedColors, getCompletedRows } from './again-logic';\nimport { RowPoints } from './RowPoints';\nimport { ColorList, ColorPoints } from './ColorPoints';\nimport { Total } from './Total';\nimport { TurnControl, Turns } from './Turn';\nimport { Util } from '../../util/util';\nimport { Color } from './types';\nimport { CompletionPopup } from './CompletionPopup';\nimport { ActionSplash } from './ActionSplash';\n\ntype Chosen = { color: Color; count: number };\nconst calculateTurn = (\n    chosen: Chosen | undefined,\n    lastCrossed: boolean[][],\n    crossed: boolean[][],\n    gridData: Data\n): TurnState => {\n    if (chosen) {\n        const completedRows = getCompletedRows(lastCrossed);\n        const nextCompletedRows = getCompletedRows(crossed);\n        const newCompletedRows = nextCompletedRows.map((row, index) => row && !completedRows[index]);\n\n        const nextCompletedColors = getCompletedColors(crossed, gridData);\n        const completedColors = getCompletedColors(lastCrossed, gridData);\n\n        const newCompletedColor = nextCompletedColors\n            .map((row, index) => row && !completedColors[index])\n            .findIndex(Boolean);\n        return {\n            ...chosen,\n            skipped: false,\n            completedRows: newCompletedRows,\n            completedColor: ColorList[newCompletedColor] as any,\n        };\n    }\n    return { skipped: true };\n};\n\ntype AgainStartedState = {\n    crossed: boolean[][];\n    turnCrossed: boolean[][];\n    chosen?: Chosen;\n    completedColor?: Color;\n};\n\nexport const AgainStarted: React.FC<{ gridData: Data }> = ({ gridData }) => {\n    const { again, againSplash } = useAgainSub(({ again, againSplash }) => ({ again, againSplash }));\n    const [state, setState] = useState<AgainStartedState>({\n        crossed: again.crossed,\n        turnCrossed: uncrossedGrid,\n    });\n    const { crossed, chosen, turnCrossed, completedColor } = state;\n\n    useEffect(() => {\n        setState((s) => ({ ...s, crossed: again.crossed }));\n    }, [again]);\n\n    const onCross = useCallback(\n        (boxIndex: number, rowIndex: number): void => {\n            const currentRow = crossed[rowIndex];\n            if (!currentRow[boxIndex]) {\n                const color = gridData.grid[rowIndex][boxIndex];\n                if (chosen) {\n                    if (color !== chosen.color) return; // many colors is not allowed\n                    const alreadyPicked = chosen.count;\n                    if (alreadyPicked > 4) return; // no more than 5 per color and turn\n                }\n                const updatedRow = Util.nextArray(currentRow, boxIndex, true);\n                const updatedTurnRow = Util.nextArray(turnCrossed[rowIndex], boxIndex, true);\n                const count = chosen ? chosen.count + 1 : 1;\n                setState((s) => ({\n                    ...s,\n                    crossed: Util.nextArray(crossed, rowIndex, updatedRow),\n                    turnCrossed: Util.nextArray(turnCrossed, rowIndex, updatedTurnRow),\n                    chosen: { color, count },\n                }));\n            }\n        },\n        [crossed, chosen, turnCrossed, gridData]\n    );\n\n    const onFinish = useCallback(() => {\n        if (!againSplash) {\n            const madeTurn = calculateTurn(chosen, again.crossed, crossed, gridData);\n\n            AgainStore.set({ crossed, turns: [...again.turns, madeTurn] });\n            AgainStore.setSplash(madeTurn.skipped ? 'skip' : 'submit');\n\n            setState((s) => ({\n                ...s,\n                turnCrossed: uncrossedGrid,\n                chosen: undefined,\n                completedColor: madeTurn.completedColor,\n            }));\n        }\n    }, [againSplash, chosen, again.crossed, again.turns, crossed, gridData]);\n\n    const onAbort = useCallback(() => {\n        if (!againSplash) {\n            AgainStore.setSplash('cancel');\n            setState({ turnCrossed: uncrossedGrid, chosen: undefined, crossed: again.crossed });\n        }\n    }, [againSplash, again]);\n\n    const onClosePopup = useCallback(() => setState((s) => ({ ...s, completedColor: undefined })), []);\n\n    const { rowPointsBlocked, colorPointsBlocked, takenJokers, turns } = again;\n    const { completedRows, completedColors, totalPoints } = calculate(again, gridData);\n    const { backgroundColor } = gridData;\n    const clickable = chosen ? getClickable(turnCrossed, false) : getClickable(crossed);\n    const lastTurn = turns[turns.length - 1];\n\n    return (\n        <div>\n            <ActionSplash />\n            {completedColor && !againSplash && <CompletionPopup color={completedColor} onClose={onClosePopup} />}\n            <ControlBar undo={AgainStore.undo} restart={AgainStore.restart}>\n                <div className=\"again\" style={{ backgroundColor }}>\n                    <TurnControl onFinish={onFinish} onAbort={onAbort} chosen={chosen} />\n                    <Grid\n                        gridData={gridData}\n                        crossed={crossed}\n                        clickable={clickable}\n                        onCross={onCross}\n                        lastTurn={lastTurn}\n                    />\n                    <Letters />\n                    <RowPoints rowPointsBlocked={rowPointsBlocked} completedRows={completedRows} lastTurn={lastTurn} />\n                    <Jokers takenJokers={takenJokers} />\n                    <ColorPoints colorPointsBlocked={colorPointsBlocked} completedColors={completedColors} />\n                    <Total totalPoints={totalPoints} lastTurn={lastTurn} />\n                    <Turns turns={turns} />\n                </div>\n            </ControlBar>\n        </div>\n    );\n};\n","import React from 'react';\nimport { __, Message } from 'first-intl';\n\nexport const DisplayError: React.FC<{ error: Message }> = ({ error }) => (\n    <span className=\"invalid-feedback\">{__(error)}</span>\n);\n","type Event = { preventDefault: Function; target: { value: any } };\ntype EventHandler = (event: Event) => void;\n\ntype CustomInputHandling = { preventDefault?: boolean };\n\nconst inputHandler = (\n    cb: (_: any) => unknown | void,\n    { preventDefault = true }: CustomInputHandling = {}\n): EventHandler => (event) => {\n    if (preventDefault) event.preventDefault();\n    const original = event.target.value;\n    cb(original);\n};\n\nconst preventDefault = (event: any) => event.preventDefault();\n\nexport const EventUtil = { inputHandler, preventDefault };\n","import React, { ReactElement } from 'react';\nimport { __, __string, Message, StringMessage } from 'first-intl';\nimport { DisplayError } from './DisplayError';\nimport { ErrorMessage, iField } from 'morfi';\nimport { Util } from '../../util/util';\nimport { EventUtil } from '../../util/event-util';\n\nexport type SelectOption<T> = { label: StringMessage | string; value: T };\n\ntype SelectHandler<T> = (value: T) => void;\n\ntype CommonSelectProps<T> = {\n    name?: string;\n    label?: Message;\n    className?: string;\n    options: ReadonlyArray<SelectOption<T>>;\n    disabled?: boolean;\n    serialize?: (value: T) => string;\n};\n\ntype SelectProps<T> = {\n    required?: boolean;\n    onChange?: SelectHandler<T>;\n    onBlur?: SelectHandler<T>;\n    value: T;\n    error?: ErrorMessage;\n} & CommonSelectProps<T>;\n\n/**\n * ATTENTION: Since react v16.6 you have to supply strings or numbers within <option> tags.\n *            So you should not use any placeholders inside the messages you use as\n *            label for the select options.\n */\nconst Option: React.FC<{ label: StringMessage; value: string }> = ({ label, value }) => (\n    <option value={value}>{__string(label)}</option>\n);\n\ntype GetOptionValues = <T>(options: ReadonlyArray<SelectOption<T>>, serialize?: (value: T) => string) => string[];\nconst getOptionValues: GetOptionValues = (options, serialize) => {\n    const values = options.map((o) => o.value);\n    return serialize\n        ? values.map(serialize)\n        : values.map((v, i) => (v === undefined ? '' : typeof v === 'string' ? v : String(i)));\n};\n\nexport const Select: <T>(p: SelectProps<T>) => ReactElement = ({\n    value,\n    serialize,\n    label,\n    error,\n    required,\n    className,\n    onChange,\n    onBlur,\n    options,\n    disabled,\n    name,\n}) => {\n    const optionValues = getOptionValues(options, serialize);\n    const handlerRemapped = (handler?: typeof onChange) => (optionValue: string) =>\n        handler && handler(options[optionValues.indexOf(optionValue)].value);\n    const currentValue = options.find((option) => option.value === value);\n    const currentIndex = currentValue ? options.indexOf(currentValue) : 0;\n\n    return (\n        <div\n            className={Util.classNames(\n                className,\n                required && 'required',\n                !value && 'unselected',\n                error && 'has-error'\n            )}>\n            {label && <label>{__(label)}</label>}\n            <select\n                className=\"custom-select\"\n                name={name}\n                disabled={disabled}\n                onChange={EventUtil.inputHandler(handlerRemapped(onChange))}\n                onBlur={EventUtil.inputHandler(handlerRemapped(onBlur))}\n                value={optionValues[currentIndex]}>\n                {options.map((option, index: number) => (\n                    <Option label={option.label} value={optionValues[index]} key={index} />\n                ))}\n            </select>\n            {error && <DisplayError error={error} />}\n        </div>\n    );\n};\n\ntype FormSelectProps<T> = { Field: iField<T> } & CommonSelectProps<T>;\n\nexport const FormSelect: <T>(p: FormSelectProps<T>) => React.ReactElement<FormSelectProps<T>> = ({\n    Field,\n    className = 'form-control',\n    ...rest\n}) => (\n    <Field>\n        {({ onChange, onBlur, required, value, error }) => (\n            <Select {...{ value, error, required, onBlur, onChange, className }} {...rest} />\n        )}\n    </Field>\n);\n","import React from 'react';\nimport { DataOption, DataSelectionOptions } from './data';\nimport { AgainStore } from './again-store';\nimport { Select, SelectOption } from '../../components/form/select';\n\nconst placeHolderOption = { label: 'AGAIN.color.choose', value: undefined };\nconst randomOption = { label: 'AGAIN.color.random', value: 'random' as DataOption };\nconst onSelect = (option?: DataOption) => option && AgainStore.chooseData(option);\n\nconst OptionsWithRandom: SelectOption<DataOption | undefined>[] = [\n    placeHolderOption,\n    ...DataSelectionOptions,\n    randomOption,\n];\n\nexport const DataSelection: React.FC = () => (\n    <div className=\"again-selection\">\n        <Select options={OptionsWithRandom} onChange={onSelect} value={undefined} />\n    </div>\n);\n","import React, { Component, ReactNode } from 'react';\nimport { __ } from 'first-intl';\n\ntype ErrorBoundaryProps = { fix: () => void; children: ReactNode };\ntype ErrorBoundaryState = { hasError: boolean };\n\nexport class ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    state: ErrorBoundaryState = { hasError: false };\n\n    static getDerivedStateFromError = (): ErrorBoundaryState => ({ hasError: true });\n\n    render() {\n        const { hasError } = this.state;\n        const { children, fix } = this.props;\n\n        if (hasError) {\n            return (\n                <div className=\"game-error\">\n                    <h2>{__('error.boundary.unexpected')}</h2>\n                    <p>{__('error.boundary.sorry')}</p>\n                    <button type=\"button\" onClick={fix}>\n                        {__('error.boundary.fix')}\n                    </button>\n                </div>\n            );\n        }\n        return children;\n    }\n}\n","import React from 'react';\nimport { AgainStarted } from './AgainStarted';\nimport { DataSelection } from './DataSelection';\nimport { ErrorBoundary } from '../../components/ErrorBoundary';\nimport { AgainStore, useAgainSub } from './again-store';\n\nexport const Again: React.FC = () => {\n    const { againData } = useAgainSub(({ againData }) => ({ againData }));\n    if (!againData) return <DataSelection />;\n    return (\n        <ErrorBoundary fix={AgainStore.restart}>\n            <AgainStarted gridData={againData} />\n        </ErrorBoundary>\n    );\n};\n","import React, { Component } from 'react';\nimport { Globals } from '../globals';\n\nconst missions = [\n    {\n        title: 'Save the world',\n        text:\n            'Did you never think about saving the world? You can do it. Just follow the given instructions...' +\n            'You need to modify your attitude. You have to become more optimistic and you should... bla blub foo bar',\n    },\n    {\n        title: 'Marry her',\n        text: 'It is finally the time. Get the ring. Make the first step and perform your show to win her heart <3',\n    },\n    {\n        title: 'Punch a bear',\n        text:\n            \"Yes. I'm serious. You should punch some big bear into his stomach. But possible you should first \" +\n            'think about a good plan to get away again - as fast as possible :{',\n    },\n];\n\nexport class MissionControl extends Component<{}, { processed: number; selected: number }> {\n    state = { processed: 0, selected: 0 };\n    interval = 0;\n\n    processNextLetter = () => {\n        const current = this.state.processed;\n        if (current === missions[this.state.selected].text.length) Globals.window().clearInterval(this.interval);\n        this.setState({ processed: current + 1 });\n    };\n\n    componentDidMount() {\n        this.runLetters();\n    }\n\n    runLetters = () => (this.interval = Globals.window().setInterval(this.processNextLetter, 50));\n\n    select = (mission: number) => () => {\n        Globals.window().clearInterval(this.interval);\n        this.setState({ processed: 0, selected: mission });\n        this.runLetters();\n    };\n\n    componentWillUnmount() {\n        Globals.window().clearInterval(this.interval);\n    }\n\n    render() {\n        return (\n            <div className=\"mission-control\">\n                <div className=\"mission-content\">\n                    <div className=\"mission-list\">\n                        <ul>\n                            {missions.map((m, i) => {\n                                const isSelected = this.state.selected === i;\n                                const className = isSelected ? 'selected' : undefined;\n                                const handler = isSelected ? undefined : this.select(i);\n                                return (\n                                    <li key={i} onClick={handler} className={className}>\n                                        {m.title}\n                                    </li>\n                                );\n                            })}\n                        </ul>\n                    </div>\n                    <div className=\"mission-desc\">\n                        {missions[this.state.selected].text.substring(0, this.state.processed)}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { FocusEventHandler } from 'react';\nimport { ErrorMessage, iField } from 'morfi';\nimport { __, __string, Message, StringMessage } from 'first-intl';\nimport { DisplayError } from './DisplayError';\nimport { EventUtil } from '../../util/event-util';\nimport { Util } from '../../util/util';\n\nexport type AbstractRef<T> = { current: null | T };\nexport type InputRef = AbstractRef<HTMLInputElement>;\n\nexport type InputType = 'text' | 'number' | 'password' | 'email';\n\ntype InputHandler = (value: string) => void;\n\ntype CommonInputProps = {\n    label?: Message;\n    placeholder?: StringMessage;\n    className?: string;\n    inputClassName?: string;\n    onFocus?: FocusEventHandler<HTMLInputElement>;\n    autoFocus?: boolean;\n    disabled?: boolean;\n    type?: InputType;\n    trim?: boolean;\n    name?: string;\n    forwardedRef?: InputRef;\n    readOnly?: boolean;\n};\n\ntype InputProps = {\n    required?: boolean;\n    onChange?: InputHandler;\n    onBlur?: InputHandler;\n    value: string;\n    error?: ErrorMessage;\n} & CommonInputProps;\n\nconst transformHandler = (handler: InputHandler, trim?: boolean): InputHandler => (value: string) =>\n    handler(trim ? value && value.trim() : value);\n\nexport const Input: React.FC<InputProps> = ({\n    value,\n    label,\n    placeholder,\n    error,\n    required,\n    className,\n    inputClassName,\n    onChange,\n    onBlur,\n    onFocus,\n    autoFocus,\n    disabled,\n    type = 'text',\n    trim,\n    name,\n    forwardedRef,\n    readOnly,\n}) => (\n    <div className={Util.classNames(className, required && 'required')}>\n        {label && <label>{__(label)}</label>}\n        <input\n            name={name}\n            className={Util.classNames(inputClassName, error && 'is-invalid')}\n            onChange={onChange && EventUtil.inputHandler(transformHandler(onChange, trim))}\n            onBlur={onBlur && EventUtil.inputHandler(transformHandler(onBlur, trim))}\n            onFocus={onFocus}\n            placeholder={placeholder && __string(placeholder)}\n            ref={forwardedRef}\n            readOnly={readOnly}\n            {...{ value, autoFocus, disabled, type }}\n        />\n        {error && <DisplayError error={error} />}\n    </div>\n);\n\ntype FormInputProps = { Field: iField<string> } & CommonInputProps;\n\nexport const FormInput = ({ Field, className = 'form-control', ...rest }: FormInputProps) => (\n    <Field>\n        {({ onChange, onBlur, required, value, error }) => (\n            <Input {...{ required, onBlur, onChange, className, value, error }} {...rest} />\n        )}\n    </Field>\n);\n","import { createStore } from 'react-use-sub';\nimport { GameState, Player } from './players-store';\n\ntype SpadeIsTrumpState = { gameState: GameState; players: Player[] };\n\nconst [useSpadeIsTrumpSub, SpadeIsTrumpStore] = createStore<SpadeIsTrumpState>({ gameState: [], players: [] });\n\nexport { useSpadeIsTrumpSub, SpadeIsTrumpStore };\n","import { Persistore } from 'persistore';\nimport { SpadeIsTrumpStore } from './spadeIsTrump-store';\nimport { GameState } from './players-store';\n\nconst _key = 'SIT.history';\n\nconst getHistory = (): GameState[] => {\n    try {\n        const players = Persistore.get(_key);\n        return JSON.parse(players as any);\n    } catch (e) {\n        return [];\n    }\n};\n\nconst _set = (gameState: GameState): void => {\n    const history = getHistory();\n    history.unshift(gameState);\n    if (history.length > 10) history.pop();\n    Persistore.set(_key, JSON.stringify(history));\n};\n\nconst set = (update: GameState | ((gameState: GameState) => GameState)) => {\n    if (typeof update === 'function') {\n        SpadeIsTrumpStore.set(({ gameState }) => ({ gameState: update(gameState) }));\n    } else {\n        SpadeIsTrumpStore.set({ gameState: update });\n    }\n    _set(SpadeIsTrumpStore.get().gameState);\n};\n\nconst reset = () => HistoryStore.set([]);\n\nconst undo = (): void => {\n    const history = getHistory();\n    if (history.length > 1) history.shift();\n    Persistore.set(_key, JSON.stringify(history));\n    SpadeIsTrumpStore.set({ gameState: history[0] });\n};\n\nconst _clear = (state: GameState): GameState =>\n    state.map((player) => ({\n        ...player,\n        total: 0,\n        points: player.points.map(() => ({})),\n    }));\n\nconst rearrange = () =>\n    set((state) => {\n        const cleared = _clear(state);\n        return [...cleared.slice(1), cleared[0]];\n    });\n\nconst get = (): GameState => getHistory()[0] || [];\n\nSpadeIsTrumpStore.set({ gameState: get() });\n\nexport const HistoryStore = { set, get, undo, reset, rearrange };\n","import { PointsState } from './Points';\nimport { Persistore } from 'persistore';\nimport { SpadeIsTrumpStore } from './spadeIsTrump-store';\nimport { Util } from '../../util/util';\n\nconst _key = 'SIT.players';\n\nexport type Player = { uuid: string; name: string; shortcut?: string };\nexport type PlayerState = { player: Player; points: PointsState[]; total: number };\nexport type GameState = PlayerState[];\n\nconst _get = (): Player[] => {\n    try {\n        const players = Persistore.get(_key);\n        return JSON.parse(players as any);\n    } catch (e) {\n        return [];\n    }\n};\n\nconst _set = (next: Player[]): void => Persistore.set(_key, JSON.stringify(next));\n\nconst set = (update: Player[] | ((players: Player[]) => Player[])) => {\n    if (typeof update === 'function') {\n        SpadeIsTrumpStore.set(({ players }) => ({ players: update(players) }));\n    } else {\n        SpadeIsTrumpStore.set({ players: update });\n    }\n    _set(SpadeIsTrumpStore.get().players);\n};\n\nconst add = (name: string, shortcut?: string) => set((players) => [{ name, shortcut, uuid: Util.uuid() }, ...players]);\n\nconst update = (update: Player): void =>\n    set((players) => {\n        const index = players.findIndex((p) => p.uuid === update.uuid);\n        return index === -1 ? players : Util.nextArray(players, index, update);\n    });\n\nconst remove = (player: Player): void => set((players) => players.filter((p) => p.uuid !== player.uuid));\n\nconst moveTo = (before: number, after: number) =>\n    set((players) => {\n        const next = players.filter((_, index) => index !== before);\n        next.splice(after, 0, players[before]);\n        return next;\n    });\n\nconst moveUp = (current: number) => (current > 0 ? moveTo(current, current - 1) : undefined);\nconst moveDown = (current: number) => moveTo(current, current + 1);\n\nSpadeIsTrumpStore.set({ players: _get() });\n\nexport const PlayerStore = { set, add, update, remove, moveTo, moveDown, moveUp };\n","export enum Color {\n    YELLOW = '#b18e05',\n    BLUE = '#1313b1',\n    BLACK = '#000',\n    GREEN = '#054800',\n    ORANGE = '#b85409',\n    PURPLE = '#390257',\n}\n\nexport const CROSS = '✘';\n\nexport enum BONUS {\n    FOX = 'FOX',\n    PLUS_1 = 'PLUS_1',\n    REFRESH = 'REFRESH',\n    YELLOW = 'YELLOW',\n    YELLOW_10 = 'YELLOW_10',\n    YELLOW_14 = 'YELLOW_14',\n    YELLOW_16 = 'YELLOW_16',\n    YELLOW_20 = 'YELLOW_20',\n    BLUE = 'BLUE',\n    GREEN = 'GREEN',\n    ORANGE_4 = 'ORANGE_4',\n    ORANGE_5 = 'ORANGE_5',\n    ORANGE_6 = 'ORANGE_6',\n    PURPLE = 'PURPLE',\n    ULTIMATE = 'ULTIMATE',\n}\n\nconst orangeFactors = [1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 3];\n\nexport const Data = {\n    [Color.YELLOW]: {\n        contents: [3, 6, 5, CROSS, 2, 1, CROSS, 5, 1, CROSS, 2, 4, CROSS, 3, 4, 6],\n        rowBonus: [BONUS.BLUE, BONUS.ORANGE_4, BONUS.GREEN, BONUS.FOX],\n        columnBonus: [BONUS.YELLOW_10, BONUS.YELLOW_14, BONUS.YELLOW_16, BONUS.YELLOW_20, BONUS.PLUS_1],\n    },\n    [Color.BLUE]: {\n        contents: [CROSS, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],\n        points: [0, 1, 2, 4, 7, 11, 16, 22, 29, 37, 46, 56],\n        rowBonus: [BONUS.ORANGE_5, BONUS.YELLOW, BONUS.FOX],\n        columnBonus: [BONUS.REFRESH, BONUS.GREEN, BONUS.PURPLE, BONUS.PLUS_1],\n    },\n    [Color.GREEN]: {\n        contents: [1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 6],\n        points: [1, 3, 6, 10, 15, 21, 28, 36, 45, 55, 66],\n        bonus: [\n            undefined,\n            undefined,\n            undefined,\n            BONUS.PLUS_1,\n            undefined,\n            BONUS.BLUE,\n            BONUS.FOX,\n            undefined,\n            BONUS.PURPLE,\n            BONUS.REFRESH,\n            undefined,\n        ],\n    },\n    [Color.ORANGE]: {\n        factors: orangeFactors,\n        contents: orangeFactors.map((f) => (f > 1 ? `x${f}` : '')),\n        bonus: [\n            undefined,\n            undefined,\n            BONUS.REFRESH,\n            undefined,\n            BONUS.YELLOW,\n            BONUS.PLUS_1,\n            undefined,\n            BONUS.FOX,\n            undefined,\n            BONUS.PURPLE,\n            undefined,\n        ],\n    },\n    [Color.PURPLE]: {\n        contents: ['', '', '', '', '', '', '', '', '', '', ''],\n        bonus: [\n            undefined,\n            undefined,\n            BONUS.REFRESH,\n            BONUS.BLUE,\n            BONUS.PLUS_1,\n            BONUS.YELLOW,\n            BONUS.FOX,\n            BONUS.REFRESH,\n            BONUS.GREEN,\n            BONUS.ORANGE_6,\n            BONUS.PLUS_1,\n        ],\n    },\n};\n","import React, { useCallback, useState } from 'react';\nimport { Morfi, FormData } from 'morfi';\nimport { FormInput } from '../../components/form/input';\nimport { __ } from 'first-intl';\nimport { PlayerStore } from './players-store';\n\ntype AddPlayerFormValues = { name: string; shortcut: string };\nconst initialValues: AddPlayerFormValues = { name: '', shortcut: '' };\nconst { Form, Fields } = Morfi.create<AddPlayerFormValues>(initialValues);\nconst initialData: FormData<AddPlayerFormValues> = { values: initialValues, errors: {} };\nconst validation = { name: { onChange: (v?: string) => (!v ? { id: 'SIT.addPlayer.name.required' } : undefined) } };\n\nexport const AddPlayerForm: React.FC<{ close: () => void }> = ({ close }) => {\n    const [data, setData] = useState(initialData);\n\n    const onSubmit = useCallback(\n        ({ name, shortcut }) => {\n            PlayerStore.add(name, shortcut);\n            close();\n        },\n        [close]\n    );\n\n    return (\n        <Form\n            className=\"startup add-players\"\n            onSubmit={onSubmit}\n            validation={validation}\n            data={data}\n            onChange={setData}>\n            <FormInput autoFocus Field={Fields.name} label=\"SIT.addPlayer.name\" />\n            <FormInput Field={Fields.shortcut} label=\"SIT.addPlayer.shortcut\" />\n            <button type=\"submit\">{__('SIT.addPlayer.submit')}</button>\n        </Form>\n    );\n};\n\nexport const AddPlayer: React.FC = () => {\n    const [focus, setFocus] = useState(false);\n\n    const onClick = useCallback(() => setFocus(true), []);\n    const close = useCallback(() => setFocus(false), []);\n\n    return focus ? (\n        <AddPlayerForm close={close} />\n    ) : (\n        <button className=\"add-player\" onClick={onClick} type=\"submit\">\n            {__('SIT.addPlayer')}\n        </button>\n    );\n};\n","import React, { useCallback } from 'react';\nimport { Player, PlayerStore } from './players-store';\nimport { Icon } from '../../components/icons/icon';\n\nexport const PlayerRow: React.FC<{ player: Player; pos: number }> = ({ player, pos }) => {\n    const { name, shortcut } = player;\n\n    const moveUp = useCallback(() => PlayerStore.moveUp(pos), [pos]);\n    const moveDown = useCallback(() => PlayerStore.moveDown(pos), [pos]);\n    const remove = useCallback(() => PlayerStore.remove(player), [player]);\n\n    return (\n        <tr className=\"player-row\">\n            <td className=\"player-pos\">\n                <span className=\"player-move-down\" onClick={moveDown}>\n                    <Icon.ArrowRight />\n                </span>\n                <span className=\"player-current-pos\">{pos + 1}</span>\n                <span className=\"player-move-up\" onClick={moveUp}>\n                    <Icon.ArrowRight />\n                </span>\n            </td>\n            <td className=\"player-name\">{name}</td>\n            <td className=\"player-shortcut\">{shortcut}</td>\n            <td className=\"player-actions\">\n                <span className=\"player-remove\" onClick={remove}>\n                    <Icon.Trash />\n                </span>\n            </td>\n        </tr>\n    );\n};\n","import React, { useState } from 'react';\nimport { Morfi, FormData } from 'morfi';\nimport { FormInput } from '../../components/form/input';\nimport { __ } from 'first-intl';\nimport { Util } from '../../util/util';\nimport { Player, PlayerState } from './players-store';\nimport { HistoryStore } from './history-store';\nimport { SpadeIsTrumpStore, useSpadeIsTrumpSub } from './spadeIsTrump-store';\nimport { AddPlayer } from './AddPlayer';\nimport { PlayerRow } from './PlayerRow';\n\nconst newPlayer = (player: Player, playerIdx: number, rounds: number): PlayerState => ({\n    player,\n    points: Util.array(rounds).map(() => ({})),\n    total: 0,\n});\n\nconst playersFromStartup = (startupInfo: StartupInfo): PlayerState[] => {\n    const rounds = Math.floor(startupInfo.numberOfCards / startupInfo.numberOfPlayers);\n    return SpadeIsTrumpStore.get()\n        .players.slice(0, startupInfo.numberOfPlayers)\n        .map((player, index) => newPlayer(player, index, rounds));\n};\n\nconst onChangeStartupInfo = (startupInfo: StartupInfo) => HistoryStore.set(playersFromStartup(startupInfo));\n\nexport type StartupInfo = { numberOfCards: number; numberOfPlayers: number };\nexport type StartupInfoValues = { numberOfCards: string; numberOfPlayers: string };\nconst StartupInfoValidations = {\n    numberOfCards: {\n        onChange: (v?: string) => {\n            const num = Number(v);\n            return isNaN(num) || num < 32 ? { id: 'SIT.startup.cartCount.invalid' } : undefined;\n        },\n    },\n    numberOfPlayers: {\n        onChange: (v?: string) => {\n            const num = Number(v);\n            if (isNaN(num) || num < 2 || num > 10) return { id: 'SIT.startup.playerCount.invalid' };\n            if (num > SpadeIsTrumpStore.get().players.length)\n                return { id: 'SIT.startup.playerCount.exceedsRegistered' };\n        },\n    },\n};\n\nconst submit = ({ numberOfCards, numberOfPlayers }: StartupInfoValues) => {\n    onChangeStartupInfo({ numberOfCards: +numberOfCards, numberOfPlayers: +numberOfPlayers });\n};\n\nconst initialValues: StartupInfoValues = { numberOfCards: '52', numberOfPlayers: '' };\nconst { Form, Fields } = Morfi.create<StartupInfoValues>(initialValues);\n\nexport const StartupInfoPicker = () => {\n    const { players } = useSpadeIsTrumpSub(({ players }) => ({ players }));\n\n    const [data, setData] = useState<FormData<StartupInfoValues>>({ values: initialValues, errors: {} });\n\n    return (\n        <div className=\"spade-is-trump\">\n            <div className=\"configs\">\n                <Form\n                    className=\"startup\"\n                    onSubmit={submit}\n                    validation={StartupInfoValidations}\n                    data={data}\n                    onChange={setData}>\n                    <FormInput Field={Fields.numberOfCards} label=\"SIT.startup.cardCount\" type=\"number\" />\n                    <FormInput Field={Fields.numberOfPlayers} label=\"SIT.startup.playerCount\" type=\"number\" />\n                    <button type=\"submit\">{__('SIT.startup.start')}</button>\n                </Form>\n            </div>\n            <div className=\"players\">\n                <div className=\"registered-players\">\n                    <table>\n                        <tbody>\n                            {players.map((player, index) => (\n                                <PlayerRow player={player} pos={index} key={player.uuid} />\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n                <AddPlayer />\n            </div>\n        </div>\n    );\n};\n","import React, { useState, useCallback, useEffect, FormEvent } from 'react';\nimport { Input } from '../../components/form/input';\n\nexport type PointsState = { tip?: number; checked?: boolean; earned?: number };\n\ntype PointsComponentProps = {\n    points: PointsState;\n    onChange: (player: PointsState) => void;\n    limit: number;\n    checkable?: boolean;\n    active: boolean;\n    activeRound: boolean;\n};\n\nconst parseNum = (v: string): number | undefined => {\n    if (v && v.trim()) {\n        const parsed = Number(v.trim());\n        if (!isNaN(parsed) && parsed >= 0) {\n            return parsed;\n        }\n    }\n};\n\nconst _tipToString = (tip?: number) => (tip !== undefined ? String(tip) : '');\n\nexport const Points = ({ points, activeRound, limit, onChange, checkable, active }: PointsComponentProps) => {\n    const [focus, setFocus] = useState(false);\n    const [currentTip, setCurrentTip] = useState<string>(() => _tipToString(points.tip));\n\n    const onFocus = useCallback(() => {\n        activeRound && setFocus(true);\n    }, [activeRound]);\n\n    const onChangeTip = useCallback(\n        (tip: string) => {\n            if (activeRound) {\n                const num = parseNum(tip);\n                if (num === undefined) {\n                    setCurrentTip('');\n                } else if (num >= 0 && num <= limit) {\n                    setCurrentTip(tip);\n                }\n            }\n        },\n        [activeRound, limit]\n    );\n\n    const onBlur = useCallback(\n        (tip: string) => {\n            if (activeRound) {\n                const num = parseNum(tip);\n                if (num !== undefined) {\n                    onChange({ ...points, tip: num });\n                }\n                setFocus(false);\n            }\n        },\n        [activeRound, points, onChange]\n    );\n\n    const onSubmit = useCallback(\n        (event: FormEvent) => {\n            event.preventDefault();\n            onBlur(currentTip);\n        },\n        [onBlur, currentTip]\n    );\n\n    const setEarned = useCallback(\n        (earned: number) => {\n            if (!activeRound || points.earned) return;\n            onChange({ ...points, earned });\n        },\n        [activeRound, points, onChange]\n    );\n\n    const onSuccess = useCallback(() => {\n        setEarned(Number(points.tip) + 10);\n    }, [setEarned, points]);\n\n    const onFailed = useCallback(() => {\n        setEarned(Number(points.tip) * -1);\n    }, [setEarned, points]);\n\n    useEffect(() => {\n        setCurrentTip(_tipToString(points.tip));\n    }, [points.tip]);\n\n    if (points.earned !== undefined) {\n        return points.earned > 0 ? (\n            <td className=\"points points-earned\">{points.earned}</td>\n        ) : (\n            <td className=\"points points-lost\">{points.earned}</td>\n        );\n    }\n\n    if (!focus) {\n        const clazzName = activeRound && active ? 'points active' : 'points';\n        const readyToPlay = activeRound && checkable;\n        return (\n            <td onClick={readyToPlay ? undefined : onFocus} className={clazzName}>\n                <div onClick={readyToPlay ? onFocus : undefined} className=\"points-tip\">\n                    {currentTip}\n                </div>\n                {readyToPlay && (\n                    <>\n                        <button className=\"points-success\" type=\"button\" onClick={onSuccess}>\n                            +\n                        </button>\n                        <button className=\"points-failed\" type=\"button\" onClick={onFailed}>\n                            -\n                        </button>\n                    </>\n                )}\n            </td>\n        );\n    }\n    return (\n        <td>\n            <form onSubmit={onSubmit}>\n                <Input\n                    className=\"points-input\"\n                    value={currentTip}\n                    autoFocus\n                    onChange={onChangeTip}\n                    onBlur={onBlur}\n                    type=\"number\"\n                />\n            </form>\n        </td>\n    );\n};\n","import React, { useCallback, useState } from 'react';\n\nexport type ClickableDescriptionProps = { desc: string; short?: string; className?: string; tag?: string };\n\nexport const ClickableDescription: React.FC<ClickableDescriptionProps> = ({ desc, short, className, tag = 'div' }) => {\n    const [showName, setShowName] = useState(false);\n    const displayed = showName ? desc : short || desc;\n\n    const onClick = useCallback(() => {\n        if (short) {\n            setShowName(true);\n            window.setTimeout(() => setShowName(false), 3000);\n        }\n    }, [short]);\n\n    return React.createElement(tag, { onClick, className }, displayed);\n};\n","import React from 'react';\nimport { __string } from 'first-intl';\nimport { Util } from '../../util/util';\nimport { Icon } from '../../components/icons/icon';\nimport { Points, PointsState } from './Points';\nimport { HistoryStore } from './history-store';\nimport { useSpadeIsTrumpSub } from './spadeIsTrump-store';\nimport { GameState, PlayerState } from './players-store';\nimport { ClickableDescription } from './ClickableDescription';\n\nconst getActiveRound = (gameState: GameState, rounds: number): number | undefined => {\n    const earnings = Util.array(rounds).map(() => 0);\n    for (let i = 0; i < gameState.length; i++) {\n        const points: PointsState[] = gameState[i].points;\n        for (let j = 0; j < points.length; j++) {\n            if (points[j].earned !== undefined) earnings[j]++;\n        }\n    }\n    const round = earnings.findIndex((num) => num < gameState.length);\n    return round === -1 ? undefined : round;\n};\n\nconst activeRoundReady = (gameState: GameState, activeRound?: number): boolean => {\n    if (activeRound === undefined) return true;\n    for (let i = 0; i < gameState.length; i++) {\n        const points = gameState[i].points[activeRound];\n        if (points.tip === undefined) return false;\n    }\n    return true;\n};\n\nconst roundHasError = (gameState: GameState, round: number, cards: number): boolean => {\n    const earnings = gameState.map(\n        (player) => player.points.map((points) => points.earned).filter((_, index) => index === round)[0]\n    );\n    if (earnings.filter((v) => v === undefined).length) return false; // only display warning if all earnings are known\n    const positives = earnings.map((e: any) => (e > 10 ? e - 10 : undefined)).reduce((r: number, v = 0) => r + v, 0);\n    return Boolean(positives > cards || (positives === cards && earnings.filter((v) => v === 0).length));\n};\n\nconst onPlayerChange = (player: PlayerState, playerIdx: number) =>\n    HistoryStore.set((gameState) => {\n        const next = [...gameState];\n        next[playerIdx] = player;\n        return next;\n    });\n\nconst onPointsChange = (player: PlayerState, playerIdx: number, roundIdx: number) => (points: PointsState) => {\n    const next = [...player.points];\n    next[roundIdx] = points;\n    onPlayerChange({ ...player, points: next }, playerIdx);\n};\n\nexport const SpadeIsTrumpStarted: React.FC = () => {\n    const { gameState } = useSpadeIsTrumpSub(({ gameState }) => ({ gameState }));\n    const rounds = gameState[0].points.length;\n    const activeRound = getActiveRound(gameState, rounds);\n    const earnedPoints = gameState.map((player) => player.points.reduce((res, val) => res + (val.earned || 0), 0));\n\n    return (\n        <table>\n            <thead>\n                <tr>\n                    <ClickableDescription desc={__string('SIT.cardCount')} short=\"#\" tag=\"th\" className=\"card-number\" />\n                    {gameState.map(({ player: { name, shortcut } }, playerIdx) => (\n                        <ClickableDescription desc={name} short={shortcut} key={playerIdx} tag=\"th\" />\n                    ))}\n                </tr>\n            </thead>\n            <tbody>\n                {Util.array(rounds).map((_, roundIdx: number) => {\n                    const isActiveRound = activeRound === roundIdx;\n                    const activeReady = activeRoundReady(gameState, activeRound);\n                    const cards = rounds - roundIdx;\n                    const hasError = roundHasError(gameState, roundIdx, cards);\n                    return (\n                        <tr key={cards} className={activeRound && roundIdx > activeRound ? 'disabled' : undefined}>\n                            <td>\n                                {cards}\n                                {hasError && (\n                                    <span className=\"error-round\">\n                                        <Icon.Alert />\n                                    </span>\n                                )}\n                            </td>\n                            {gameState.map((player, playerIdx) => (\n                                <Points\n                                    key={playerIdx}\n                                    points={player.points[roundIdx]}\n                                    limit={cards}\n                                    checkable={activeReady}\n                                    onChange={onPointsChange(player, playerIdx, roundIdx)}\n                                    active={roundIdx % gameState.length === playerIdx}\n                                    activeRound={isActiveRound}\n                                />\n                            ))}\n                        </tr>\n                    );\n                })}\n                <tr className=\"sum\">\n                    <ClickableDescription desc={__string('SIT.points')} short=\"∑\" tag=\"td\" />\n                    {earnedPoints.map((earned, earnedIdx) => (\n                        <td key={earnedIdx}>\n                            {earned}\n                            {activeRound === undefined && earned === Math.max(...earnedPoints) && (\n                                <Icon.Crown className=\"winner\" />\n                            )}\n                        </td>\n                    ))}\n                </tr>\n            </tbody>\n        </table>\n    );\n};\n","import React from 'react';\nimport { Icon } from '../../components/icons/icon';\nimport { __ } from 'first-intl';\nimport { HistoryStore } from './history-store';\n\nexport const NavBar: React.FC<{ started: boolean }> = ({ started }) => (\n    <nav>\n        <button onClick={HistoryStore.undo} className=\"undo\">\n            <Icon.Undo />\n        </button>\n        {started && (\n            <button onClick={HistoryStore.reset} className=\"restart\">\n                {__('APP.restart')}\n            </button>\n        )}\n        {started && (\n            <button onClick={HistoryStore.rearrange} className=\"rearrange\">\n                <Icon.Refresh />\n            </button>\n        )}\n    </nav>\n);\n","import React from 'react';\nimport { StartupInfoPicker } from './StartupInfoPicker';\nimport { SpadeIsTrumpStarted } from './SpadeIsTrumpStarted';\nimport { NavBar } from './NavBar';\nimport { ErrorBoundary } from '../../components/ErrorBoundary';\nimport { HistoryStore } from './history-store';\nimport { useSpadeIsTrumpSub } from './spadeIsTrump-store';\n\nexport const SpadeIsTrump: React.FC = () => {\n    const { notStarted } = useSpadeIsTrumpSub(({ gameState }) => ({ notStarted: !gameState.length }));\n\n    return (\n        <ErrorBoundary fix={HistoryStore.reset}>\n            <div className=\"spade-is-trump\">\n                <NavBar started={!notStarted} />\n                {notStarted ? <StartupInfoPicker /> : <SpadeIsTrumpStarted />}\n            </div>\n        </ErrorBoundary>\n    );\n};\n","import { Util } from '../../util/util';\nimport { createStore } from 'react-use-sub';\nimport { Persistore } from 'persistore';\nimport { BONUS, Color } from './data';\n\nconst _key = 'veryClever';\n\nexport type Crossed = boolean[];\nexport type Points = number[];\nexport type Highlight = { color: Color; index: number };\n\nconst _setHistoryLocal = (history: GameState[]) => Persistore.set(_key, JSON.stringify(history));\nconst _getHistory = () => {\n    try {\n        const history = JSON.parse(Persistore.get(_key) || '[]');\n        if (Array.isArray(history)) return history;\n    } catch (e) {\n        _setHistoryLocal([]);\n    }\n    return [];\n};\nconst _get = () => _getHistory().pop();\n\nexport type GameState = {\n    [Color.YELLOW]: Crossed;\n    [Color.BLUE]: Crossed;\n    [Color.GREEN]: Crossed;\n    [Color.ORANGE]: Points;\n    [Color.PURPLE]: Points;\n    earnedBonus: {\n        [Color.YELLOW]: BONUS[];\n        [Color.BLUE]: BONUS[];\n    };\n    reshuffle: Crossed;\n    plusOne: Crossed;\n    round: number;\n    selection: Color.ORANGE | Color.PURPLE | null;\n    highlight: null | Highlight;\n    bonus: BONUS[];\n    foxes: number;\n};\nexport const initialGameState = {\n    [Color.YELLOW]: Util.arrayFill(Util.array(16, false), [3, 6, 9, 12], true),\n    [Color.BLUE]: Util.arrayFill(Util.array(12, false), [0], true),\n    [Color.GREEN]: Util.array(11, false),\n    [Color.ORANGE]: Util.array(11, 0),\n    [Color.PURPLE]: Util.array(11, 0),\n    earnedBonus: {\n        [Color.YELLOW]: [],\n        [Color.BLUE]: [],\n    },\n    reshuffle: [false],\n    plusOne: [],\n    round: 1,\n    selection: null,\n    highlight: null,\n    bonus: [],\n    foxes: 0,\n};\nconst _setLocal = (state: GameState) => _setHistoryLocal([..._getHistory().slice(-9), state]);\n\nconst [useVeryCleverSub, _Store] = createStore<GameState>(initialGameState);\n\nconst _set: typeof _Store['set'] = (update) => {\n    _Store.set(update);\n    _setLocal(_Store.get());\n};\n\n_Store.set(_get() || {});\n\nconst undo = () => {\n    const history = _getHistory();\n    if (history.length > 1) {\n        history.pop();\n        _setHistoryLocal(history);\n        _Store.set(history[history.length - 1]);\n    }\n};\n\nconst reset = () => {\n    _setHistoryLocal([]);\n    _set(initialGameState);\n};\n\nexport const VeryCleverStore = {\n    get: _Store.get,\n    set: _set,\n    restart: () => _set(initialGameState),\n    undo,\n    reset,\n};\n\nexport { useVeryCleverSub };\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useDecryptoSub } from './Decrypto-store';\nimport { __ } from 'first-intl';\n\nenum Status {\n    WON = 'WON',\n    LOST = 'LOST',\n}\n\nexport const NotifyResult: React.FC = () => {\n    const [status, setStatus] = useState<Status | undefined>();\n    const { wins, losses } = useDecryptoSub(({ results }) => results);\n    const last = useRef({ wins, losses });\n\n    const close = useCallback(() => setStatus(undefined), []);\n\n    useEffect(() => {\n        if (last.current.wins === 1 && wins === 2) {\n            setStatus(Status.WON);\n        } else if (last.current.losses === 1 && losses === 2) {\n            setStatus(Status.LOST);\n        }\n        last.current = { wins, losses };\n    }, [wins, losses]);\n\n    if (!status) return null;\n\n    return (\n        <div className=\"result-overlay\" onClick={close}>\n            <span>{__(status === Status.WON ? 'DECRYPTO.won' : 'DECRYPTO.lost')}</span>\n        </div>\n    );\n};\n","import { Crossed, GameState, Points, VeryCleverStore } from './VeryClever-store';\nimport { Util } from '../../util/util';\nimport { BONUS, Color, Data } from './data';\n\nconst _takeBonus = (list: Crossed): Crossed => {\n    const firstFalse = list.findIndex((v) => !v);\n    return firstFalse >= 0 ? Util.nextArray(list, firstFalse, true) : list;\n};\n\nconst takeReshuffleBonus = () => VeryCleverStore.set(({ reshuffle }) => ({ reshuffle: _takeBonus(reshuffle) }));\nconst takePlusOneBonus = () => VeryCleverStore.set(({ plusOne }) => ({ plusOne: _takeBonus(plusOne) }));\n\nconst _allCrossed = (crossed: Crossed, ...nums: number[]): boolean => nums.every((num) => crossed[num]);\n\nconst _getYellowBonus = (crossed: Crossed, earned: BONUS[]): BONUS[] => {\n    const collected = [];\n\n    if (!earned.includes(BONUS.YELLOW_10) && _allCrossed(crossed, 0, 4, 8)) {\n        collected.push(BONUS.YELLOW_10);\n    }\n    if (!earned.includes(BONUS.YELLOW_14) && _allCrossed(crossed, 1, 5, 13)) {\n        collected.push(BONUS.YELLOW_14);\n    }\n    if (!earned.includes(BONUS.YELLOW_16) && _allCrossed(crossed, 2, 10, 14)) {\n        collected.push(BONUS.YELLOW_16);\n    }\n    if (!earned.includes(BONUS.YELLOW_20) && _allCrossed(crossed, 7, 11, 15)) {\n        collected.push(BONUS.YELLOW_20);\n    }\n    if (!earned.includes(BONUS.BLUE) && _allCrossed(crossed, 0, 1, 2)) {\n        collected.push(BONUS.BLUE);\n    }\n    if (!earned.includes(BONUS.ORANGE_4) && _allCrossed(crossed, 4, 5, 7)) {\n        collected.push(BONUS.ORANGE_4);\n    }\n    if (!earned.includes(BONUS.GREEN) && _allCrossed(crossed, 8, 10, 11)) {\n        collected.push(BONUS.GREEN);\n    }\n    if (!earned.includes(BONUS.FOX) && _allCrossed(crossed, 13, 14, 15)) {\n        collected.push(BONUS.FOX);\n    }\n    if (!earned.includes(BONUS.PLUS_1) && _allCrossed(crossed, 0, 5, 10, 15)) {\n        collected.push(BONUS.PLUS_1);\n    }\n\n    return collected;\n};\n\nconst _getBlueBonus = (crossed: Crossed, earned: BONUS[]): BONUS[] => {\n    const collected = [];\n\n    if (!earned.includes(BONUS.REFRESH) && _allCrossed(crossed, 4, 8)) {\n        collected.push(BONUS.REFRESH);\n    }\n    if (!earned.includes(BONUS.GREEN) && _allCrossed(crossed, 1, 5, 9)) {\n        collected.push(BONUS.GREEN);\n    }\n    if (!earned.includes(BONUS.PURPLE) && _allCrossed(crossed, 2, 6, 10)) {\n        collected.push(BONUS.PURPLE);\n    }\n    if (!earned.includes(BONUS.PLUS_1) && _allCrossed(crossed, 3, 7, 11)) {\n        collected.push(BONUS.PLUS_1);\n    }\n    if (!earned.includes(BONUS.ORANGE_5) && _allCrossed(crossed, 1, 2, 3)) {\n        collected.push(BONUS.ORANGE_5);\n    }\n    if (!earned.includes(BONUS.YELLOW) && _allCrossed(crossed, 4, 5, 6, 7)) {\n        collected.push(BONUS.YELLOW);\n    }\n    if (!earned.includes(BONUS.FOX) && _allCrossed(crossed, 8, 9, 10, 11)) {\n        collected.push(BONUS.FOX);\n    }\n\n    return collected;\n};\n\nconst _getRowBonus = (color: Color.GREEN | Color.ORANGE | Color.PURPLE, crossed: Crossed, index: number): BONUS[] => {\n    const bonus = Data[color].bonus[index];\n    return bonus ? [bonus] : [];\n};\n\nconst _getBonus = (\n    color: Color.YELLOW | Color.BLUE | Color.GREEN,\n    crossed: Crossed,\n    earned: BONUS[],\n    index: number\n): BONUS[] => {\n    if (color === Color.YELLOW) return _getYellowBonus(crossed, earned);\n    if (color === Color.BLUE) return _getBlueBonus(crossed, earned);\n    if (color === Color.GREEN) return _getRowBonus(Color.GREEN, crossed, index);\n\n    return undefined as never;\n};\n\nconst _crossableClicked = (color: Color.YELLOW | Color.BLUE | Color.GREEN, index: number, rest?: BONUS[]) =>\n    VeryCleverStore.set((state) => {\n        const crossed = Util.nextArray(state[color], index, true);\n        const earned = color === Color.GREEN ? [] : state.earnedBonus[color];\n        const collected = _getBonus(color, crossed, earned, index);\n\n        return {\n            [color]: crossed,\n            earnedBonus: {\n                ...state.earnedBonus,\n                [color]: [...earned, ...collected],\n            },\n            bonus: [...(rest || state.bonus), ...collected],\n            highlight: { color, index },\n        };\n    });\n\nconst _getNextIndex = (color: Color.GREEN | Color.ORANGE | Color.PURPLE): number =>\n    VeryCleverStore.get()[color].findIndex((v: any) => !v);\n\nconst _isCrossed = (color: Exclude<Color, Color.BLACK>, index: number): boolean =>\n    !!VeryCleverStore.get()[color][index];\n\nconst _isNextIndex = (color: Color.GREEN | Color.ORANGE | Color.PURPLE, index: number): boolean =>\n    _getNextIndex(color) === index;\n\nconst boxClicked = (color: Exclude<Color, Color.BLACK>, index: number) => {\n    if (_isCrossed(color, index)) return;\n    if (color === Color.ORANGE || color === Color.PURPLE || color === Color.GREEN) {\n        if (!_isNextIndex(color, index)) return;\n        if (color !== Color.GREEN) return VeryCleverStore.set({ selection: color });\n    }\n    return _crossableClicked(color, index);\n};\n\nconst clearSelection = () => VeryCleverStore.set({ selection: null });\n\nconst _selectValue = (color: Color.ORANGE | Color.PURPLE, value: number, rest?: BONUS[]) => {\n    const index = _getNextIndex(color);\n    const factor = color === Color.ORANGE ? Data[Color.ORANGE].factors[index] : 1;\n    VeryCleverStore.set((state) => {\n        const values = Util.nextArray(state[color], index, factor * value);\n        return {\n            [color]: values,\n            selection: null,\n            bonus: [...(rest || state.bonus), ..._getRowBonus(color, values.map(Boolean), index)],\n            highlight: { color: color, index },\n        };\n    });\n};\n\nconst selectValue = (value: number) => {\n    const { selection } = VeryCleverStore.get();\n    if (selection) {\n        _selectValue(selection, value);\n    }\n};\n\nconst _yellowPoints = (earned: BONUS[]) => {\n    const column1Points = earned.includes(BONUS.YELLOW_10) ? 10 : 0;\n    const column2Points = earned.includes(BONUS.YELLOW_14) ? 14 : 0;\n    const column3Points = earned.includes(BONUS.YELLOW_16) ? 16 : 0;\n    const column4Points = earned.includes(BONUS.YELLOW_20) ? 20 : 0;\n    return column1Points + column2Points + column3Points + column4Points;\n};\nconst _bluePoints = (crossed: Crossed) => Data[Color.BLUE].points[crossed.filter(Boolean).length - 1];\nconst _greenPoints = (crossed: Crossed): number | undefined =>\n    Data[Color.GREEN].points[crossed.filter(Boolean).length - 1];\nconst _sumPoints = (crossed: Points) => crossed.reduce((cur: number, red: number) => cur + red, 0);\n\nconst points = (state: GameState) => {\n    const yPoints = _yellowPoints(state.earnedBonus[Color.YELLOW]);\n    const bPoints = _bluePoints(state[Color.BLUE]);\n    const gPoints = _greenPoints(state[Color.GREEN]) || 0;\n    const oPoints = _sumPoints(state[Color.ORANGE]);\n    const pPoints = _sumPoints(state[Color.PURPLE]);\n    const foxPoints = Math.min(yPoints, bPoints, gPoints, oPoints, pPoints) * state.foxes;\n    return yPoints + bPoints + gPoints + oPoints + pPoints + foxPoints;\n};\n\nconst _useBonus = (bonus: BONUS, rest: BONUS[]) => {\n    if (bonus === BONUS.GREEN) _crossableClicked(Color.GREEN, _getNextIndex(Color.GREEN), rest);\n    else if (bonus === BONUS.ORANGE_4) _selectValue(Color.ORANGE, 4, rest);\n    else if (bonus === BONUS.ORANGE_5) _selectValue(Color.ORANGE, 5, rest);\n    else if (bonus === BONUS.ORANGE_6) _selectValue(Color.ORANGE, 6, rest);\n    else if (bonus === BONUS.PURPLE) _selectValue(Color.PURPLE, 6, rest);\n    else if (bonus === BONUS.FOX) VeryCleverStore.set(({ foxes }) => ({ foxes: foxes + 1, bonus: rest }));\n    else if (bonus === BONUS.PLUS_1)\n        VeryCleverStore.set(({ plusOne }) => ({ plusOne: [...plusOne, false], bonus: rest }));\n    else if (bonus === BONUS.REFRESH)\n        VeryCleverStore.set(({ reshuffle }) => ({ reshuffle: [...reshuffle, false], bonus: rest }));\n    else VeryCleverStore.set({ bonus: rest });\n};\n\nconst useBonus = () => {\n    const { bonus } = VeryCleverStore.get();\n    if (bonus) {\n        const [first, ...rest] = bonus;\n        _useBonus(first, rest);\n    }\n};\n\nconst ROUND_BONUS = [BONUS.REFRESH, BONUS.PLUS_1, BONUS.REFRESH, BONUS.ULTIMATE];\nconst _getRoundBonus = (round: number) => (ROUND_BONUS[round] ? [ROUND_BONUS[round]] : []);\n\nconst nextRound = () =>\n    VeryCleverStore.set(({ round }) => ({\n        round: round + 1,\n        bonus: _getRoundBonus(round),\n    }));\n\nexport const VeryCleverLogic = {\n    takeReshuffleBonus,\n    takePlusOneBonus,\n    boxClicked,\n    selectValue,\n    clearSelection,\n    points,\n    useBonus,\n    nextRound,\n};\n","import React, { ReactNode } from 'react';\nimport { Crossed, useVeryCleverSub } from './VeryClever-store';\nimport { VeryCleverLogic } from './VeryClever-logic';\nimport { Icon } from '../../components/icons/icon';\nimport { Util } from '../../util/util';\n\nexport type AvailableBonusProps = { children: ReactNode; crossed: Crossed; onClick: () => void };\n\nconst AvailableBonus: React.FC<AvailableBonusProps> = ({ children, crossed, onClick }) => (\n    <div className=\"grid-bonus-row\">\n        <div className=\"grid-item\">{children}</div>\n        {crossed.map((c, key) => (\n            <div key={key} className=\"grid-item\" onClick={onClick}>\n                <div className={Util.classNames('box', c && 'crossed')} />\n            </div>\n        ))}\n    </div>\n);\n\nexport const AvailableReshuffleBonus: React.FC = () => {\n    const { reshuffle } = useVeryCleverSub(({ reshuffle }) => ({ reshuffle }));\n\n    return (\n        <AvailableBonus crossed={reshuffle} onClick={VeryCleverLogic.takeReshuffleBonus}>\n            <Icon.Refresh2 />\n        </AvailableBonus>\n    );\n};\n\nexport const AvailablePlusOneBonus: React.FC = () => {\n    const { plusOne } = useVeryCleverSub(({ plusOne }) => ({ plusOne }));\n\n    return (\n        <AvailableBonus crossed={plusOne} onClick={VeryCleverLogic.takePlusOneBonus}>\n            <div className=\"content\">+1</div>\n        </AvailableBonus>\n    );\n};\n","import React from 'react';\nimport { useVeryCleverSub } from './VeryClever-store';\nimport { VeryCleverLogic } from './VeryClever-logic';\nimport { __ } from 'first-intl';\n\nexport const RoundOverview: React.FC = () => {\n    const { round } = useVeryCleverSub(({ round }) => ({ round }));\n    return (\n        <div className=\"round-overview\">\n            <span className=\"title\">\n                {__('VC.round')}\n                {round}\n            </span>\n            <button onClick={VeryCleverLogic.nextRound}>{__('VC.next')}</button>\n        </div>\n    );\n};\n","import React, { useCallback } from 'react';\nimport { VeryCleverLogic } from './VeryClever-logic';\nimport { useVeryCleverSub } from './VeryClever-store';\nimport { Color } from './data';\n\nexport type ValueSelectionOptionProps = { value: number; color: Color };\n\nexport const ValueSelectionOption: React.FC<ValueSelectionOptionProps> = ({ value, color }) => {\n    const onClick = useCallback(() => VeryCleverLogic.selectValue(value), [value]);\n    return (\n        <div className=\"value\" style={{ backgroundColor: color }} onClick={onClick}>\n            {value}\n        </div>\n    );\n};\n\ntype ValueSelectionProps = { color: Color };\n\nexport const ValueSelection: React.FC<ValueSelectionProps> = ({ color }) => {\n    const { prevVal } = useVeryCleverSub((state) => {\n        const currentIdx = color === Color.PURPLE ? state[Color.PURPLE].findIndex((v) => !v) - 1 : -1;\n        return { prevVal: currentIdx >= 0 ? state[Color.PURPLE][currentIdx] : 0 };\n    });\n\n    return (\n        <div className=\"value-selection\">\n            <div className=\"value-selection-inner\">\n                {[1, 2, 3, 4, 5, 6].slice(prevVal === 6 ? 0 : prevVal).map((v) => (\n                    <ValueSelectionOption key={v} color={color} value={v} />\n                ))}\n            </div>\n            <div className=\"value-selection-overlay\" onClick={VeryCleverLogic.clearSelection} />\n        </div>\n    );\n};\n","import React, { ReactNode } from 'react';\nimport { Icon } from '../../components/icons/icon';\nimport { BONUS, Color, CROSS } from './data';\n\nexport const FOX = '🦊';\nexport const PLUS_1 = '+1';\nexport const REFRESH = <Icon.Refresh2 />;\n\nconst CONTENT_AND_COLOR: { [bonus in BONUS]: { content: ReactNode; color: Color } } = {\n    [BONUS.FOX]: { content: FOX, color: Color.BLACK },\n    [BONUS.PLUS_1]: { content: PLUS_1, color: Color.BLACK },\n    [BONUS.REFRESH]: { content: REFRESH, color: Color.BLACK },\n    [BONUS.YELLOW]: { content: CROSS, color: Color.YELLOW },\n    [BONUS.YELLOW_10]: { content: 10, color: Color.YELLOW },\n    [BONUS.YELLOW_14]: { content: 14, color: Color.YELLOW },\n    [BONUS.YELLOW_16]: { content: 16, color: Color.YELLOW },\n    [BONUS.YELLOW_20]: { content: 20, color: Color.YELLOW },\n    [BONUS.BLUE]: { content: CROSS, color: Color.BLUE },\n    [BONUS.GREEN]: { content: CROSS, color: Color.GREEN },\n    [BONUS.ORANGE_4]: { content: 4, color: Color.ORANGE },\n    [BONUS.ORANGE_5]: { content: 5, color: Color.ORANGE },\n    [BONUS.ORANGE_6]: { content: 6, color: Color.ORANGE },\n    [BONUS.PURPLE]: { content: 6, color: Color.PURPLE },\n    [BONUS.ULTIMATE]: { content: CROSS + '/6', color: Color.BLACK },\n};\n\ntype BonusProps = { bonus: BONUS };\n\nexport const Bonus: React.FC<BonusProps> = ({ bonus }) => (\n    <div className=\"box bonus\" style={{ backgroundColor: CONTENT_AND_COLOR[bonus].color }}>\n        <div className=\"content\">{CONTENT_AND_COLOR[bonus].content}</div>\n    </div>\n);\n","import React, { ReactNode, useCallback } from 'react';\nimport { Highlight, useVeryCleverSub } from './VeryClever-store';\nimport { Util } from '../../util/util';\nimport { VeryCleverLogic } from './VeryClever-logic';\nimport { Color } from './data';\n\nconst _isHighLight = (highlight: null | Highlight, color: Color, index: number): boolean => {\n    if (!highlight) return false;\n    else return highlight.color === color && highlight.index === index;\n};\n\ntype BoxProps = { content: ReactNode; color: Exclude<Color, Color.BLACK>; gePrefix?: boolean; index: number };\n\nexport const Box = ({ content, color, gePrefix, index }: BoxProps) => {\n    const { crossed, newContent, highlight } = useVeryCleverSub((state) => {\n        const highlight = _isHighLight(state.highlight, color, index);\n        switch (color) {\n            case Color.ORANGE:\n            case Color.PURPLE:\n                return { crossed: false, newContent: state[color][index], highlight };\n            default:\n                return { crossed: state[color][index], highlight };\n        }\n    });\n\n    const onClick = useCallback(() => {\n        VeryCleverLogic.boxClicked(color, index);\n    }, [color, index]);\n\n    return (\n        <div\n            onClick={onClick}\n            className={Util.classNames('box', crossed && 'crossed', highlight && 'highlight')}\n            style={{ color, borderColor: color }}>\n            {gePrefix ? (\n                <div className=\"content\">\n                    &ge;\n                    {content}\n                </div>\n            ) : newContent ? (\n                <div className=\"picked\">{newContent}</div>\n            ) : (\n                <div className=\"content\">{content}</div>\n            )}\n        </div>\n    );\n};\n","import React, { ReactNode } from 'react';\nimport { Bonus } from './Bonus';\nimport { Util } from '../../util/util';\nimport { Box } from './Box';\nimport { BONUS, Color } from './data';\n\ntype BoxRowProps = {\n    color: Exclude<Color, Color.BLACK>;\n    contents: ReactNode[];\n    className?: string;\n    gePrefix?: boolean;\n    bonusList: Array<BONUS | undefined>;\n    points?: number[];\n};\n\nexport const BoxRow: React.FC<BoxRowProps> = ({ color, contents, className, gePrefix, bonusList, points = [] }) => (\n    <div className={Util.classNames('grid-row', className)} style={{ borderColor: color }}>\n        {contents.map((content, index) => {\n            const point = points[index];\n            const bonus = bonusList[index];\n            return (\n                <div key={index} className=\"grid-item\">\n                    <Box content={content} color={color} gePrefix={gePrefix} index={index} />\n                    {point && (\n                        <div className=\"points\" style={{ backgroundColor: color }}>\n                            {point}\n                        </div>\n                    )}\n                    {bonus && <Bonus bonus={bonus} />}\n                </div>\n            );\n        })}\n    </div>\n);\n","import React, { Fragment } from 'react';\nimport { Bonus } from './Bonus';\nimport { Util } from '../../util/util';\nimport { Box } from './Box';\nimport { Icon } from '../../components/icons/icon';\nimport { BONUS, Color } from './data';\n\ntype BoxGridProps = {\n    color: Exclude<Color, Color.BLACK>;\n    contents: Array<string | number>;\n    rowBonusList: BONUS[];\n    columnBonusList: BONUS[];\n};\n\nconst array6 = Util.array(6);\n\nexport const BoxGrid = ({ color, contents, rowBonusList, columnBonusList }: BoxGridProps) => (\n    <div className=\"grid-box-outer\">\n        <div className=\"grid-box\" style={{ borderColor: color, color }}>\n            {Util.array(contents.length / 4).map((_, row) => (\n                <Fragment key={row}>\n                    {contents.slice(row * 4, row * 4 + 4).map((content, key) => (\n                        <div className=\"grid-item\" key={key}>\n                            <Box key={key} content={content} color={color} index={4 * row + key} />\n                        </div>\n                    ))}\n                    <div className=\"grid-item grid-arrow\">\n                        <Icon.ArrowRight />\n                    </div>\n                    <div className=\"grid-item\">\n                        <Bonus bonus={rowBonusList[row]} />\n                    </div>\n                </Fragment>\n            ))}\n            {array6.map((_, i) => (\n                <div className=\"grid-item grid-arrow\" key={i}>\n                    {i < columnBonusList.length ? (\n                        i === 4 ? (\n                            <Icon.ArrowRight className=\"rotate-45\" />\n                        ) : (\n                            <Icon.ArrowDown />\n                        )\n                    ) : null}\n                </div>\n            ))}\n            {}\n            {columnBonusList.map((bonus, i) => (\n                <Fragment key={i}>\n                    {i === 4 && <div className=\"grid-item\" />}\n                    <div className=\"grid-item\">\n                        <Bonus bonus={bonus} />\n                    </div>\n                </Fragment>\n            ))}\n        </div>\n    </div>\n);\n","import React from 'react';\nimport { Icon } from '../../components/icons/icon';\nimport { VeryCleverStore } from './VeryClever-store';\nimport { __ } from 'first-intl';\n\nexport const NavBar: React.FC = () => (\n    <nav>\n        <button onClick={VeryCleverStore.undo} className=\"undo\">\n            <Icon.Undo />\n        </button>\n        <button onClick={VeryCleverStore.restart} className=\"restart\">\n            {__('APP.restart')}\n        </button>\n    </nav>\n);\n","import React from 'react';\nimport { useVeryCleverSub } from './VeryClever-store';\nimport { VeryCleverLogic } from './VeryClever-logic';\nimport { __ } from 'first-intl';\n\nexport const Points: React.FC = () => {\n    const { points } = useVeryCleverSub((state) => ({ points: VeryCleverLogic.points(state) }));\n\n    return (\n        <div className=\"points-total\">\n            {__('VC.points')}\n            {points}\n        </div>\n    );\n};\n","import React from 'react';\nimport { Bonus } from './Bonus';\nimport { BONUS } from './data';\nimport { VeryCleverLogic } from './VeryClever-logic';\n\nexport type ActivatedBonusProps = { earned: BONUS[] };\n\nexport const ActivatedBonus: React.FC<ActivatedBonusProps> = ({ earned }) =>\n    earned.length ? (\n        <div className=\"bonus-splash\" onClick={VeryCleverLogic.useBonus}>\n            <div className=\"bonus-splash-overlay\" />\n            <div className=\"bonus-splash-inner\">\n                {earned.map((bonus: BONUS, index: number) => (\n                    <Bonus bonus={bonus} key={index} />\n                ))}\n            </div>\n        </div>\n    ) : null;\n","import React from 'react';\nimport { useVeryCleverSub } from './VeryClever-store';\nimport { AvailablePlusOneBonus, AvailableReshuffleBonus } from './AvailableBonus';\nimport { RoundOverview } from './RoundOverview';\nimport { ValueSelection } from './ValueSelection';\nimport { Color, Data } from './data';\nimport { BoxRow } from './BoxRow';\nimport { BoxGrid } from './BoxGrid';\nimport { NavBar } from './NavBar';\nimport { Points } from './Points';\nimport { ActivatedBonus } from './ActivatedBonus';\n\nexport const VeryCleverInner: React.FC = () => {\n    const { selection, bonus } = useVeryCleverSub(({ selection, bonus }) => ({ selection, bonus }));\n    return (\n        <div className=\"very-clever-outer\">\n            <NavBar />\n            <div className=\"very-clever\">\n                <RoundOverview />\n                <AvailableReshuffleBonus />\n                <AvailablePlusOneBonus />\n                <BoxGrid\n                    color={Color.YELLOW}\n                    contents={Data[Color.YELLOW].contents}\n                    rowBonusList={Data[Color.YELLOW].rowBonus}\n                    columnBonusList={Data[Color.YELLOW].columnBonus}\n                />\n                <BoxGrid\n                    color={Color.BLUE}\n                    contents={Data[Color.BLUE].contents}\n                    rowBonusList={Data[Color.BLUE].rowBonus}\n                    columnBonusList={Data[Color.BLUE].columnBonus}\n                />\n                <BoxRow\n                    color={Color.GREEN}\n                    contents={Data[Color.GREEN].contents}\n                    gePrefix\n                    bonusList={Data[Color.GREEN].bonus}\n                    points={Data[Color.GREEN].points}\n                />\n                <BoxRow\n                    color={Color.ORANGE}\n                    contents={Data[Color.ORANGE].contents}\n                    bonusList={Data[Color.ORANGE].bonus}\n                />\n                <BoxRow\n                    color={Color.PURPLE}\n                    contents={Data[Color.PURPLE].contents}\n                    className=\"growing\"\n                    bonusList={Data[Color.PURPLE].bonus}\n                />\n                <Points />\n                {selection && <ValueSelection color={selection} />}\n                {bonus && <ActivatedBonus earned={bonus} />}\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport { ErrorBoundary } from '../../components/ErrorBoundary';\nimport { VeryCleverInner } from './VeryCleverInner';\nimport { VeryCleverStore } from './VeryClever-store';\n\nexport const VeryClever: React.FC = () => (\n    <ErrorBoundary fix={VeryCleverStore.reset}>\n        <VeryCleverInner />\n    </ErrorBoundary>\n);\n","import { Persistore } from 'persistore';\nimport { createStore } from 'react-use-sub';\n\nexport type CodePoint = 1 | 2 | 3 | 4;\nexport type Code = [CodePoint, CodePoint, CodePoint];\nexport type CodeWords = { first: string; second: string; third: string };\nexport type Results = { losses: number; wins: number };\nexport type Knowledge = [string[], string[], string[], string[]];\nconst NoKnowledge: Knowledge = [[], [], [], []];\nexport type PlayerState = { knowledge: Knowledge; code?: Code; guessed?: Code; codeWords?: CodeWords; round: number };\n\nexport type DecryptoState = { results: Results; me: PlayerState; enemy: PlayerState };\nconst initialDecryptoState: DecryptoState = {\n    results: { losses: 0, wins: 0 },\n    me: { knowledge: NoKnowledge, round: 0 },\n    enemy: { knowledge: NoKnowledge, round: 0 },\n};\n\nconst _key = 'decrypto';\n\nconst _fetch = (): DecryptoState => {\n    try {\n        const raw = Persistore.get(_key);\n        if (raw) {\n            return JSON.parse(raw);\n        }\n    } catch (e) {\n        // do nothing\n    }\n    return initialDecryptoState;\n};\nconst _persist = (state: DecryptoState) => Persistore.set(_key, JSON.stringify(state));\n\nconst [useDecryptoSub, Store] = createStore<DecryptoState>(_fetch());\nexport { useDecryptoSub };\n\nconst set: typeof Store['set'] = (update) => {\n    Store.set(update);\n    _persist(Store.get());\n};\n\nconst reset = () => set(initialDecryptoState);\n\nexport const DecryptoStore = { set, reset };\n","import React, { useState } from 'react';\nimport { FormInput } from '../../components/form/input';\nimport { FormData, Morfi } from 'morfi';\nimport { Code } from './Decrypto-store';\nimport { Icon } from '../../components/icons/icon';\nimport { __ } from 'first-intl';\n\ntype CodeWords = { first: string; second: string; third: string };\nconst initialCodeWords = { first: '', second: '', third: '' };\nconst initialCodeWordsData = { values: initialCodeWords, errors: {} };\nconst { Form, Fields } = Morfi.create<CodeWords>(initialCodeWords);\nconst codeWordValidator = (v?: string) => {\n    if (!v || !v.trim()) return { id: 'DECRYPTO.codeWord.required' };\n    try {\n        btoa(v);\n    } catch (e) {\n        return { id: 'DECRYPTO.codeWord.invalid' };\n    }\n};\nconst codeWordValidation = {\n    first: { onChange: codeWordValidator },\n    second: { onChange: codeWordValidator },\n    third: { onChange: codeWordValidator },\n};\n\nexport type CodeWordsSelectionProps = { onSubmit: (codeWords: CodeWords) => void; code?: Code };\n\nexport const CodeWordsSelection: React.FC<CodeWordsSelectionProps> = ({ onSubmit, code }) => {\n    const [codeWordsData, setCodeWordsData] = useState<FormData<CodeWords>>(initialCodeWordsData);\n    return (\n        <div className=\"code-words-selection\">\n            {code && (\n                <div className=\"code\">\n                    <span>{code.join('.')}</span>\n                </div>\n            )}\n            <Form onChange={setCodeWordsData} data={codeWordsData} onSubmit={onSubmit} validation={codeWordValidation}>\n                <FormInput Field={Fields.first} />\n                <FormInput Field={Fields.second} />\n                <FormInput Field={Fields.third} />\n                <button type=\"submit\" disabled={Morfi.hasErrors(codeWordsData)}>\n                    <Icon.Mask />\n                    <div className=\"description\">{__('DECRYPTO.btn.submit')}</div>\n                </button>\n            </Form>\n        </div>\n    );\n};\n","import React, { ReactNode, useCallback, useState } from 'react';\n\nexport type SelectOverlayValueProps<T> = {\n    value: T;\n    children: ReactNode;\n    onChange: (value: T) => void;\n    close: () => void;\n};\n\nexport const SelectOverlayValue = <T extends any>({ value, children, onChange, close }: SelectOverlayValueProps<T>) => {\n    const onClick = useCallback(() => {\n        onChange(value);\n        close();\n    }, [onChange, close, value]);\n    return (\n        <div className=\"value\" onClick={onClick}>\n            {children}\n        </div>\n    );\n};\n\nexport type SelectOverlayOption<T> = { value: T; node: ReactNode };\nexport type SelectOverlayProps<T> = {\n    children: ReactNode;\n    options: SelectOverlayOption<T>[];\n    onChange: (value: T) => void;\n};\n\nexport const SelectOverlay = <T extends any>({ children, options, onChange }: SelectOverlayProps<T>) => {\n    const [isOpen, setOpen] = useState<boolean>(false);\n\n    const close = useCallback(() => setOpen(false), []);\n    const open = useCallback(() => setOpen(true), []);\n\n    return (\n        <>\n            <span onClick={open}>{children}</span>\n            {isOpen && (\n                <div className=\"select-overlay\">\n                    <div className=\"select-overlay-inner\">\n                        {options.map(({ value, node }, index) => (\n                            <SelectOverlayValue key={index} close={close} onChange={onChange} value={value}>\n                                {node}\n                            </SelectOverlayValue>\n                        ))}\n                    </div>\n                    <div className=\"select-overlay-outer\" onClick={close} />\n                </div>\n            )}\n        </>\n    );\n};\n","import React, { useCallback, useMemo, useState } from 'react';\nimport { Code, CodePoint, CodeWords } from './Decrypto-store';\nimport { SelectOverlay, SelectOverlayOption } from '../../components/form/SelectOverlay';\nimport { Icon } from '../../components/icons/icon';\nimport { __ } from 'first-intl';\nimport { Util } from '../../util/util';\n\nexport type GuessCodeProps = { onSubmit: (guessed: Code) => void; codeWords: CodeWords };\nconst GuessOptions: SelectOverlayOption<CodePoint>[] = [\n    { value: 1 as CodePoint, node: 1 },\n    { value: 2 as CodePoint, node: 2 },\n    { value: 3 as CodePoint, node: 3 },\n    { value: 4 as CodePoint, node: 4 },\n];\n\nconst _getDuplicated = (first?: CodePoint, second?: CodePoint, third?: CodePoint): number | undefined => {\n    if (first && first === second) return first;\n    if (third && (third === second || third === first)) return third;\n};\nconst _getAllDuplicated = (first?: CodePoint, second?: CodePoint, third?: CodePoint): [boolean, boolean, boolean] => {\n    const duplicate = _getDuplicated(first, second, third);\n    return duplicate ? [duplicate === first, duplicate === second, duplicate === third] : [false, false, false];\n};\n\nexport const GuessCode: React.FC<GuessCodeProps> = ({ onSubmit, codeWords }) => {\n    const [first, setFirst] = useState<CodePoint | undefined>();\n    const [second, setSecond] = useState<CodePoint | undefined>();\n    const [third, setThird] = useState<CodePoint | undefined>();\n    const duplicated = _getAllDuplicated(first, second, third);\n\n    const wasGuessed = useMemo<boolean>(\n        () => !!(first && second && third && first !== second && first !== third && second !== third),\n        [first, second, third]\n    );\n\n    const onGuessedMe = useCallback(() => {\n        onSubmit([first!, second!, third!]);\n    }, [onSubmit, first, second, third]);\n\n    return (\n        <div className=\"guessing\">\n            <div className=\"guess\">\n                <div className=\"code-word\">{codeWords.first}</div>\n                <SelectOverlay options={GuessOptions} onChange={setFirst}>\n                    <span className={Util.classNames('code-guess', duplicated[0] && 'invalid')}>{first ?? '?'}</span>\n                </SelectOverlay>\n            </div>\n            <div className=\"guess\">\n                <div className=\"code-word\">{codeWords.second}</div>\n                <SelectOverlay options={GuessOptions} onChange={setSecond}>\n                    <span className={Util.classNames('code-guess', duplicated[1] && 'invalid')}>{second ?? '?'}</span>\n                </SelectOverlay>\n            </div>\n            <div className=\"guess\">\n                <div className=\"code-word\">{codeWords.third}</div>\n                <SelectOverlay options={GuessOptions} onChange={setThird}>\n                    <span className={Util.classNames('code-guess', duplicated[2] && 'invalid')}>{third ?? '?'}</span>\n                </SelectOverlay>\n            </div>\n            {wasGuessed && (\n                <button onClick={onGuessedMe} type=\"button\">\n                    <Icon.Key />\n                    <div className=\"description\">{__('DECRYPTO.btn.decode')}</div>\n                </button>\n            )}\n        </div>\n    );\n};\n","import React from 'react';\nimport { Code, CodeWords } from './Decrypto-store';\nimport { Util } from '../../util/util';\n\nexport type GuessResultProps = { codeWords: CodeWords; code: Code; guessed: Code };\n\nexport const GuessResult: React.FC<GuessResultProps> = ({ codeWords, code, guessed }) => {\n    const firstIncorrect = guessed[0] !== code[0];\n    const secondIncorrect = guessed[1] !== code[1];\n    const thirdIncorrect = guessed[2] !== code[2];\n\n    return (\n        <div className=\"guessed\">\n            <div className=\"guess\">\n                <div className=\"code-word\">{codeWords.first}</div>\n                <span className={Util.classNames('code-guess', firstIncorrect ? 'invalid' : 'valid')}>\n                    {guessed[0]}\n                </span>\n                {firstIncorrect && <span className=\"code-was\">{code[0]}</span>}\n            </div>\n            <div className=\"guess\">\n                <div className=\"code-word\">{codeWords.second}</div>\n                <span className={Util.classNames('code-guess', secondIncorrect ? 'invalid' : 'valid')}>\n                    {guessed[1]}\n                </span>\n                {secondIncorrect && <span className=\"code-was\">{code[1]}</span>}\n            </div>\n            <div className=\"guess\">\n                <div className=\"code-word\">{codeWords.third}</div>\n                <span className={Util.classNames('code-guess', thirdIncorrect ? 'invalid' : 'valid')}>\n                    {guessed[2]}\n                </span>\n                {thirdIncorrect && <span className=\"code-was\">{code[2]}</span>}\n            </div>\n        </div>\n    );\n};\n","import React, { useMemo } from 'react';\nimport { Knowledge } from './Decrypto-store';\n\nexport type KnowledgeViewProps = { knowledge: Knowledge };\n\nexport const KnowledgeView: React.FC<KnowledgeViewProps> = ({ knowledge }) => {\n    const rows = useMemo(() => {\n        const result = [];\n        const max = knowledge.reduce((red, cur) => Math.max(red, cur.length), 0);\n        for (let i = 0; i < max; i++) {\n            result.push(\n                <tr key={i}>\n                    {knowledge.map((k, idx) => (\n                        <td key={idx}>{k[i]}</td>\n                    ))}\n                </tr>\n            );\n        }\n        return result;\n    }, [knowledge]);\n\n    return (\n        <div className=\"knowledge\">\n            <table>\n                <thead>\n                    <tr>\n                        <td>1</td>\n                        <td>2</td>\n                        <td>3</td>\n                        <td>4</td>\n                    </tr>\n                </thead>\n                <tbody>{rows}</tbody>\n            </table>\n        </div>\n    );\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport QRCode from 'qrcode';\n\ntype ColorOption = { dark?: string; light?: string };\nconst transparent = '#0000';\n// we always choose transparent bg if any color of the qr code itself was chosen,\n// because the bg can be better regulated by the outer css styles\nexport const QrCodeColorOptions = {\n    white: { dark: '#FFF', light: transparent },\n    black: { dark: '#000', light: transparent },\n};\n\nexport type QrCodeOptions = { margin?: number; width?: number; color?: ColorOption };\n\ntype QrCodeProps = { info: string; options: QrCodeOptions };\n\nexport const QrCode: React.FC<QrCodeProps> = ({ info, options }) => {\n    const [error, setError] = useState<Error | undefined>();\n    const canvas = useRef<HTMLCanvasElement | null>(null);\n\n    useEffect(() => {\n        QRCode.toCanvas(canvas.current, info, options, (error) => {\n            if (error) setError(error);\n        });\n    }, [info, options]);\n\n    if (error) return <>Ups, something went wrong (Code: QR1)</>;\n\n    return <canvas ref={canvas} />;\n};\n","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport QrCode from 'qrcode-reader';\nimport { Code, CodeWords } from './Decrypto-store';\nimport { __ } from 'first-intl';\n\nconst openStream = (): Promise<MediaStream> =>\n    navigator.mediaDevices.getUserMedia({ audio: false, video: { facingMode: 'environment' } });\n\ntype QrCodeScannerProps = { onInput: (input: { code: Code; codeWords: CodeWords }) => void; prepareClose: boolean };\n\nexport const QrCodeScanner: React.FC<QrCodeScannerProps> = ({ onInput, prepareClose }) => {\n    const [permissionDenied, setPermissionDenied] = useState(false);\n    const [error, setError] = useState<Error | undefined>();\n    const [stream, setStream] = useState<MediaStream | undefined>();\n    const streamRef = useRef<MediaStream | undefined>();\n    streamRef.current = stream;\n    const { width, height } = useMemo(\n        () => ({\n            width: window.innerWidth,\n            height: window.innerHeight,\n        }),\n        []\n    );\n    const canvas = useRef<HTMLCanvasElement | null>(null);\n    const video = useRef<HTMLVideoElement | null>(null);\n    const isRunning = useRef(false);\n    const createSnap = useRef(() => {});\n\n    const clearStream = useCallback((): void => {\n        streamRef.current!.getTracks().forEach((track) => streamRef.current!.removeTrack(track));\n        video.current!.srcObject = null;\n        video.current!.src = '';\n    }, []);\n\n    useEffect(() => {\n        openStream()\n            .then(setStream)\n            .catch((e) => {\n                if (e.name === 'NotAllowedError') {\n                    // if encountered first time show the user the warning and consequently fail by trying to open\n                    // the media stream, because that helps to notify him that we want to open the stream.\n                    setPermissionDenied(true);\n                } else {\n                    // clear the interval, because will not be solved soon\n                    setError(e);\n                }\n            });\n    }, [clearStream]);\n\n    useEffect(() => {\n        if (prepareClose) {\n            video.current!.pause(); // eslint-disable-line react-hooks/exhaustive-deps\n            clearStream();\n        }\n    }, [prepareClose, clearStream]);\n\n    const startScanning = useCallback((): void => {\n        window.requestAnimationFrame(createSnap.current);\n    }, []);\n\n    useEffect(() => {\n        const videoElem = video.current!;\n        if (stream && !isRunning.current) {\n            isRunning.current = true;\n            if ('srcObject' in videoElem) {\n                videoElem.srcObject = stream;\n            } else {\n                // Avoid using this in new browsers, as it is going away.\n                videoElem!.src = window.URL.createObjectURL(stream);\n            }\n            // we have to set those attributes to empty strings, to ensure that\n            // the video displays anything on safari ios\n            videoElem.setAttribute('autoplay', '');\n            videoElem.setAttribute('muted', '');\n            videoElem.setAttribute('playsinline', '');\n            startScanning();\n        }\n    }, [startScanning, stream]);\n\n    const handleQrCodeResult = useCallback(\n        (error: any, result: { result: string }) => {\n            if (error || prepareClose) return startScanning();\n            try {\n                const { code, codeWords } = JSON.parse(atob(result.result));\n                if (\n                    code.every((p: any) => typeof p === 'number') &&\n                    typeof codeWords.first === 'string' &&\n                    typeof codeWords.second === 'string' &&\n                    typeof codeWords.third === 'string'\n                ) {\n                    onInput({ code, codeWords });\n                }\n            } catch (e) {\n                // do nothing\n            }\n            // in every case we need to start scanning again, because\n            // the video stream needs to be active to get closed accordingly\n            // else the browser does not know the stream can be removed\n            startScanning();\n        },\n        [onInput, startScanning, prepareClose]\n    );\n\n    createSnap.current = useCallback((): void => {\n        const context = canvas.current && canvas.current.getContext('2d');\n\n        if (context) {\n            const qr = new QrCode();\n            (context as any).drawImage(video.current, 0, 0, width, height, 0, 0, width, height);\n            const imageData = context.getImageData(0, 0, width, height);\n            qr.callback = handleQrCodeResult;\n            qr.decode(imageData);\n        }\n    }, [handleQrCodeResult, height, width]);\n\n    if (permissionDenied) return <>{__('media.camAccess.required')}</>;\n    if (error) return <>Ups, something went wrong (Code: QR2)</>;\n\n    return (\n        <div className=\"scanner\">\n            {stream && (\n                <div>\n                    <video ref={video} />\n                    <canvas width={width} height={height} ref={canvas} />\n                </div>\n            )}\n        </div>\n    );\n};\n","import React from 'react';\nimport { createStore } from 'react-use-sub';\nimport { QrCode, QrCodeColorOptions } from './QrCode';\nimport { QrCodeScanner } from './QrCodeScanner';\nimport { Code, CodeWords, DecryptoStore } from './Decrypto-store';\nimport { Icon } from '../../components/icons/icon';\n\ntype QrCodeState = { info: string | null; scanning: boolean; closingScanner: boolean };\nconst initialQrCodeState = { info: null, scanning: false, closingScanner: false };\n\nconst [useQrCodeInfo, qrCodeInfoStore] = createStore<QrCodeState>(initialQrCodeState);\n\nexport const closeQrCodeOverlay = () => {\n    const { closingScanner, scanning } = qrCodeInfoStore.get();\n    if (closingScanner) return;\n    else if (scanning) {\n        qrCodeInfoStore.set({ closingScanner: true });\n        // we need to close the scanner in two different phases\n        // 1. notify the scanner to clear the active video stream\n        // 2. remove the HTML elements by closing the React component\n        // this has to be done with a certain delay, which is quite high, but\n        // the user will be displayed immediate feedback by hiding the HTML elements\n        setTimeout(() => qrCodeInfoStore.set(initialQrCodeState), 1000);\n    } else {\n        qrCodeInfoStore.set(initialQrCodeState);\n    }\n};\nexport const openQrCodeInfoOverlay = (info: string) => qrCodeInfoStore.set({ info });\nexport const openQrCodeScannerOverlay = () => qrCodeInfoStore.set({ scanning: true });\n\nconst _onScanInput = ({ code, codeWords }: { code: Code; codeWords: CodeWords }) => {\n    closeQrCodeOverlay();\n    DecryptoStore.set(({ enemy }) => ({ enemy: { ...enemy, code, codeWords, round: enemy.round + 1 } }));\n};\n\nexport const QrCodeOverlay: React.FC = () => {\n    const { info, scanning, closingScanner } = useQrCodeInfo((state) => state);\n    const width = Math.min(window.innerWidth, window.innerHeight);\n\n    return info ? (\n        <div className=\"qr-code\">\n            <QrCode info={info} options={{ color: QrCodeColorOptions.black, width }} />\n            <button onClick={closeQrCodeOverlay}>\n                <Icon.Times />\n            </button>\n        </div>\n    ) : scanning ? (\n        <div className=\"qr-scanning\" style={closingScanner ? { display: 'none' } : undefined}>\n            <QrCodeScanner onInput={_onScanInput} prepareClose={closingScanner} />\n            <button onClick={closeQrCodeOverlay}>\n                <Icon.Times />\n            </button>\n        </div>\n    ) : null;\n};\n","import React, { useCallback } from 'react';\nimport { Code, CodeWords } from './Decrypto-store';\nimport { openQrCodeInfoOverlay } from './QrCodeOverlay';\nimport { Icon } from '../../components/icons/icon';\nimport { __ } from 'first-intl';\n\nexport type ShowQrCodeProps = { code: Code; codeWords: CodeWords };\n\nexport const ShowQrCode: React.FC<ShowQrCodeProps> = ({ codeWords, code }) => {\n    const onClick = useCallback(() => openQrCodeInfoOverlay(btoa(JSON.stringify({ code, codeWords }))), [\n        code,\n        codeWords,\n    ]);\n\n    return (\n        <button className=\"open-qr-code\" onClick={onClick} type=\"button\">\n            <Icon.QrCode />\n            <div className=\"description\">{__('DECRYPTO.btn.transfer')}</div>\n        </button>\n    );\n};\n","import React from 'react';\nimport { Util } from '../../util/util';\nimport { Code, CodeWords, DecryptoStore, useDecryptoSub } from './Decrypto-store';\nimport { CodeWordsSelection } from './CodeWordsSelection';\nimport { GuessCode } from './GuessCode';\nimport { GuessResult } from './GuessResult';\nimport { KnowledgeView } from './KnowledgeView';\nimport { ShowQrCode } from './ShowQrCode';\nimport { __ } from 'first-intl';\n\nconst _randomCode = (): Code => Util.arrayShuffle([1, 2, 3, 4]).slice(0, 3) as Code;\nconst _generateCode = () =>\n    DecryptoStore.set(({ me }) => ({\n        me: { ...me, code: _randomCode(), codeWords: undefined, guessed: undefined, round: me.round + 1 },\n    }));\nconst _setCodeWords = (codeWords: CodeWords) => DecryptoStore.set(({ me }) => ({ me: { ...me, codeWords } }));\nconst _setGuessed = (guessed: Code) =>\n    DecryptoStore.set(({ me, results: { wins, losses } }) => {\n        const { codeWords, code } = me;\n        const { first, second, third } = codeWords!;\n        const wrongGuess = guessed[0] !== code![0] || guessed[1] !== code![1] || guessed[2] !== code![2];\n        const knowledge: any = [...me.knowledge].map((arr) => [...arr]);\n        knowledge[code![0] - 1].push(first);\n        knowledge[code![1] - 1].push(second);\n        knowledge[code![2] - 1].push(third);\n        const updatedMe = { me: { ...me, knowledge, guessed } };\n        return wrongGuess ? { ...updatedMe, results: { wins, losses: losses + 1 } } : updatedMe;\n    });\n\nexport const DecryptoMe: React.FC = () => {\n    const { code, codeWords, guessed, knowledge, round } = useDecryptoSub(({ me }) => me);\n    const disableGeneration = useDecryptoSub(({ enemy: { guessed, round }, me, results: { wins, losses } }) => {\n        const finishedEnemyRound = guessed ? round : round - 1;\n        const meRound = me.round;\n        const lostOrWon = losses > 1 || wins > 1;\n        return lostOrWon || (meRound > 0 && finishedEnemyRound !== meRound);\n    });\n\n    const noCodeOrFinishedGuessing = !code || !!(code && codeWords && guessed);\n\n    return (\n        <>\n            {round > 0 && (\n                <div className=\"round\">\n                    {__('DECRYPTO.round')} {round}\n                </div>\n            )}\n            {noCodeOrFinishedGuessing && (\n                <div className=\"generate-code\">\n                    <button onClick={_generateCode} type=\"button\" disabled={disableGeneration}>\n                        ?.?.?\n                        <div className=\"description\">{__('DECRYPTO.btn.generate')}</div>\n                    </button>\n                </div>\n            )}\n            {code && !codeWords && <CodeWordsSelection onSubmit={_setCodeWords} code={code} />}\n            {code && codeWords && !guessed && <GuessCode onSubmit={_setGuessed} codeWords={codeWords} />}\n            {code && codeWords && guessed && <GuessResult codeWords={codeWords} code={code} guessed={guessed} />}\n            {code && codeWords && <ShowQrCode code={code} codeWords={codeWords} />}\n            <KnowledgeView knowledge={knowledge} />\n        </>\n    );\n};\n","import React, { useCallback } from 'react';\nimport { Code, DecryptoStore, PlayerState, useDecryptoSub } from './Decrypto-store';\nimport { GuessCode } from './GuessCode';\nimport { GuessResult } from './GuessResult';\nimport { KnowledgeView } from './KnowledgeView';\nimport { openQrCodeScannerOverlay } from './QrCodeOverlay';\nimport { Icon } from '../../components/icons/icon';\nimport { __ } from 'first-intl';\n\nconst _setEnemy = (meUpdates: Partial<PlayerState>) =>\n    DecryptoStore.set(({ enemy }) => ({ enemy: { ...enemy, ...meUpdates } }));\nconst _setGuessed = (guessed: Code) =>\n    DecryptoStore.set(({ enemy, results: { wins, losses } }) => {\n        const { codeWords, code } = enemy;\n        const { first, second, third } = codeWords!;\n        const correctGuess = guessed[0] === code![0] && guessed[1] === code![1] && guessed[2] === code![2];\n        const knowledge: any = [...enemy.knowledge].map((arr) => [...arr]);\n        knowledge[code![0] - 1].push(first);\n        knowledge[code![1] - 1].push(second);\n        knowledge[code![2] - 1].push(third);\n        const updatedEnemy = { enemy: { ...enemy, knowledge, guessed } };\n        return correctGuess ? { ...updatedEnemy, results: { wins: wins + 1, losses } } : updatedEnemy;\n    });\n\nexport const DecryptoEnemy: React.FC = () => {\n    const { code, codeWords, guessed, knowledge, round } = useDecryptoSub(({ enemy }) => enemy);\n    const disableCatch = useDecryptoSub(({ me: { round, codeWords }, enemy, results: { wins, losses } }) => {\n        const readyMeRound = codeWords ? round : round - 1;\n        return readyMeRound <= enemy.round;\n    });\n\n    const onClick = useCallback(() => {\n        _setEnemy({ code: undefined, codeWords: undefined, guessed: undefined });\n        openQrCodeScannerOverlay();\n    }, []);\n\n    const noCodeOrFinishedGuessing = !code || !!(code && codeWords && guessed);\n\n    return (\n        <>\n            {round > 0 && (\n                <div className=\"round\">\n                    {__('DECRYPTO.round')} {round}\n                </div>\n            )}\n            {noCodeOrFinishedGuessing && (\n                <div className=\"scan-code\">\n                    <button onClick={onClick} type=\"button\" disabled={disableCatch}>\n                        <Icon.Glasses />\n                        <div className=\"description\">{__('DECRYPTO.btn.catch')}</div>\n                    </button>\n                </div>\n            )}\n            {code && codeWords && !guessed && <GuessCode onSubmit={_setGuessed} codeWords={codeWords} />}\n            {code && codeWords && guessed && <GuessResult codeWords={codeWords} code={code} guessed={guessed} />}\n            <KnowledgeView knowledge={knowledge} />\n        </>\n    );\n};\n","import React, { useCallback, MouseEvent } from 'react';\nimport { createStore } from 'react-use-sub';\nimport { UrlUtil } from './util/url';\nimport { App } from './App';\nimport { Again } from './games/Again';\nimport { MissionControl } from './mission/MissionControl';\nimport { SpadeIsTrump } from './games/SpadeIsTrump';\nimport { VeryClever } from './games/VeryClever';\nimport { Decrypto } from './games/Decrypto';\n\nexport enum NavLoc {\n    AGAIN = 'again',\n    DECRYPTO = 'decrypto',\n    MISSION = 'mission',\n    SIT = 'spade-is-trump',\n    VERY_CLEVER = 'very-clever',\n}\nconst _getCurrentNavLoc = (): NavLoc | null => {\n    const { loc } = UrlUtil.locationSearchToQuery(window.location.search);\n    return Object.values(NavLoc).includes(loc) ? loc : null;\n};\n\nconst [useNavSub, NavStore] = createStore<{ loc: NavLoc | null }>({ loc: _getCurrentNavLoc() });\n\nconst Root: React.FC = () => {\n    const loc = useNavSub(({ loc }) => loc);\n\n    if (loc === NavLoc.AGAIN) return <Again />;\n    if (loc === NavLoc.DECRYPTO) return <Decrypto />;\n    if (loc === NavLoc.MISSION) return <MissionControl />;\n    if (loc === NavLoc.SIT) return <SpadeIsTrump />;\n    if (loc === NavLoc.VERY_CLEVER) return <VeryClever />;\n\n    return <App />;\n};\n\nconst onLocationChange = () => {\n    const loc = _getCurrentNavLoc();\n    if (loc !== NavStore.get().loc) NavStore.set({ loc });\n};\nwindow.addEventListener('popstate', onLocationChange);\n\nconst Link: React.FC<{ children: React.ReactNode; loc: NavLoc }> = ({ children, loc }) => {\n    const href = '?loc=' + loc;\n\n    const onClick = useCallback(\n        (event: MouseEvent<HTMLAnchorElement>) => {\n            event.preventDefault();\n            NavStore.set({ loc });\n            window.history.pushState(null, loc, href);\n        },\n        [loc, href]\n    );\n\n    return (\n        <a href={href} onClick={onClick}>\n            {children}\n        </a>\n    );\n};\n\nexport const AppNavigation = { Root, Link };\n","import React, { useCallback, useState } from 'react';\nimport { Util } from '../../util/util';\nimport { DecryptoStore, useDecryptoSub } from './Decrypto-store';\nimport { DecryptoMe } from './DecryptoMe';\nimport { QrCodeOverlay } from './QrCodeOverlay';\nimport { DecryptoEnemy } from './DecryptoEnemy';\nimport { Icon } from '../../components/icons/icon';\nimport { NotifyResult } from './NotifyResult';\nimport { __ } from 'first-intl';\n\nexport const DecryptoInternal: React.FC = () => {\n    const [showEnemy, setShowEnemy] = useState<boolean>(false);\n    const { losses, wins } = useDecryptoSub(({ results }) => results);\n\n    const onSwitch = useCallback(() => setShowEnemy((s) => !s), []);\n\n    return (\n        <div\n            className={Util.classNames('decrypto', showEnemy && 'enemy', losses > 0 && 'alarm', wins > 0 && 'success')}>\n            <NotifyResult />\n            <div className=\"navigation\">\n                <button type=\"button\" onClick={onSwitch}>\n                    <Icon.Exchange />\n                </button>\n                <button className=\"restart\" type=\"button\" onClick={DecryptoStore.reset}>\n                    {__('APP.restart')}\n                </button>\n            </div>\n            <div className=\"content\">{showEnemy ? <DecryptoEnemy /> : <DecryptoMe />}</div>\n            <QrCodeOverlay />\n        </div>\n    );\n};\n","import React from 'react';\nimport { ErrorBoundary } from '../../components/ErrorBoundary';\nimport { DecryptoStore } from './Decrypto-store';\nimport { DecryptoInternal } from './Decrypto';\n\nexport const Decrypto: React.FC = () => (\n    <ErrorBoundary fix={DecryptoStore.reset}>\n        <DecryptoInternal />\n    </ErrorBoundary>\n);\n","import './assets/main.scss';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Globals } from './globals';\nimport { ServiceWorkerUpdater } from './sw-logic';\nimport { IntlRoot } from './intl';\nimport { AppNavigation } from './AppNavigation';\n\nReactDOM.render(\n    <IntlRoot>\n        <AppNavigation.Root />\n        <ServiceWorkerUpdater />\n    </IntlRoot>,\n    Globals.document().getElementById('root')\n);\n"],"sourceRoot":""}