{"version":3,"sources":["globals.ts","util/util.ts","components/icons/icon.tsx","sw-logic.tsx","intl.tsx","util/url.ts","admin/Admin.tsx","games/Again/again-store.ts","admin/AdminEntry.tsx","App.tsx","games/Again/data.ts","games/Again/types.ts","games/Again/Box.tsx","games/Again/ColorPoints.tsx","games/Again/again-logic.ts","util/hof-util.ts","hooks/useWindowResizeEffect.ts","hooks/useEventListener.ts","games/Again/again-resize.ts","games/Again/Letters.tsx","games/Again/Jokers.tsx","games/Again/RowPoints.tsx","games/Again/Grid.tsx","games/Again/Cube.tsx","footer/Footer.tsx","games/Again/Turn.tsx","games/Again/Total.tsx","games/Again/CompletionPopup.tsx","games/Again/ActionSplash.tsx","games/Again/AgainStarted.tsx","components/form/DisplayError.tsx","util/event-util.ts","components/form/select.tsx","games/Again/DataSelection.tsx","components/ErrorBoundary.tsx","footer/FooterUndo.tsx","footer/FooterRestart.tsx","games/Again/index.tsx","mission/MissionControl.tsx","components/form/input.tsx","games/SpadeIsTrump/spadeIsTrump-store.ts","games/SpadeIsTrump/history-store.ts","games/SpadeIsTrump/players-store.ts","games/VeryClever/data.ts","games/SpadeIsTrump/AddPlayer.tsx","games/SpadeIsTrump/PlayerRow.tsx","games/SpadeIsTrump/StartupInfoPicker.tsx","games/SpadeIsTrump/Points.tsx","games/SpadeIsTrump/ClickableDescription.tsx","games/SpadeIsTrump/SpadeIsTrumpStarted.tsx","games/SpadeIsTrump/index.tsx","games/VeryClever/VeryClever-store.ts","games/Decrypto/NotifyResult.tsx","games/VeryClever/VeryClever-logic.ts","games/VeryClever/AvailableBonus.tsx","games/VeryClever/RoundOverview.tsx","games/VeryClever/ValueSelection.tsx","games/VeryClever/Bonus.tsx","games/VeryClever/Box.tsx","games/VeryClever/BoxRow.tsx","games/VeryClever/BoxGrid.tsx","games/VeryClever/Points.tsx","games/VeryClever/ActivatedBonus.tsx","games/VeryClever/VeryCleverInner.tsx","games/VeryClever/index.tsx","games/Decrypto/Decrypto-store.ts","games/Decrypto/CodeWordsSelection.tsx","components/form/SelectOverlay.tsx","games/Decrypto/GuessCode.tsx","games/Decrypto/GuessResult.tsx","games/Decrypto/KnowledgeView.tsx","games/Decrypto/QrCode.tsx","games/Decrypto/QrCodeScanner.tsx","games/Decrypto/QrCodeOverlay.tsx","games/Decrypto/ShowQrCode.tsx","games/Decrypto/DecryptoMe.tsx","games/Decrypto/DecryptoEnemy.tsx","AppNavigation.tsx","games/Decrypto/Decrypto.tsx","games/Decrypto/index.tsx","index.tsx"],"names":["Globals","window","document","navigator","onLine","ClientHistory","back","history","classNamesFilter","arg","Util","num","defaultValue","Array","fill","classes","filter","join","undefined","before","index","value","copy","splice","uuid","a","Math","random","toString","replace","arr","indices","forEach","i","length","j","floor","_Icon","symbol","props","width","className","viewBox","d","Icons","Icon","Alert","ArrowRight","ChevronUp","ChevronDown","ArrowDown","Ban","Crown","Exchange","Forward","Glasses","Home","Key","Mask","Menu","Undo","PowerOff","QrCode","Refresh","Refresh2","Settings","Times","Trash","reloadPage","open","location","href","newSWInstalledCb","registerServiceWorker","serviceWorker","register","then","reg","onupdatefound","installingWorker","installing","activeWorker","active","onstatechange","state","catch","console","error","doAfter","ms","cb","Promise","resolve","setTimeout","ServiceWorkerUpdater","useState","content","setContent","contentDelayed","useCallback","delay","initRefresh","all","useEffect","addEventListener","_persist","chosen","Persistore","set","addIntlData","deIntl","currentLang","saved","get","_getPersisted","lang","language","startsWith","_detectPreferred","enIntl","Updater","setKey","key","toggleIntl","IntlRoot","children","UrlUtil","search","s","substr","params","split","result","param","pair","decodeURIComponent","allReportedErrors","oldConsoleError","push","onerror","e","SplashIconType","TurnType","Admin","close","map","message","String","Object","keys","localStorage","JSON","stringify","getItem","onClick","_AdminEntry","lastClicked","successCount","margin","timing","AdminEntry","setActive","now","Date","diff","App","src","alt","AppNavigation","Link","loc","NavLoc","AGAIN","loading","__","SIT","VERY_CLEVER","DECRYPTO","parseRawData","starPositions","rowColors","label","grid","stars","backgroundColor","row","Number","AllRawData","AllData","black","blue","green","orange","pink","violet","yellow","dataOptions","DataSelectionOptions","COLOR","O","B","G","R","Y","Box","color","customColor","circled","crossed","star","borderColor","flicker","xmlns","x","y","height","rx","ry","stroke","strokeWidth","points","textAnchor","fontSize","cx","cy","r","x1","y1","x2","y2","blockColorPoints","AgainStore","ColorList","ColorPoints","colorPointsBlocked","completedColors","rowPoints1","rowPoints2","getCompletedRows","every","checked","getCompletedColors","gridData","boxIndex","getClickable","allowMiddle","rowIndex","calculate","again","completedRows","totalPoints","rowPointsBlocked","takenJokers","completed","reduce","v","getTotalPoints","getLastTurn","turns","turnsWithIndex","turn","HofUtil","func","lastPending","args","clearTimeout","useWindowResizeEffect","callbackRef","useRef","current","type","listener","capture","ref","wrapped","removeEventListener","useEventListener","innerWidth","applyPadding","padding","ratioDiscrepancy","innerHeight","calculateNecessaryPadding","paddingValue","from","getElementsByClassName","elem","style","setProperty","allLetters","Letters","letter","uncrossedRow","uncrossedGrid","unblockedRowPoints","unblockedColorPoints","initialAgainState","initialAgainStartedState","turnCrossed","completedColor","createStore","againSplash","againData","againStarted","useAgainSub","store","getHistory","states","parse","randomDataKey","limit","setStarted","updates","getChosenData","option","init","againState","updatedState","unshift","pop","undo","shift","UNDO","remove","restart","chooseData","selectedOption","dataOption","setSplash","icon","onCross","currentRow","count","updatedRow","updatedTurnRow","onFinish","lastTurn","lastTurnIndex","madeTurn","lastCrossed","lastIndex","newCompletedRows","nextCompletedColors","newCompletedColor","findIndex","Boolean","CHOSEN","data","SKIP","calculateTurn","SUBMIT","onAbort","CANCEL","onClosePopup","takeJoker","JOKER","blockRowPoints","ROW","BoxWrapper","NumberJoker","fontWeight","ColorJoker","JokerSeparator","EqualSign","JokerPlaceholder","taken","Jokers","_","rowWasCompleted","RowPoints","Grid","clickable","onClickHandler","starPosition","crossedRow","isMiddleRow","isClickable","VALUE_SVG","Cube","innerValue","FooterButton","description","FooterHome","applyFooterHeight","getElementById","Footer","expandable","hideHome","setOpen","toggle","o","Abort","Finish","SkipTurn","ChosenTurnDisplay","FooterTurnControl","Success","isCompleted","Turn","hideIndex","Turns","Total","CompletionPopup","onClose","hide","ActionSplash","iconView","iconType","renderIcon","AgainStarted","DisplayError","EventUtil","preventDefault","event","original","target","Option","__string","Select","serialize","required","onChange","onBlur","options","disabled","name","optionValues","values","getOptionValues","handlerRemapped","handler","optionValue","indexOf","currentValue","find","currentIndex","onSelect","OptionsWithRandom","DataSelection","ErrorBoundary","hasError","this","fix","Component","getDerivedStateFromError","FooterUndo","FooterRestart","FooterStarted","Again","missions","title","text","MissionControl","processed","selected","interval","processNextLetter","clearInterval","setState","runLetters","setInterval","select","mission","m","isSelected","substring","transformHandler","trim","Input","placeholder","inputClassName","onFocus","autoFocus","forwardedRef","readOnly","FormInput","Field","rest","gameState","players","useSpadeIsTrumpSub","SpadeIsTrumpStore","update","_set","HistoryStore","reset","rearrange","cleared","player","total","_clear","slice","next","moveTo","after","_get","Color","PlayerStore","shortcut","p","initialValues","Morfi","create","Form","Fields","initialData","errors","validation","id","AddPlayerForm","setData","onSubmit","AddPlayer","focus","setFocus","PlayerRow","pos","moveUp","moveDown","playersFromStartup","startupInfo","rounds","numberOfCards","numberOfPlayers","playerIdx","newPlayer","StartupInfoValidations","isNaN","submit","StartupInfoPicker","parseNum","parsed","_tipToString","tip","Points","activeRound","checkable","currentTip","setCurrentTip","onChangeTip","setEarned","earned","onSuccess","onFailed","clazzName","readyToPlay","ClickableDescription","desc","short","tag","showName","setShowName","displayed","React","createElement","onPointsChange","roundIdx","onPlayerChange","SpadeIsTrumpStarted","earnings","round","getActiveRound","earnedPoints","res","val","isActiveRound","activeReady","activeRoundReady","cards","positives","roundHasError","earnedIdx","max","SpadeIsTrumpFooter","started","SpadeIsTrump","BONUS","orangeFactors","Data","YELLOW","contents","rowBonus","BLUE","ORANGE_4","GREEN","FOX","columnBonus","YELLOW_10","YELLOW_14","YELLOW_16","YELLOW_20","PLUS_1","ORANGE_5","REFRESH","PURPLE","bonus","ORANGE","factors","f","ORANGE_6","_setHistoryLocal","_getHistory","isArray","initialGameState","useVeryCleverSub","_Store","Status","VeryCleverStore","_takeBonus","list","firstFalse","_allCrossed","nums","_getRowBonus","_getBonus","collected","includes","_getYellowBonus","_getBlueBonus","_crossableClicked","earnedBonus","_getNextIndex","_selectValue","factor","_sumPoints","cur","red","ROUND_BONUS","ULTIMATE","_getRoundBonus","VeryCleverLogic","takeReshuffleBonus","reshuffle","takePlusOneBonus","plusOne","boxClicked","_isCrossed","_isNextIndex","selection","selectValue","clearSelection","yPoints","bPoints","gPoints","_greenPoints","oPoints","pPoints","min","foxes","useBonus","_useBonus","nextRound","AvailableBonus","c","AvailableReshuffleBonus","AvailablePlusOneBonus","RoundOverview","ValueSelectionOption","ValueSelection","prevVal","currentIdx","CONTENT_AND_COLOR","BLACK","CROSS","Bonus","gePrefix","highlight","_isHighLight","newContent","BoxRow","bonusList","point","array6","BoxGrid","rowBonusList","columnBonusList","ActivatedBonus","VeryCleverInner","VeryCleverFooter","VeryClever","NoKnowledge","initialDecryptoState","results","losses","wins","me","knowledge","enemy","raw","_fetch","useDecryptoSub","Store","DecryptoStore","initialCodeWords","first","second","third","initialCodeWordsData","codeWordValidator","btoa","codeWordValidation","CodeWordsSelection","code","codeWordsData","setCodeWordsData","hasErrors","SelectOverlayValue","SelectOverlay","isOpen","node","GuessOptions","GuessCode","codeWords","setFirst","setSecond","setThird","duplicated","duplicate","_getDuplicated","_getAllDuplicated","wasGuessed","useMemo","onGuessedMe","GuessResult","guessed","firstIncorrect","secondIncorrect","thirdIncorrect","KnowledgeView","rows","k","idx","QrCodeColorOptions","white","dark","light","info","setError","canvas","QRCode","toCanvas","QrCodeScanner","onInput","prepareClose","permissionDenied","setPermissionDenied","stream","setStream","streamRef","video","isRunning","createSnap","clearStream","getTracks","track","removeTrack","srcObject","mediaDevices","getUserMedia","audio","facingMode","pause","startScanning","requestAnimationFrame","videoElem","URL","createObjectURL","setAttribute","handleQrCodeResult","atob","context","getContext","qr","drawImage","imageData","getImageData","callback","decode","initialQrCodeState","scanning","closingScanner","useQrCodeInfo","qrCodeInfoStore","closeQrCodeOverlay","_onScanInput","QrCodeOverlay","display","ShowQrCode","_generateCode","_setCodeWords","_setGuessed","wrongGuess","updatedMe","DecryptoMe","disableGeneration","finishedEnemyRound","meRound","noCodeOrFinishedGuessing","correctGuess","updatedEnemy","DecryptoEnemy","disableCatch","meUpdates","NotifyResult","status","setStatus","last","WON","LOST","DecryptoInternal","showEnemy","setShowEnemy","onSwitch","DecryptoFooter","Decrypto","_getCurrentNavLoc","useNavSub","NavStore","Root","MISSION","pushState","ReactDOM","render"],"mappings":"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,EAAItD,MAAM,QAK/FoD,OAJ2BJ,EAIEI,EAJkCJ,EAAchD,MAAM,IAAIc,IAAIyC,SAK3FF,oBAGEG,EAuBI,CACFN,MAAO,mBACPG,gBAAiB,UACjBD,MAAO,kBACPD,KAAM,CACF,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YA1CNK,EA6CK,CACHN,MAAO,oBACPG,gBAAiB,UACjBD,MAAO,kBACPD,KAAM,CACF,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YAhENK,EAmEM,CACJN,MAAO,qBACPG,gBAAiB,UACjBD,MAAO,kBACPD,KAAM,CACF,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YAtFNK,EAyFI,CACFN,MAAO,mBACPG,gBAAiB,UACjBD,MAAO,kBACPD,KAAM,CACF,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YA5GNK,EA+GM,CACJN,MAAO,qBACPG,gBAAiB,UACjBD,MAAO,kBACPD,KAAM,CACF,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YAlINK,EAqIM,CACJN,MAAO,qBACPG,gBAAiB,UACjBD,MAAO,kBACPD,KAAM,CACF,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YAMCM,EAAyC,CAClDC,MAAOX,EA9JA,CACHG,MAAO,oBACPG,gBAAiB,UACjBD,MAAO,kBACPD,KAAM,CACF,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,aA4IRQ,KAAMZ,EAAaS,GACnBI,MAAOb,EAAaS,GACpBK,OAAQd,EAAaS,GACrBM,KAAMf,EAAaS,GACnBO,OAAQhB,EAAaS,GACrBQ,OAAQjB,EAAaS,IAEZS,GAA4BhD,OAAOC,KAAKuC,GAExCS,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","file":"static/js/main.a69942c8.chunk.js","sourcesContent":["export const Globals = {\n    window: () => window,\n    document: () => document,\n    navigator: (): any => navigator,\n    onLine: (): boolean => !('onLine' in Globals.navigator()) || Globals.navigator().onLine,\n};\n\nexport const ClientHistory = {\n    back: () => window.history.back(),\n};\n","const classNamesFilter = (arg: any) => !!arg && typeof arg === 'string';\nconst classNames = (...classes: any[]): string | undefined => classes.filter(classNamesFilter).join(' ') || undefined;\n\nconst array = <T>(num: number, defaultValue?: T): Array<T> => Array(num).fill(defaultValue);\n\nconst arrayFill = <T>(arr: T[], indices: number[], value: T): T[] => {\n    const copy = [...arr];\n    indices.forEach((i) => {\n        copy[i] = value;\n    });\n    return copy;\n};\n\nconst nextArray = <T>(before: T[], index: number, value: T): T[] => {\n    const copy = [...before];\n    copy.splice(index, 1, value);\n    return copy;\n};\n\nconst arrayShuffle = <T>(arr: T[]): T[] => {\n    const copy = [...arr];\n    const start = copy.length - 1;\n    for (let i = start; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [copy[i], copy[j]] = [copy[j], copy[i]];\n    }\n    return copy;\n};\n\n// optimized as much as possible\n// call this function without arguments to generate a new uuid\ntype UuidParam = void;\nconst uuid = (a: UuidParam): string =>\n    (a as any)\n        ? ((a as any) ^ ((Math.random() * 16) >> ((a as any) / 4))).toString(16)\n        : (([1e7] as any) + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, uuid);\n\nexport const Util = { array, classNames, nextArray, uuid, arrayFill, arrayShuffle };\n","import React from 'react';\nimport Icons from './icon-path.json';\nimport { Util } from '../../util/util';\n\ntype IconProps = { className?: string };\n\nconst _Icon = (symbol: keyof typeof Icons, props: IconProps = {}, width: number = 512) => (\n    <svg className={props.className ? props.className + ' icon' : 'icon'} viewBox={`0 0 ${width} 512`}>\n        <path fill=\"currentColor\" d={Icons[symbol]} />\n    </svg>\n);\n\nconst ArrowDown = ({ className }: IconProps) => <Icon.ArrowRight className={Util.classNames('rotate-90', className)} />;\nconst ChevronDown = ({ className }: IconProps) => (\n    <Icon.ChevronUp className={Util.classNames('rotate-180', className)} />\n);\n\nexport const Icon = {\n    Alert: (props?: IconProps) => _Icon('ALERT', props, 576),\n    ArrowRight: (props?: IconProps) => _Icon('ARROW_RIGHT', props, 448),\n    ChevronUp: (props?: IconProps) => _Icon('CHEVRON_UP', props, 448),\n    ChevronDown,\n    ArrowDown,\n    Ban: (props?: IconProps) => _Icon('BAN', props),\n    Crown: (props?: IconProps) => _Icon('CROWN', props, 640),\n    Exchange: (props?: IconProps) => _Icon('EXCHANGE', props),\n    Forward: (props?: IconProps) => _Icon('FORWARD', props),\n    Glasses: (props?: IconProps) => _Icon('GLASSES', props, 576),\n    Home: (props?: IconProps) => _Icon('HOME', props, 576),\n    Key: (props?: IconProps) => _Icon('KEY', props),\n    Mask: (props?: IconProps) => _Icon('MASK', props, 640),\n    Menu: (props?: IconProps) => _Icon('MENU', props, 448),\n    Undo: (props?: IconProps) => _Icon('UNDO', props),\n    PowerOff: (props?: IconProps) => _Icon('POWER_OFF', props),\n    QrCode: (props?: IconProps) => _Icon('QR_CODE', props, 448),\n    Refresh: (props?: IconProps) => _Icon('REFRESH', props, 640),\n    Refresh2: (props?: IconProps) => _Icon('REFRESH_2', props),\n    Settings: (props?: IconProps) => _Icon('SETTINGS', props),\n    Times: (props?: IconProps) => _Icon('TIMES', props),\n    Trash: (props?: IconProps) => _Icon('TRASH', props, 448),\n};\n","import React, { ReactNode, useEffect, useCallback, useState } from 'react';\nimport { Globals } from './globals';\nimport { Icon } from './components/icons/icon';\n\nconst reloadPage = () => {\n    Globals.window().open(window.location.href, '_self');\n};\n\nlet newSWInstalledCb = () => {};\n\nconst registerServiceWorker = () =>\n    Globals.navigator()\n        .serviceWorker.register('/sw.js')\n        .then((reg: any /* ServiceWorkerRegistration */) => {\n            reg.onupdatefound = () => {\n                // reg.installing -> the installing worker, or undefined\n                // reg.waiting -> the waiting worker, or undefined\n                // reg.active -> the active worker, or undefined\n                const installingWorker = reg.installing;\n                const activeWorker = reg.active;\n                installingWorker.onstatechange = () => {\n                    // \"installing\" - the install event has fired, but not yet complete\n                    // \"installed\"  - install complete\n                    // \"activating\" - the activate event has fired, but not yet complete\n                    // \"activated\"  - fully active\n                    // \"redundant\"  - discarded. Either failed install, or it's been\n                    //                replaced by a newer version\n                    if (installingWorker.state === 'installed' && activeWorker) newSWInstalledCb();\n                };\n            };\n        })\n        .catch(() => Globals.window().console.error('some service worker registration failed'));\n\nconst initServiceWorker = () => {\n    if (process.env.NODE_ENV !== 'development') {\n        'serviceWorker' in navigator && window.addEventListener('load', registerServiceWorker);\n    }\n};\n\nconst doAfter = (ms: number, cb: () => void): Promise<void> =>\n    new Promise((resolve) =>\n        Globals.window().setTimeout(() => {\n            cb();\n            resolve();\n        }, ms)\n    );\n\nexport const ServiceWorkerUpdater = () => {\n    const [content, setContent] = useState<ReactNode | void>();\n\n    const contentDelayed = useCallback(\n        (delay: number, content: ReactNode): Promise<void> => doAfter(delay, () => setContent(content)),\n        []\n    );\n\n    const initRefresh = useCallback(\n        () =>\n            Promise.all([\n                contentDelayed(0, 'Update gefunden'),\n                contentDelayed(1000, 'Update anwenden'),\n                contentDelayed(1300, 'Update anwenden.'),\n                contentDelayed(1600, 'Update anwenden..'),\n                contentDelayed(1900, 'Update anwenden...'),\n                contentDelayed(2200, <Icon.Undo />),\n                doAfter(2500, reloadPage),\n            ]),\n        [] // eslint-disable-line react-hooks/exhaustive-deps\n    );\n\n    useEffect(() => {\n        newSWInstalledCb = initRefresh;\n        initServiceWorker();\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    if (!content) return null;\n\n    return (\n        <div className=\"sw-update\">\n            <div className=\"sw-update-overlay\" />\n            <div className=\"sw-update-content\">{content}</div>\n        </div>\n    );\n};\n","import React, { Fragment, ReactNode, useEffect, useState } from 'react';\nimport { addIntlData } from 'first-intl';\nimport deIntl from './intl-de.json';\nimport enIntl from './intl-en.json';\nimport { Persistore } from 'persistore';\n\ntype SupportedLanguage = 'de' | 'en';\n\nconst _key = 'lang';\n\nconst _persist = (chosen: SupportedLanguage) => Persistore.set(_key, chosen);\nconst _getPersisted = (): SupportedLanguage | undefined => {\n    const saved = Persistore.get(_key);\n    return saved === 'de' || saved === 'en' ? saved : undefined;\n};\n\naddIntlData(deIntl);\n\nconst _detectPreferred = (): SupportedLanguage => {\n    const lang = navigator.language;\n    return lang && lang.startsWith('en') ? 'en' : 'de';\n};\n\nlet currentLang = _getPersisted() || _detectPreferred();\n\nif (currentLang !== 'de') {\n    addIntlData(enIntl);\n}\n\nconst Updater = { setKey: (key: SupportedLanguage) => {} };\n\nexport const toggleIntl = () => {\n    if (currentLang === 'de') {\n        currentLang = 'en';\n        addIntlData(enIntl);\n        Updater.setKey('en');\n        _persist('en');\n    } else {\n        currentLang = 'de';\n        addIntlData(deIntl);\n        Updater.setKey('de');\n        _persist('de');\n    }\n};\n\nexport const IntlRoot: React.FC<{ children: ReactNode }> = ({ children }) => {\n    const [key, setKey] = useState<SupportedLanguage>(currentLang);\n\n    useEffect(() => {\n        Updater.setKey = setKey;\n    }, []);\n\n    return <Fragment key={key}>{children}</Fragment>;\n};\n\nexport const getCurrentIntl = (): SupportedLanguage => currentLang;\n","/**\n * Wording conventions:\n * 1) search string => Part of the url preceded by the pathname.\n *      e.g.: ?uuid=whatever&page=4\n * 2) query string => search string without \"?\"\n *      e.g.: uuid=whatever&page=4\n * 3) query => the associated object of the query string\n *      e.g.: {uuid: 'whatever', page: '4'}\n *\n * ATTENTION: All values will be strings!!!\n */\n\n/**\n * Transforms location search string into query object.\n */\nconst locationSearchToQuery = (search: string = ''): { [key: string]: any } => {\n    const s = search.startsWith('?') ? search.substr(1) : search; // hash history not considered for now\n    const params = s.split('&');\n    const result = {} as { [key: string]: any };\n    for (let i = 0; i < params.length; i++) {\n        const param = params[i];\n        if (param) {\n            const pair = param.split('=');\n            const value = pair[1];\n            if (value !== undefined) result[decodeURIComponent(pair[0])] = decodeURIComponent(value);\n        }\n    }\n    return result;\n};\n\n/**\n * Transforms query object to query string.\n */\nconst queryToString = (query: { [key: string]: any }): string =>\n    Object.keys(query)\n        .map((key) => {\n            const value = query[key];\n            if (value !== undefined && value !== null) {\n                return `${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`;\n            }\n            return undefined;\n        })\n        .filter(Boolean)\n        .join('&');\n\n/**\n * Transforms query object to search string.\n */\nconst queryToSearch = (query: Object): string => {\n    const queryString = queryToString(query);\n    return queryString ? `?${queryString}` : '';\n};\n\nexport const UrlUtil = { queryToString, locationSearchToQuery, queryToSearch };\n","import React, { Fragment } from 'react';\n\nconst allReportedErrors: any[] = [];\nconst oldConsoleError = window.console.error;\nwindow.console.error = (...args: any[]) => {\n    allReportedErrors.push(...args);\n    oldConsoleError(...args);\n};\nwindow.onerror = (e) => {\n    allReportedErrors.push(e);\n};\n\nexport type AdminProps = { close: () => void };\n\nexport const Admin: React.FC<AdminProps> = ({ close }) => (\n    <div className=\"admin\">\n        <div className=\"console-error\">\n            <h1>console.error</h1>\n            {allReportedErrors.map((message, index) => (\n                <p key={index}>{String(message)}</p>\n            ))}\n        </div>\n        <div className=\"localStorage\">\n            <h1>localStorage</h1>\n            {Object.keys(localStorage).map((key) => (\n                <Fragment key={key}>\n                    <h3>{key}</h3>\n                    <p>{JSON.stringify(localStorage.getItem(key))}</p>\n                </Fragment>\n            ))}\n        </div>\n        <button onClick={close}>Close</button>\n    </div>\n);\n","import { Persistore } from 'persistore';\nimport { Util } from '../../util/util';\nimport { AllData, Data, dataOptions, DataOption } from './data';\nimport { Color } from './types';\nimport { createStore } from 'react-use-sub';\nimport { calculateTurn, getLastTurn } from './again-logic';\nimport { allLetters } from './Letters';\nimport { ColorList } from './ColorPoints';\n\nexport enum SplashIconType {\n    CANCEL = 'cancel',\n    UNDO = 'undo',\n    SUBMIT = 'submit',\n    SKIP = 'skip',\n}\n\nexport enum TurnType {\n    ROW = 'row',\n    COLOR = 'color',\n    JOKER = 'joker',\n    SKIP = 'skip',\n    CHOSEN = 'chosen',\n}\n\nexport type ChosenTurn = { color: Color; count: number; completedColor?: Color; completedRows?: boolean[] };\n\nexport type TurnState =\n    | { type: TurnType.ROW; data: string }\n    | { type: TurnType.COLOR; data: Color }\n    | { type: TurnType.JOKER }\n    | { type: TurnType.SKIP; index: number }\n    | { type: TurnType.CHOSEN; data: ChosenTurn; index: number };\n\nexport type AgainState = {\n    crossed: boolean[][];\n    rowPointsBlocked: boolean[];\n    colorPointsBlocked: boolean[];\n    takenJokers: number;\n    turns: TurnState[];\n};\n\nconst uncrossedRow: boolean[] = Util.array(7).map(() => false);\nexport const uncrossedGrid: boolean[][] = Util.array(15).map(() => uncrossedRow);\nconst unblockedRowPoints: boolean[] = Util.array(15).map(() => false);\nconst unblockedColorPoints: boolean[] = Util.array(5).map(() => false);\nconst initialAgainState: AgainState = {\n    crossed: uncrossedGrid,\n    rowPointsBlocked: unblockedRowPoints,\n    colorPointsBlocked: unblockedColorPoints,\n    takenJokers: 0,\n    turns: [],\n};\n\nexport type Chosen = { color: Color; count: number };\nexport type AgainStartedState = {\n    crossed: boolean[][];\n    turnCrossed: boolean[][];\n    chosen: Chosen | null;\n    completedColor: Color | null;\n};\nconst initialAgainStartedState: AgainStartedState = {\n    crossed: uncrossedGrid,\n    turnCrossed: uncrossedGrid,\n    chosen: null,\n    completedColor: null,\n};\n\ntype State = {\n    againSplash: SplashIconType | null;\n    again: AgainState;\n    againData: Data | null;\n    againStarted: AgainStartedState;\n};\n\nconst [useAgainSub, store] = createStore<State>({\n    againSplash: null,\n    again: initialAgainState,\n    againData: null,\n    againStarted: initialAgainStartedState,\n});\n\nexport { useAgainSub };\n\nconst setSplash = (icon: SplashIconType | null) => store.set({ againSplash: icon });\n\nconst _key = 'again';\nconst _keyChosen = 'again_chosen';\n\nconst getHistory = (): AgainState[] => {\n    try {\n        const states = Persistore.get(_key);\n        return JSON.parse(states as any);\n    } catch (e) {\n        return [];\n    }\n};\n\nconst randomNum = (limit: number) => Math.floor(Math.random() * limit);\nconst randomDataKey = (): DataOption => dataOptions[randomNum(dataOptions.length)];\n\nconst dataOption = (option: DataOption | 'random'): DataOption => (option === 'random' ? randomDataKey() : option);\n\nconst chooseData = (option: DataOption): void => {\n    const selectedOption = dataOption(option);\n    store.set({ againData: AllData[selectedOption] });\n    Persistore.set(_keyChosen, selectedOption);\n};\n\nconst setStarted = (updates: Partial<AgainStartedState>): void =>\n    store.set(({ againStarted }) => ({ againStarted: { ...againStarted, ...updates } }));\n\nconst set = (state: Partial<AgainState>): void => {\n    store.set(({ again }) => ({ again: { ...again, ...state } }));\n    const updatedState = store.get().again;\n\n    // update the crossed of the again started state\n    setStarted({ crossed: updatedState.crossed });\n\n    const history = getHistory();\n    history.unshift(updatedState);\n    if (history.length > 20) history.pop();\n    Persistore.set(_key, JSON.stringify(history));\n};\n\nconst undo = (): void => {\n    if (!store.get().againSplash) {\n        const history = getHistory();\n        if (history.length > 1) {\n            history.shift();\n            Persistore.set(_key, JSON.stringify(history));\n            store.set({ again: history[0], againSplash: SplashIconType.UNDO });\n        } else {\n            Persistore.remove(_key);\n            store.set({ again: initialAgainState, againSplash: history.length > 0 ? SplashIconType.UNDO : null });\n        }\n    }\n};\n\nconst get = (): AgainState => getHistory()[0] || initialAgainState;\nconst getChosenData = (): Data | null => {\n    const option = Persistore.get(_keyChosen);\n    return option ? AllData[(option as any) as DataOption] : null;\n};\n\nconst init = () => {\n    const againState = get();\n    store.set({\n        again: againState,\n        againData: getChosenData(),\n        againStarted: { ...initialAgainStartedState, crossed: againState.crossed },\n    });\n};\n\n// TODO: Make this action revertable by moving the chosen state into the again state\nconst restart = (): void => Persistore.remove(_key) || Persistore.remove(_keyChosen) || init();\n\ninit();\n\nconst onCross = (boxIndex: number, rowIndex: number): void => {\n    const {\n        againStarted: { crossed, turnCrossed, chosen },\n        againData,\n    } = store.get();\n    const currentRow = crossed[rowIndex];\n    if (!currentRow[boxIndex] && againData) {\n        const color = againData.grid[rowIndex][boxIndex];\n        if (chosen) {\n            if (color !== chosen.color) return; // many colors is not allowed\n            const alreadyPicked = chosen.count;\n            if (alreadyPicked > 4) return; // no more than 5 per color and turn\n        }\n        const updatedRow = Util.nextArray(currentRow, boxIndex, true);\n        const updatedTurnRow = Util.nextArray(turnCrossed[rowIndex], boxIndex, true);\n        const count = chosen ? chosen.count + 1 : 1;\n        AgainStore.setStarted({\n            crossed: Util.nextArray(crossed, rowIndex, updatedRow),\n            turnCrossed: Util.nextArray(turnCrossed, rowIndex, updatedTurnRow),\n            chosen: { color, count },\n        });\n    }\n};\n\nconst onFinish = () => {\n    const {\n        againStarted: { crossed, chosen },\n        againSplash,\n        again,\n        againData,\n    } = store.get();\n    if (!againSplash && againData) {\n        const lastTurn = getLastTurn(again.turns);\n        const lastTurnIndex = lastTurn ? (lastTurn as any).index : 0;\n        const madeTurn = calculateTurn(chosen, again.crossed, crossed, againData, lastTurnIndex);\n\n        AgainStore.set({ crossed, turns: [...again.turns, madeTurn] });\n        AgainStore.setSplash(madeTurn.type === TurnType.SKIP ? SplashIconType.SKIP : SplashIconType.SUBMIT);\n        AgainStore.setStarted({\n            turnCrossed: uncrossedGrid,\n            chosen: null,\n            completedColor: madeTurn.type === TurnType.CHOSEN ? madeTurn.data.completedColor : undefined,\n        });\n    }\n};\n\nconst onAbort = () => {\n    const { againSplash, again } = store.get();\n    if (!againSplash) {\n        AgainStore.setSplash(SplashIconType.CANCEL);\n        AgainStore.setStarted({\n            turnCrossed: uncrossedGrid,\n            chosen: null,\n            crossed: again.crossed,\n            completedColor: null,\n        });\n    }\n};\n\nconst onClosePopup = () => AgainStore.setStarted({ completedColor: null });\n\nconst takeJoker = () => {\n    const { takenJokers, turns } = get();\n    AgainStore.set({\n        takenJokers: takenJokers + 1,\n        turns: [...turns, { type: TurnType.JOKER }],\n    });\n};\n\nconst blockRowPoints = (index: number) => {\n    const { rowPointsBlocked, turns } = get();\n    AgainStore.set({\n        rowPointsBlocked: Util.nextArray(rowPointsBlocked, index, true),\n        turns: [...turns, { type: TurnType.ROW, data: allLetters[index] }],\n    });\n};\n\nconst blockColorPoints = (index: number) => {\n    const { colorPointsBlocked, turns } = get();\n    AgainStore.set({\n        colorPointsBlocked: Util.nextArray(colorPointsBlocked, index, true),\n        turns: [...turns, { type: TurnType.COLOR, data: ColorList[index] }],\n    });\n};\n\nexport const AgainStore = {\n    set,\n    undo,\n    restart,\n    chooseData,\n    setSplash,\n    setStarted,\n    onCross,\n    onFinish,\n    onAbort,\n    onClosePopup,\n    takeJoker,\n    blockRowPoints,\n    blockColorPoints,\n};\n","import React, { useCallback, useState } from 'react';\nimport { Admin } from './Admin';\n\nconst _AdminEntry = {\n    lastClicked: 0,\n    successCount: 0,\n    margin: 100,\n    timing: [474, 405, 135, 464, 919, 446], // TODO(VL): Rework this entry strategy. Does not work reliably on all devices\n};\n\n// TODO(VL): Should be possible everywhere to open the admin panel. Not only on first page\nexport const AdminEntry: React.FC = () => {\n    const [active, setActive] = useState(false);\n    const onClick = useCallback(() => {\n        const now = Date.now();\n        const diff = now - _AdminEntry.lastClicked;\n        if (diff > 2000) {\n            // console.log('First');\n            _AdminEntry.successCount = 0;\n        } else {\n            const timing = _AdminEntry.timing[_AdminEntry.successCount];\n            if (diff - _AdminEntry.margin < timing && timing < diff + _AdminEntry.margin) {\n                // console.log('Success');\n                if (_AdminEntry.successCount === 5) {\n                    _AdminEntry.successCount = 0;\n                    setActive(true);\n                } else {\n                    _AdminEntry.successCount++;\n                }\n            } else {\n                // console.log('Failed');\n                _AdminEntry.successCount = 0;\n            }\n        }\n        _AdminEntry.lastClicked = now;\n    }, []);\n\n    const close = useCallback(() => setActive(false), []);\n\n    return active ? <Admin close={close} /> : <div className=\"admin-entry\" onClick={onClick} />;\n};\n","import React from 'react';\nimport { __ } from 'first-intl';\nimport { getCurrentIntl, toggleIntl } from './intl';\nimport { AppNavigation, NavLoc } from './AppNavigation';\nimport { AdminEntry } from './admin/AdminEntry';\n\nexport const App: React.FC = () => (\n    <div className=\"App\">\n        <header className=\"App-header\">\n            <img src=\"/logo.svg\" className=\"App-logo\" alt=\"logo\" />\n            <img\n                src={getCurrentIntl() === 'de' ? '/flag.germany.svg' : '/flag.usa.svg'}\n                className=\"App-logo\"\n                alt=\"toggle language\"\n                onClick={toggleIntl}\n            />\n        </header>\n        <div className=\"App-content\">\n            <div className=\"preview\">\n                <AppNavigation.Link loc={NavLoc.AGAIN}>\n                    <img src=\"/preview-again.jpg\" alt=\"preview again\" loading=\"lazy\" />\n                    <h2>{__('AGAIN')}</h2>\n                </AppNavigation.Link>\n            </div>\n            <div className=\"preview\">\n                <AppNavigation.Link loc={NavLoc.SIT}>\n                    <img src=\"/preview-sit.jpg\" alt=\"preview sit\" loading=\"lazy\" />\n                    <h2>{__('SIT')}</h2>\n                </AppNavigation.Link>\n            </div>\n            <div className=\"preview\">\n                <AppNavigation.Link loc={NavLoc.VERY_CLEVER}>\n                    <img src=\"/preview-veryClever.jpg\" alt=\"preview veryClever\" loading=\"lazy\" />\n                    <h2>{__('VC')}</h2>\n                </AppNavigation.Link>\n            </div>\n            <div className=\"preview\">\n                <AppNavigation.Link loc={NavLoc.DECRYPTO}>\n                    <img src=\"/preview-decrypto.jpg\" alt=\"preview decrypto\" loading=\"lazy\" />\n                    <h2>{__('DECRYPTO')}</h2>\n                </AppNavigation.Link>\n            </div>\n        </div>\n        <AdminEntry />\n    </div>\n);\n","import { Color } from './types';\nimport { SelectOption } from '../../components/form/select';\nimport { StringMessage } from 'first-intl';\n\ntype RawData = { label: StringMessage; grid: string[]; stars: string; backgroundColor: string };\nexport type Data = { label: StringMessage; grid: Color[][]; stars: number[]; backgroundColor: string };\n\nconst parseRawGridData = (rowColors: string[]): Color[][] => rowColors.map((row: any) => row.split(''));\nconst parseRawStarPositions = (starPositions: string): number[] => starPositions.split('').map(Number);\nconst parseRawData = ({ label, grid, stars, backgroundColor }: RawData): Data => ({\n    label,\n    grid: parseRawGridData(grid),\n    stars: parseRawStarPositions(stars),\n    backgroundColor,\n});\n\nconst AllRawData = {\n    black: {\n        label: 'AGAIN.color.black',\n        backgroundColor: '#222222',\n        stars: '251513205150635',\n        grid: [\n            'GOBBRRY',\n            'GGGROBY',\n            'GYRROBB',\n            'YGGGORB',\n            'YYGOORB',\n            'YYGORRB',\n            'YOGBBRR',\n            'GORBBYY',\n            'BRRGOYY',\n            'BBRGOOY',\n            'BBYYORG',\n            'OOYYRBG',\n            'YOOORBG',\n            'YGGRRBO',\n            'YGGBROO',\n        ],\n    },\n    blue: {\n        label: 'AGAIN.color.blue',\n        backgroundColor: '#64a8ff',\n        stars: '125161046141324',\n        grid: [\n            'ROBBGGY',\n            'RROBBGY',\n            'GROOBYY',\n            'GBBORYY',\n            'YBGORRR',\n            'YGGGRBO',\n            'YYGRBBO',\n            'GGRRBYO',\n            'GGOOBYR',\n            'RRGOBYY',\n            'RGGOOBY',\n            'RYGOBBB',\n            'RRGBYOO',\n            'OOGBYYR',\n            'OOYYGBR',\n        ],\n    },\n    green: {\n        label: 'AGAIN.color.green',\n        backgroundColor: '#22b244',\n        stars: '044266214405344',\n        grid: [\n            'OGBBBRY',\n            'GGBORRY',\n            'BGOOORY',\n            'BGGORRY',\n            'RRYOBBG',\n            'RYYGOBB',\n            'RGGGOBY',\n            'GRBBOYY',\n            'GGRBBYO',\n            'GGRBYYO',\n            'YRRBOOG',\n            'YYROOBG',\n            'YYORRGB',\n            'RROOYGB',\n            'RYYOOGB',\n        ],\n    },\n    orange: {\n        label: 'AGAIN.color.orange',\n        backgroundColor: '#d03b09',\n        stars: '030414031051652',\n        grid: [\n            'OBYYRGG',\n            'OOBYYGR',\n            'YOBBGGR',\n            'OOGYBRR',\n            'RGGYBBO',\n            'RRRYGBO',\n            'RGGYYBO',\n            'GGYBOOR',\n            'OYYBBGR',\n            'RRYYBGO',\n            'GRRYBOO',\n            'GGRRBYO',\n            'GBBOOYR',\n            'GYYOBBR',\n            'GYOOBBR',\n        ],\n    },\n    pink: {\n        label: 'AGAIN.color.pink',\n        backgroundColor: '#9c2271',\n        stars: '206201230315514',\n        grid: [\n            'GRBBBOY',\n            'GOBBRYY',\n            'OOBRRGY',\n            'OYRRBGG',\n            'OGGRBBY',\n            'RGGGBOY',\n            'RBBGOOY',\n            'RYYOBGG',\n            'YYROBBG',\n            'BYRROOG',\n            'BGRYYOO',\n            'BOOGYYR',\n            'BOGGYRR',\n            'BOOGYRR',\n            'RROGBYY',\n        ],\n    },\n    violet: {\n        label: 'AGAIN.color.violet',\n        backgroundColor: '#701fa7',\n        stars: '530420214213612',\n        grid: [\n            'YOOOGBR',\n            'YBOGGGR',\n            'OBBYGRR',\n            'OBBYRGG',\n            'ORYYYGB',\n            'GRRYOOB',\n            'BROOGGY',\n            'BROGGYY',\n            'BROOYGG',\n            'YYBBORG',\n            'YYBBORG',\n            'RBBOOYG',\n            'RRRBOYG',\n            'GRBBOYY',\n            'GOBRRRY',\n        ],\n    },\n    yellow: {\n        label: 'AGAIN.color.yellow',\n        backgroundColor: '#d09012',\n        stars: '625062536324220',\n        grid: [\n            'RRBOYYG',\n            'GGROBYY',\n            'GRROBBY',\n            'YRBOOGG',\n            'YRBBOGG',\n            'YYGBROO',\n            'YYGBROO',\n            'OOGBRYY',\n            'RRGGBYO',\n            'RRGYBOO',\n            'GGRYBBO',\n            'GGBBRYO',\n            'GBORRYY',\n            'BBBROYG',\n            'YBRROOG',\n        ],\n    },\n};\n\nexport type DataOption = keyof typeof AllRawData;\nexport const AllData: { [key in DataOption]: Data } = {\n    black: parseRawData(AllRawData.black),\n    blue: parseRawData(AllRawData.blue),\n    green: parseRawData(AllRawData.green),\n    orange: parseRawData(AllRawData.orange),\n    pink: parseRawData(AllRawData.pink),\n    violet: parseRawData(AllRawData.violet),\n    yellow: parseRawData(AllRawData.yellow),\n};\nexport const dataOptions: DataOption[] = Object.keys(AllData) as any;\n\nexport const DataSelectionOptions: Array<SelectOption<DataOption>> = dataOptions.map(\n    (key: DataOption): SelectOption<DataOption> => ({\n        label: AllData[key].label,\n        value: key,\n    })\n);\n","export const COLOR = {\n    O: '#d65c0c',\n    B: '#0f63ff',\n    G: '#03860b',\n    R: '#cd0b1b',\n    Y: '#ffdf10',\n};\n\nexport type Color = keyof typeof COLOR;\n","import React from 'react';\nimport { Color, COLOR } from './types';\nimport { Util } from '../../util/util';\n\ntype BoxProps = {\n    content?: string | number;\n    color?: Color;\n    customColor?: string;\n    borderColor?: string;\n    star?: boolean;\n    circled?: boolean;\n    crossed?: boolean;\n    onClick?: () => void;\n    flicker?: boolean;\n};\nexport const Box: React.FC<BoxProps> = ({\n    content,\n    color,\n    customColor,\n    circled,\n    crossed,\n    onClick,\n    star,\n    borderColor,\n    flicker,\n}) => (\n    <div>\n        <div className={Util.classNames('box box-bordered', flicker && 'box-flicker')} onClick={onClick}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\">\n                <rect\n                    x=\"0\"\n                    y=\"0\"\n                    width=\"50\"\n                    height=\"50\"\n                    rx=\"10\"\n                    ry=\"10\"\n                    fill={(color && COLOR[color]) || customColor || 'white'}\n                />\n                {borderColor && (\n                    <rect\n                        x=\"1\"\n                        y=\"1\"\n                        width=\"48\"\n                        height=\"48\"\n                        rx=\"10\"\n                        ry=\"10\"\n                        fill=\"none\"\n                        stroke={borderColor}\n                        strokeWidth=\"3\"\n                    />\n                )}\n                {star && <polygon points=\"25 5 32 20 45 20 35 28 42 45 25 35 8 45 15 28 2 20 18 20\" fill=\"white\" />}\n                {content !== undefined && (\n                    <text textAnchor=\"middle\" x=\"25\" y=\"35\" fontSize=\"30\">\n                        {content}\n                    </text>\n                )}\n                {circled && <circle cx=\"25\" cy=\"25\" r=\"23\" fill=\"none\" stroke=\"black\" strokeWidth=\"2\" />}\n                {crossed && (\n                    <g stroke=\"black\" strokeWidth=\"4\">\n                        <line x1=\"5\" y1=\"5\" x2=\"45\" y2=\"45\" />\n                        <line x1=\"5\" y1=\"45\" x2=\"45\" y2=\"5\" />\n                    </g>\n                )}\n            </svg>\n        </div>\n    </div>\n);\n","import React from 'react';\nimport { AgainStore } from './again-store';\nimport { Box } from './Box';\nimport { Util } from '../../util/util';\nimport { Color } from './types';\n\nconst blockColorPoints = (index: number) => () => AgainStore.blockColorPoints(index);\n\nexport const ColorList: Color[] = 'OBGRY'.split('') as any;\n\ntype ColorPointsProps = { colorPointsBlocked: boolean[]; completedColors: boolean[] };\nexport const ColorPoints: React.FC<ColorPointsProps> = ({ colorPointsBlocked, completedColors }) => (\n    <div className={Util.classNames('again-color-points')}>\n        <div className=\"again-color-points-1\">\n            {ColorList.map((color: any, index) => (\n                <Box\n                    key={index}\n                    content={5}\n                    color={color}\n                    crossed={colorPointsBlocked[index]}\n                    onClick={blockColorPoints(index)}\n                    circled={!colorPointsBlocked[index] && completedColors[index]}\n                />\n            ))}\n        </div>\n        <div className=\"again-color-points-2\">\n            {ColorList.map((color, index) => (\n                <Box\n                    key={index}\n                    content={3}\n                    color={color}\n                    circled={colorPointsBlocked[index] && completedColors[index]}\n                />\n            ))}\n        </div>\n    </div>\n);\n","import { Data } from './data';\nimport { AgainState, Chosen, TurnState, TurnType } from './again-store';\nimport { ColorList } from './ColorPoints';\n\nconst rowPoints1 = '533322212223335'.split('').map(Number);\nconst rowPoints2 = '322211101112223'.split('').map(Number);\n\nexport const getCompletedRows = (crossed: boolean[][]): boolean[] =>\n    crossed.map((row) => row.every((checked) => checked));\nexport const getCompletedColors = (crossed: boolean[][], gridData: Data): boolean[] =>\n    'OBGRY'\n        .split('')\n        .map((color) =>\n            crossed.every((row, index) =>\n                row.every((checked, boxIndex) => gridData.grid[index][boxIndex] !== color || checked)\n            )\n        );\n\nconst getTotalPoints = (\n    again: AgainState,\n    gridData: Data,\n    completedRows: boolean[],\n    completedColors: boolean[]\n): number => {\n    const { rowPointsBlocked, colorPointsBlocked, crossed, takenJokers } = again;\n    const rowPoints = completedRows\n        .map((completed, index) => (!completed ? 0 : rowPointsBlocked[index] ? rowPoints2[index] : rowPoints1[index]))\n        .reduce((r, v) => r + v, 0);\n    const colorPoints = completedColors\n        .map((completed, index) => (!completed ? 0 : colorPointsBlocked[index] ? 3 : 5))\n        .reduce((r, v) => r + v, 0 as number);\n    const jokerPoints = 8 - takenJokers;\n    const starPoints = crossed\n        .map((row, index) => (row[gridData.stars[index]] ? 0 : -2))\n        .reduce((r, v) => r + v, 0 as number);\n\n    return rowPoints + colorPoints + jokerPoints + starPoints;\n};\n\nexport const getClickable = (crossed: boolean[][], allowMiddle: boolean = true): boolean[][] =>\n    crossed.map((row, rowIndex) =>\n        row.map(\n            (checked, boxIndex) =>\n                !checked &&\n                ((allowMiddle && rowIndex === 7) || // is allowed middle row\n                (crossed[rowIndex - 1] || {})[boxIndex] || // left box is checked\n                (crossed[rowIndex + 1] || {})[boxIndex] || // right box is checked\n                row[boxIndex - 1] || // upper box is checked\n                    row[boxIndex + 1]) // below box is checked\n        )\n    );\n\ntype Calculation = { completedRows: boolean[]; completedColors: boolean[]; totalPoints: number };\n\nexport const calculate = (again: AgainState, gridData: Data): Calculation => {\n    const completedRows = getCompletedRows(again.crossed);\n    const completedColors = getCompletedColors(again.crossed, gridData);\n    const totalPoints = getTotalPoints(again, gridData, completedRows, completedColors);\n    return { completedRows, completedColors, totalPoints };\n};\n\nexport const calculateTurn = (\n    chosen: Chosen | null,\n    lastCrossed: boolean[][],\n    crossed: boolean[][],\n    gridData: Data,\n    lastIndex: number\n): TurnState => {\n    if (chosen) {\n        const completedRows = getCompletedRows(lastCrossed);\n        const nextCompletedRows = getCompletedRows(crossed);\n        const newCompletedRows = nextCompletedRows.map((row, index) => row && !completedRows[index]);\n\n        const nextCompletedColors = getCompletedColors(crossed, gridData);\n        const completedColors = getCompletedColors(lastCrossed, gridData);\n\n        const newCompletedColor = nextCompletedColors\n            .map((row, index) => row && !completedColors[index])\n            .findIndex(Boolean);\n        return {\n            type: TurnType.CHOSEN,\n            data: {\n                ...chosen,\n                completedRows: newCompletedRows,\n                completedColor: ColorList[newCompletedColor] as any,\n            },\n            index: lastIndex + 1,\n        };\n    }\n    return { type: TurnType.SKIP, index: lastIndex + 1 };\n};\n\nexport const getLastTurn = (turns: TurnState[]): TurnState | undefined => {\n    const turnsWithIndex = turns.filter((turn: any) => typeof turn.index === 'number');\n    return turnsWithIndex.length > 0 ? turnsWithIndex[turnsWithIndex.length - 1] : undefined;\n};\n","import { Globals } from '../globals';\n\n/**\n * The wrapped function will be called debounced with a certain specified delay.\n */\nconst debounced = <T extends (...arg: any[]) => void>(func: T, delay: number): T => {\n    let lastPending = 0;\n    return ((...args: any[]) => {\n        Globals.window().clearTimeout(lastPending);\n        lastPending = Globals.window().setTimeout(() => func(...args), delay);\n    }) as any;\n};\n\n/*\n * Hof is a shortcut for (Higher Order Function).\n */\nexport const HofUtil = { debounced };\n","import { useRef, useCallback } from 'react';\nimport { Globals } from '../globals';\nimport { useEventListener } from './useEventListener';\nimport { HofUtil } from '../util/hof-util';\n\ntype ResizeCallback = (width: number) => void;\n\nexport const useWindowResizeEffect = (cb: ResizeCallback) => {\n    const callbackRef = useRef<ResizeCallback>(cb);\n    callbackRef.current = cb;\n\n    const callback = useCallback(\n        HofUtil.debounced(() => {\n            callbackRef.current(Globals.window().innerWidth);\n        }, 10),\n        []\n    );\n\n    useEventListener('resize', callback);\n};\n","import { useCallback, useEffect, useRef } from 'react';\nimport { Globals } from '../globals';\n\nexport const useEventListener = <K extends keyof WindowEventMap>(\n    type: K,\n    listener: (ev: WindowEventMap[K]) => any,\n    // The event propagation through the DOM happens in two phases, the capture and the bubble phase.\n    // During the capture phase the event propagates from the window down to the clicked element.\n    // After that the event \"bubbles\" up again to the window. See https://javascript.info/bubbling-and-capturing for more details.\n    // As a default the bubble phase is used to trigger the event listener.\n    // If you want to use the capture phase set the following flag.\n    capture?: boolean\n) => {\n    const ref = useRef<typeof listener>(listener);\n    ref.current = listener;\n\n    const wrapped = useCallback<typeof listener>((e) => {\n        ref.current(e);\n    }, []);\n\n    useEffect(() => {\n        Globals.window().addEventListener(type, wrapped, capture);\n        return () => Globals.window().removeEventListener(type, wrapped, capture);\n    }, [type, capture]); // eslint-disable-line react-hooks/exhaustive-deps\n};\n","import { useWindowResizeEffect } from '../../hooks/useWindowResizeEffect';\nimport { useEffect } from 'react';\n\nconst OPTIMAL_HEIGHT_WIDTH_RATIO = 0.48;\nexport const RESIZE_CLASS = 'again-resize';\n\nconst calculateNecessaryPadding = (): number => {\n    const ratioDiscrepancy = OPTIMAL_HEIGHT_WIDTH_RATIO - (window.innerHeight - 48) / window.innerWidth;\n    return ratioDiscrepancy > 0 ? ratioDiscrepancy * window.innerWidth : 0;\n};\n\nconst applyPadding = () => {\n    const padding = calculateNecessaryPadding();\n    const paddingValue = padding ? `0 ${padding}px` : '';\n    Array.from(document.getElementsByClassName(RESIZE_CLASS)).forEach((elem) => {\n        (elem as HTMLElement).style.setProperty('padding', paddingValue);\n    });\n};\n\nexport const useAgainResize = () => {\n    useEffect(applyPadding, []);\n    useWindowResizeEffect(applyPadding);\n};\n","import React from 'react';\nimport { Box } from './Box';\nimport { Util } from '../../util/util';\nimport { RESIZE_CLASS } from './again-resize';\n\nexport const allLetters = 'ABCDEFGHIJKLMNO'.split('');\n\nexport const Letters: React.FC = () => (\n    <div className={Util.classNames('again-letters', RESIZE_CLASS)}>\n        {allLetters.map((letter, index) => (\n            <Box key={index} content={letter} />\n        ))}\n    </div>\n);\n","import React, { ReactNode } from 'react';\nimport { AgainStore } from './again-store';\nimport { Util } from '../../util/util';\n\nconst BoxWrapper: React.FC<{ children: ReactNode; onClick?: () => void }> = ({ children, onClick }) => (\n    <div>\n        <div className=\"box\" onClick={onClick}>\n            {children}\n        </div>\n    </div>\n);\n\nconst NumberJoker: React.FC = () => (\n    <BoxWrapper>\n        <svg viewBox=\"0 0 50 50\">\n            <rect x=\"0\" y=\"0\" width=\"50\" height=\"50\" rx=\"10\" ry=\"10\" fill=\"black\" />\n            <text textAnchor=\"middle\" x=\"25\" y=\"38\" fontSize=\"40\" fontWeight=\"900\" fill=\"white\">\n                ?\n            </text>\n        </svg>\n    </BoxWrapper>\n);\n\nconst ColorJoker: React.FC = () => (\n    <BoxWrapper>\n        <svg viewBox=\"0 0 50 50\">\n            <rect x=\"0\" y=\"0\" width=\"50\" height=\"50\" rx=\"10\" ry=\"10\" fill=\"black\" />\n            <g stroke=\"white\" strokeWidth=\"10\">\n                <line x1=\"10\" y1=\"10\" x2=\"40\" y2=\"40\" />\n                <line x1=\"10\" y1=\"40\" x2=\"40\" y2=\"10\" />\n            </g>\n        </svg>\n    </BoxWrapper>\n);\n\nconst JokerSeparator: React.FC = () => (\n    <BoxWrapper>\n        <svg viewBox=\"0 0 50 50\">\n            <line x1=\"15\" y1=\"45\" x2=\"35\" y2=\"5\" stroke=\"black\" strokeWidth=\"10\" />\n        </svg>\n    </BoxWrapper>\n);\n\nconst EqualSign: React.FC = () => (\n    <BoxWrapper>\n        <svg viewBox=\"0 0 50 50\">\n            <line x1=\"10\" y1=\"20\" x2=\"40\" y2=\"20\" stroke=\"black\" strokeWidth=\"7\" />\n            <line x1=\"10\" y1=\"30\" x2=\"40\" y2=\"30\" stroke=\"black\" strokeWidth=\"7\" />\n        </svg>\n    </BoxWrapper>\n);\n\nexport const JokerPlaceholder: React.FC<{ taken: boolean; onClick?: () => void }> = ({ taken, onClick }) => (\n    <BoxWrapper onClick={onClick}>\n        <svg viewBox=\"0 0 50 50\">\n            <circle cx=\"25\" cy=\"25\" r=\"23\" fill=\"white\" stroke=\"black\" strokeWidth=\"2\" />\n            <text textAnchor=\"middle\" x=\"25\" y=\"38\" fontSize=\"40\" fontWeight=\"900\">\n                !\n            </text>\n            {taken && (\n                <g stroke=\"black\" strokeWidth=\"4\">\n                    <line x1=\"7\" y1=\"7\" x2=\"43\" y2=\"43\" />\n                    <line x1=\"7\" y1=\"43\" x2=\"43\" y2=\"7\" />\n                </g>\n            )}\n        </svg>\n    </BoxWrapper>\n);\n\ntype JokersProps = { takenJokers: number };\nexport const Jokers: React.FC<JokersProps> = ({ takenJokers }) => (\n    <div className=\"again-jokers\">\n        <NumberJoker />\n        <JokerSeparator />\n        <ColorJoker />\n        <EqualSign />\n        {Util.array(8).map((_, index) => (\n            <JokerPlaceholder\n                onClick={index === takenJokers ? AgainStore.takeJoker : undefined}\n                key={index}\n                taken={index < takenJokers}\n            />\n        ))}\n    </div>\n);\n","import React from 'react';\nimport { AgainStore, TurnState, TurnType } from './again-store';\nimport { Box } from './Box';\nimport { Util } from '../../util/util';\nimport { RESIZE_CLASS } from './again-resize';\n\nconst rowPoints1 = '533322212223335'.split('').map(Number);\nconst rowPoints2 = '322211101112223'.split('').map(Number);\n\nconst blockRowPoints = (index: number) => () => AgainStore.blockRowPoints(index);\n\nexport const rowWasCompleted = (index: number, lastTurn?: TurnState): boolean =>\n    Boolean(\n        lastTurn &&\n            lastTurn.type === TurnType.CHOSEN &&\n            lastTurn.data.completedRows &&\n            lastTurn.data.completedRows[index]\n    );\n\nconst COMPLETED = '#5eee61';\n\ntype RowPointsProps = { rowPointsBlocked: boolean[]; completedRows: boolean[]; lastTurn?: TurnState };\nexport const RowPoints: React.FC<RowPointsProps> = ({ rowPointsBlocked, completedRows, lastTurn }) => (\n    <div className={Util.classNames('again-row-points', RESIZE_CLASS)}>\n        <div className=\"again-row-points-1\">\n            {rowPoints1.map((num, index) => (\n                <Box\n                    key={index}\n                    content={num}\n                    crossed={rowPointsBlocked[index]}\n                    onClick={rowPointsBlocked[index] ? undefined : blockRowPoints(index)}\n                    circled={!rowPointsBlocked[index] && completedRows[index]}\n                    customColor={!rowPointsBlocked[index] && rowWasCompleted(index, lastTurn) ? COMPLETED : undefined}\n                />\n            ))}\n        </div>\n        <div className=\"again-row-points-2\">\n            {rowPoints2.map((num, index) => (\n                <Box\n                    key={index}\n                    content={num}\n                    circled={rowPointsBlocked[index] && completedRows[index]}\n                    customColor={rowPointsBlocked[index] && rowWasCompleted(index, lastTurn) ? COMPLETED : undefined}\n                />\n            ))}\n        </div>\n    </div>\n);\n","import React, { useCallback } from 'react';\nimport { Color } from './types';\nimport { Box } from './Box';\nimport { Data } from './data';\nimport { Util } from '../../util/util';\nimport { TurnState } from './again-store';\nimport { RESIZE_CLASS } from './again-resize';\nimport { rowWasCompleted } from './RowPoints';\n\ntype GridProps = {\n    gridData: Data;\n    crossed: boolean[][];\n    clickable: boolean[][];\n    onCross: (boxIndex: number, rowIndex: number) => void;\n    lastTurn?: TurnState;\n};\n\nexport const Grid: React.FC<GridProps> = ({ gridData, crossed, clickable, lastTurn, onCross }) => {\n    const onClickHandler = useCallback((boxIndex: number, rowIndex: number) => () => onCross(boxIndex, rowIndex), [\n        onCross,\n    ]);\n    return (\n        <div className={Util.classNames('again-grid', RESIZE_CLASS)}>\n            {gridData.grid.map((row: Color[], rowIndex: number) => (\n                <div\n                    className={Util.classNames('again-row', rowWasCompleted(rowIndex, lastTurn) && 'row-alert')}\n                    key={rowIndex}>\n                    {row.map((color, boxIndex) => {\n                        const starPosition = gridData.stars[rowIndex];\n                        const crossedRow = crossed[rowIndex];\n                        const isMiddleRow = rowIndex === 7;\n                        const isClickable = clickable[rowIndex][boxIndex];\n\n                        return (\n                            <Box\n                                onClick={isClickable ? onClickHandler(boxIndex, rowIndex) : undefined}\n                                key={boxIndex}\n                                color={color}\n                                star={starPosition === boxIndex}\n                                crossed={crossedRow[boxIndex]}\n                                borderColor={isMiddleRow ? 'white' : 'black'}\n                            />\n                        );\n                    })}\n                </div>\n            ))}\n        </div>\n    );\n};\n","import React from 'react';\nimport { Color, COLOR } from './types';\n\nconst VALUE_SVG = [\n    <text x=\"110\" y=\"420\" fontSize=\"500\" key=\"0\">\n        ?\n    </text>,\n    <circle cx=\"250\" cy=\"250\" r=\"50\" fill=\"black\" key=\"1\" />,\n    <g fill=\"black\" key=\"2\">\n        <circle cx=\"125\" cy=\"375\" r=\"50\" />\n        <circle cx=\"375\" cy=\"125\" r=\"50\" />\n    </g>,\n    <g fill=\"black\" key=\"3\">\n        <circle cx=\"125\" cy=\"375\" r=\"50\" />\n        <circle cx=\"250\" cy=\"250\" r=\"50\" />\n        <circle cx=\"375\" cy=\"125\" r=\"50\" />\n    </g>,\n    <g fill=\"black\" key=\"4\">\n        <circle cx=\"125\" cy=\"375\" r=\"50\" />\n        <circle cx=\"125\" cy=\"125\" r=\"50\" />\n        <circle cx=\"375\" cy=\"375\" r=\"50\" />\n        <circle cx=\"375\" cy=\"125\" r=\"50\" />\n    </g>,\n    <g fill=\"black\" key=\"5\">\n        <circle cx=\"125\" cy=\"375\" r=\"50\" />\n        <circle cx=\"125\" cy=\"125\" r=\"50\" />\n        <circle cx=\"250\" cy=\"250\" r=\"50\" />\n        <circle cx=\"375\" cy=\"375\" r=\"50\" />\n        <circle cx=\"375\" cy=\"125\" r=\"50\" />\n    </g>,\n];\n\ntype CubeProps = { count?: number; color?: Color };\n\nexport const Cube: React.FC<CubeProps> = ({ count, color }) => {\n    const innerValue = count !== undefined ? VALUE_SVG[count] : undefined;\n\n    return (\n        <div className=\"cube\">\n            <svg className=\"icon\" viewBox=\"0 0 500 500\">\n                <rect x=\"0\" y=\"0\" width=\"500\" height=\"500\" rx=\"100\" ry=\"100\" fill=\"white\" />\n                {innerValue || (\n                    <g stroke={(color && COLOR[color]) || 'black'} strokeWidth=\"100\">\n                        <line x1=\"80\" y1=\"80\" x2=\"420\" y2=\"420\" />\n                        <line x1=\"80\" y1=\"420\" x2=\"420\" y2=\"80\" />\n                    </g>\n                )}\n            </svg>\n        </div>\n    );\n};\n","import React, { ReactNode, ReactNodeArray, useCallback, useEffect, useState } from 'react';\nimport { Icon } from '../components/icons/icon';\nimport { __, Message } from 'first-intl';\nimport { ClientHistory } from '../globals';\nimport { Util } from '../util/util';\n\nexport type FooterButtonProps = {\n    onClick?: () => void;\n    description?: Message;\n    children: ReactNode;\n    className?: string;\n};\n\nexport const FooterButton: React.FC<FooterButtonProps> = ({ onClick, description, children, className }) => (\n    <div className={Util.classNames('footer-action', className, !onClick && 'no-handler')} onClick={onClick}>\n        {children}\n        {description && <div className=\"small\">{__(description)}</div>}\n    </div>\n);\n\nconst FooterHome: React.FC = () => (\n    <FooterButton onClick={ClientHistory.back} description=\"APP.home\">\n        <Icon.Home />\n    </FooterButton>\n);\n\nconst applyFooterHeight = (open: boolean) =>\n    document.getElementById('root')!.style.setProperty('--footer-height', open ? '3rem' : '0px');\n\ntype FooterProps = {\n    expandable?: boolean;\n    hideHome?: boolean;\n    className?: string;\n    children?: ReactNodeArray | ReactNode;\n};\n\nexport const Footer: React.FC<FooterProps> = ({ children, expandable, hideHome, className }) => {\n    const [open, setOpen] = useState(true);\n    const toggle = useCallback(() => setOpen((o) => !o), []);\n\n    useEffect(() => {\n        if (!expandable) setOpen(true);\n    }, [expandable]);\n\n    useEffect(() => {\n        applyFooterHeight(open);\n    }, [open]);\n\n    useEffect(() => () => applyFooterHeight(false), []);\n\n    if (!open)\n        return (\n            <footer className={className}>\n                <div className=\"footer-handle closed\" onClick={toggle}>\n                    <Icon.ChevronUp />\n                </div>\n            </footer>\n        );\n\n    return (\n        <footer className={className}>\n            {expandable && (\n                <div className=\"footer-handle\" onClick={toggle}>\n                    <Icon.ChevronDown />\n                </div>\n            )}\n            <div className=\"footer-border\" />\n            <nav>\n                <div className=\"footer-actions\">\n                    {hideHome || <FooterHome />}\n                    {children}\n                </div>\n            </nav>\n        </footer>\n    );\n};\n","import React from 'react';\nimport { Cube } from './Cube';\nimport { Icon } from '../../components/icons/icon';\nimport { Box } from './Box';\nimport { allLetters } from './Letters';\nimport { AgainStore, Chosen, ChosenTurn, TurnState, TurnType } from './again-store';\nimport { __ } from 'first-intl';\nimport { Footer, FooterButton } from '../../footer/Footer';\nimport { JokerPlaceholder } from './Jokers';\n\nexport const Abort = () => (\n    <svg className=\"icon\" viewBox=\"0 0 500 500\">\n        <g stroke=\"red\" strokeWidth=\"100\">\n            <line x1=\"80\" y1=\"80\" x2=\"420\" y2=\"420\" />\n            <line x1=\"80\" y1=\"420\" x2=\"420\" y2=\"80\" />\n        </g>\n    </svg>\n);\n\nexport const Finish = () => (\n    <svg className=\"icon\" viewBox=\"0 0 500 500\">\n        <g stroke=\"darkgreen\" strokeWidth=\"100\">\n            <line x1=\"70\" y1=\"180\" x2=\"262\" y2=\"347\" />\n            <line x1=\"220\" y1=\"320\" x2=\"420\" y2=\"80\" />\n        </g>\n    </svg>\n);\n\nconst SkipTurn: React.FC = () => (\n    <>\n        <Icon.Ban className=\"cube\" />\n    </>\n);\n\ntype ChosenTurnDisplayProps = { chosen: ChosenTurn };\nconst ChosenTurnDisplay: React.FC<ChosenTurnDisplayProps> = ({ chosen: { count, color } }) => (\n    <>\n        <Cube count={count} />\n        <Cube color={color} />\n    </>\n);\n\ntype FooterTurnControlProps = { chosen: Chosen };\nexport const FooterTurnControl: React.FC<FooterTurnControlProps> = ({ chosen }) => (\n    <Footer hideHome className=\"turn-control top\">\n        <FooterButton onClick={AgainStore.onAbort}>\n            <Abort />\n        </FooterButton>\n        <FooterButton className=\"turn\">\n            <ChosenTurnDisplay chosen={chosen} />\n        </FooterButton>\n        <FooterButton onClick={AgainStore.onFinish}>\n            <Finish />\n        </FooterButton>\n    </Footer>\n);\n\nconst Success: React.FC<{ chosen: ChosenTurn }> = ({ chosen: { completedColor, completedRows } }) => {\n    const completed = [];\n    if (completedColor) completed.push(<Cube color={completedColor} key=\"color\" />);\n    if (completedRows)\n        completedRows.forEach((isCompleted, index) => {\n            if (isCompleted) completed.push(<Box content={allLetters[index]} key={index} />);\n        });\n    return completed.length > 0 ? (\n        <>\n            <Icon.ArrowRight className=\"success-arrow\" />\n            {completed}\n        </>\n    ) : null;\n};\n\nexport const Turn: React.FC<{ turn: TurnState; hideIndex?: boolean }> = ({ turn, hideIndex }) => {\n    switch (turn.type) {\n        case TurnType.CHOSEN:\n            return (\n                <div className=\"again-turn\">\n                    {hideIndex || `${turn.index}) `}\n                    <div className=\"turn-chosen\">\n                        <ChosenTurnDisplay chosen={turn.data} />\n                    </div>\n                    {hideIndex || (\n                        <div className=\"turn-success\">\n                            <Success chosen={turn.data} />\n                        </div>\n                    )}\n                </div>\n            );\n        case TurnType.SKIP:\n            return (\n                <div className=\"again-turn\">\n                    {hideIndex || `${turn.index}) `}\n                    <div className=\"turn-chosen\">\n                        <SkipTurn />\n                    </div>\n                </div>\n            );\n        case TurnType.JOKER:\n            return (\n                <div className=\"again-pseudo-turn\">\n                    <JokerPlaceholder taken />\n                </div>\n            );\n        case TurnType.COLOR:\n            return (\n                <div className=\"again-pseudo-turn\">\n                    <Box color={turn.data} crossed />\n                </div>\n            );\n        case TurnType.ROW:\n            return (\n                <div className=\"again-pseudo-turn\">\n                    <Box content={turn.data} crossed />\n                </div>\n            );\n    }\n};\n\ntype TurnsProps = { turns: TurnState[] };\nexport const Turns = ({ turns }: TurnsProps) => (\n    <div className=\"again-turns\">\n        <h4>{__('AGAIN.madeTurns')}</h4>\n        {turns.map((turn, index) => (\n            <Turn turn={turn} key={index} />\n        ))}\n    </div>\n);\n","import React from 'react';\nimport { Turn } from './Turn';\nimport { TurnState } from './again-store';\nimport { __ } from 'first-intl';\n\ntype TotalProps = { totalPoints: number; lastTurn?: TurnState };\nexport const Total: React.FC<TotalProps> = ({ totalPoints, lastTurn }) => (\n    <div className=\"again-total\">\n        {__('AGAIN.points')}\n        <div className=\"again-total-points\">{totalPoints}</div>\n        {lastTurn && (\n            <div className=\"again-last-turn\">\n                {__('AGAIN.lastTurn')}\n                <Turn hideIndex turn={lastTurn} />\n            </div>\n        )}\n    </div>\n);\n","import React from 'react';\nimport { Color } from './types';\nimport { Cube } from './Cube';\nimport { __ } from 'first-intl';\n\ntype CompletionPopupProps = { color: Color; onClose: () => void };\n\nexport const CompletionPopup = ({ color, onClose }: CompletionPopupProps) => (\n    <div className=\"again-popup\" onClick={onClose}>\n        <div className=\"popup-overlay\" />\n        <div className=\"popup-content\">\n            {__('AGAIN.color.finished')}\n            <Cube color={color} />\n        </div>\n    </div>\n);\n","import React, { ReactNode, useEffect } from 'react';\nimport { Abort, Finish } from './Turn';\nimport { Icon } from '../../components/icons/icon';\nimport { AgainStore, SplashIconType, useAgainSub } from './again-store';\n\nconst renderIcon = (iconType: SplashIconType | null): ReactNode => {\n    if (!iconType) return null;\n    switch (iconType) {\n        case 'cancel':\n            return <Abort />;\n        case 'submit':\n            return <Finish />;\n        case 'undo':\n            return <Icon.Undo className=\"reflect\" />;\n        case 'skip':\n            return <Icon.Ban />;\n        default:\n            return null;\n    }\n};\n\nconst hide = () => AgainStore.setSplash(null);\n\nexport const ActionSplash: React.FC = () => {\n    const { icon } = useAgainSub(({ againSplash }) => ({ icon: againSplash }));\n\n    useEffect(\n        () => () => {\n            window.setTimeout(hide, 500);\n        },\n        [icon]\n    );\n\n    const iconView = renderIcon(icon);\n\n    if (!iconView) return null;\n\n    return (\n        <div className=\"again-splash\">\n            <div className=\"splash-overlay\" />\n            <div className=\"splash-content\">{iconView}</div>\n        </div>\n    );\n};\n","import React from 'react';\nimport { AgainStore, useAgainSub } from './again-store';\nimport { Data } from './data';\nimport { Jokers } from './Jokers';\nimport { Grid } from './Grid';\nimport { Letters } from './Letters';\nimport { calculate, getClickable, getLastTurn } from './again-logic';\nimport { RowPoints } from './RowPoints';\nimport { ColorPoints } from './ColorPoints';\nimport { Total } from './Total';\nimport { Turns } from './Turn';\nimport { CompletionPopup } from './CompletionPopup';\nimport { ActionSplash } from './ActionSplash';\nimport { useAgainResize } from './again-resize';\n\nexport const AgainStarted: React.FC<{ gridData: Data }> = ({ gridData }) => {\n    useAgainResize();\n    const { again, againSplash, againStarted } = useAgainSub(({ again, againSplash, againStarted }) => ({\n        again,\n        againSplash,\n        againStarted,\n    }));\n    const { crossed, chosen, turnCrossed, completedColor } = againStarted;\n\n    const { rowPointsBlocked, colorPointsBlocked, takenJokers, turns } = again;\n    const { completedRows, completedColors, totalPoints } = calculate(again, gridData);\n    const { backgroundColor } = gridData;\n    const clickable = chosen ? getClickable(turnCrossed, false) : getClickable(crossed);\n    const lastTurn = getLastTurn(turns);\n\n    return (\n        <div className=\"again\" style={{ backgroundColor }}>\n            <ActionSplash />\n            {completedColor && !againSplash && (\n                <CompletionPopup color={completedColor} onClose={AgainStore.onClosePopup} />\n            )}\n            <div className=\"again-inner\">\n                <Grid\n                    gridData={gridData}\n                    crossed={crossed}\n                    clickable={clickable}\n                    onCross={AgainStore.onCross}\n                    lastTurn={lastTurn}\n                />\n                <Letters />\n                <RowPoints rowPointsBlocked={rowPointsBlocked} completedRows={completedRows} lastTurn={lastTurn} />\n                <Jokers takenJokers={takenJokers} />\n                <ColorPoints colorPointsBlocked={colorPointsBlocked} completedColors={completedColors} />\n                <Total totalPoints={totalPoints} lastTurn={lastTurn} />\n                <Turns turns={turns} />\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport { __, Message } from 'first-intl';\n\nexport const DisplayError: React.FC<{ error: Message }> = ({ error }) => (\n    <span className=\"invalid-feedback\">{__(error)}</span>\n);\n","type Event = { preventDefault: Function; target: { value: any } };\ntype EventHandler = (event: Event) => void;\n\ntype CustomInputHandling = { preventDefault?: boolean };\n\nconst inputHandler = (\n    cb: (_: any) => unknown | void,\n    { preventDefault = true }: CustomInputHandling = {}\n): EventHandler => (event) => {\n    if (preventDefault) event.preventDefault();\n    const original = event.target.value;\n    cb(original);\n};\n\nconst preventDefault = (event: any) => event.preventDefault();\n\nexport const EventUtil = { inputHandler, preventDefault };\n","import React, { ReactElement } from 'react';\nimport { __, __string, Message, StringMessage } from 'first-intl';\nimport { DisplayError } from './DisplayError';\nimport { ErrorMessage, iField } from 'morfi';\nimport { Util } from '../../util/util';\nimport { EventUtil } from '../../util/event-util';\n\nexport type SelectOption<T> = { label: StringMessage | string; value: T };\n\ntype SelectHandler<T> = (value: T) => void;\n\ntype CommonSelectProps<T> = {\n    name?: string;\n    label?: Message;\n    className?: string;\n    options: ReadonlyArray<SelectOption<T>>;\n    disabled?: boolean;\n    serialize?: (value: T) => string;\n};\n\ntype SelectProps<T> = {\n    required?: boolean;\n    onChange?: SelectHandler<T>;\n    onBlur?: SelectHandler<T>;\n    value: T;\n    error?: ErrorMessage;\n} & CommonSelectProps<T>;\n\n/**\n * ATTENTION: Since react v16.6 you have to supply strings or numbers within <option> tags.\n *            So you should not use any placeholders inside the messages you use as\n *            label for the select options.\n */\nconst Option: React.FC<{ label: StringMessage; value: string }> = ({ label, value }) => (\n    <option value={value}>{__string(label)}</option>\n);\n\ntype GetOptionValues = <T>(options: ReadonlyArray<SelectOption<T>>, serialize?: (value: T) => string) => string[];\nconst getOptionValues: GetOptionValues = (options, serialize) => {\n    const values = options.map((o) => o.value);\n    return serialize\n        ? values.map(serialize)\n        : values.map((v, i) => (v === undefined ? '' : typeof v === 'string' ? v : String(i)));\n};\n\nexport const Select: <T>(p: SelectProps<T>) => ReactElement = ({\n    value,\n    serialize,\n    label,\n    error,\n    required,\n    className,\n    onChange,\n    onBlur,\n    options,\n    disabled,\n    name,\n}) => {\n    const optionValues = getOptionValues(options, serialize);\n    const handlerRemapped = (handler?: typeof onChange) => (optionValue: string) =>\n        handler && handler(options[optionValues.indexOf(optionValue)].value);\n    const currentValue = options.find((option) => option.value === value);\n    const currentIndex = currentValue ? options.indexOf(currentValue) : 0;\n\n    return (\n        <div\n            className={Util.classNames(\n                className,\n                required && 'required',\n                !value && 'unselected',\n                error && 'has-error'\n            )}>\n            {label && <label>{__(label)}</label>}\n            <select\n                className=\"custom-select\"\n                name={name}\n                disabled={disabled}\n                onChange={EventUtil.inputHandler(handlerRemapped(onChange))}\n                onBlur={EventUtil.inputHandler(handlerRemapped(onBlur))}\n                value={optionValues[currentIndex]}>\n                {options.map((option, index: number) => (\n                    <Option label={option.label} value={optionValues[index]} key={index} />\n                ))}\n            </select>\n            {error && <DisplayError error={error} />}\n        </div>\n    );\n};\n\ntype FormSelectProps<T> = { Field: iField<T> } & CommonSelectProps<T>;\n\nexport const FormSelect: <T>(p: FormSelectProps<T>) => React.ReactElement<FormSelectProps<T>> = ({\n    Field,\n    className = 'form-control',\n    ...rest\n}) => (\n    <Field>\n        {({ onChange, onBlur, required, value, error }) => (\n            <Select {...{ value, error, required, onBlur, onChange, className }} {...rest} />\n        )}\n    </Field>\n);\n","import React from 'react';\nimport { DataOption, DataSelectionOptions } from './data';\nimport { AgainStore } from './again-store';\nimport { Select, SelectOption } from '../../components/form/select';\n\nconst placeHolderOption = { label: 'AGAIN.color.choose', value: undefined };\nconst randomOption = { label: 'AGAIN.color.random', value: 'random' as DataOption };\nconst onSelect = (option?: DataOption) => option && AgainStore.chooseData(option);\n\nconst OptionsWithRandom: SelectOption<DataOption | undefined>[] = [\n    placeHolderOption,\n    ...DataSelectionOptions,\n    randomOption,\n];\n\nexport const DataSelection: React.FC = () => (\n    <div className=\"again-selection\">\n        <Select options={OptionsWithRandom} onChange={onSelect} value={undefined} />\n    </div>\n);\n","import React, { Component, ReactNode } from 'react';\nimport { __ } from 'first-intl';\n\ntype ErrorBoundaryProps = { fix: () => void; children: ReactNode };\ntype ErrorBoundaryState = { hasError: boolean };\n\nexport class ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    state: ErrorBoundaryState = { hasError: false };\n\n    static getDerivedStateFromError = (): ErrorBoundaryState => ({ hasError: true });\n\n    render() {\n        const { hasError } = this.state;\n        const { children, fix } = this.props;\n\n        if (hasError) {\n            return (\n                <div className=\"game-error\">\n                    <h2>{__('error.boundary.unexpected')}</h2>\n                    <p>{__('error.boundary.sorry')}</p>\n                    <button type=\"button\" onClick={fix}>\n                        {__('error.boundary.fix')}\n                    </button>\n                </div>\n            );\n        }\n        return children;\n    }\n}\n","import React from 'react';\nimport { Icon } from '../components/icons/icon';\nimport { FooterButton } from './Footer';\n\nexport type FooterUndoProps = { onClick: () => void };\n\nexport const FooterUndo: React.FC<FooterUndoProps> = ({ onClick }) => (\n    <FooterButton onClick={onClick} description=\"APP.undo\">\n        <Icon.Undo className=\"reflect\" />\n    </FooterButton>\n);\n","import React from 'react';\nimport { Icon } from '../components/icons/icon';\nimport { FooterButton } from './Footer';\n\nexport type FooterRestartProps = { onClick: () => void };\n\nexport const FooterRestart: React.FC<FooterRestartProps> = ({ onClick }) => (\n    <FooterButton onClick={onClick} description=\"APP.restart\">\n        <Icon.PowerOff />\n    </FooterButton>\n);\n","import React from 'react';\nimport { AgainStarted } from './AgainStarted';\nimport { DataSelection } from './DataSelection';\nimport { ErrorBoundary } from '../../components/ErrorBoundary';\nimport { AgainStore, useAgainSub } from './again-store';\nimport { Footer, FooterButton } from '../../footer/Footer';\nimport { FooterUndo } from '../../footer/FooterUndo';\nimport { FooterRestart } from '../../footer/FooterRestart';\nimport { Icon } from '../../components/icons/icon';\nimport { FooterTurnControl } from './Turn';\n\nconst FooterStarted = () => (\n    <Footer className=\"top\">\n        <FooterUndo onClick={AgainStore.undo} />\n        <FooterRestart onClick={AgainStore.restart} />\n        <FooterButton onClick={AgainStore.onFinish} description=\"APP.skip\">\n            <Icon.Forward />\n        </FooterButton>\n    </Footer>\n);\n\nexport const Again: React.FC = () => {\n    const { againData, chosen } = useAgainSub(({ againData, againStarted: { chosen } }) => ({ againData, chosen }));\n    if (!againData)\n        return (\n            <>\n                <DataSelection />\n                <Footer />\n            </>\n        );\n    return (\n        <ErrorBoundary fix={AgainStore.restart}>\n            <>\n                {chosen ? <FooterTurnControl chosen={chosen} /> : <FooterStarted />}\n                <AgainStarted gridData={againData} />\n            </>\n        </ErrorBoundary>\n    );\n};\n","import React, { Component } from 'react';\nimport { Globals } from '../globals';\n\nconst missions = [\n    {\n        title: 'Save the world',\n        text:\n            'Did you never think about saving the world? You can do it. Just follow the given instructions...' +\n            'You need to modify your attitude. You have to become more optimistic and you should... bla blub foo bar',\n    },\n    {\n        title: 'Marry her',\n        text: 'It is finally the time. Get the ring. Make the first step and perform your show to win her heart <3',\n    },\n    {\n        title: 'Punch a bear',\n        text:\n            \"Yes. I'm serious. You should punch some big bear into his stomach. But possible you should first \" +\n            'think about a good plan to get away again - as fast as possible :{',\n    },\n];\n\nexport class MissionControl extends Component<{}, { processed: number; selected: number }> {\n    state = { processed: 0, selected: 0 };\n    interval = 0;\n\n    processNextLetter = () => {\n        const current = this.state.processed;\n        if (current === missions[this.state.selected].text.length) Globals.window().clearInterval(this.interval);\n        this.setState({ processed: current + 1 });\n    };\n\n    componentDidMount() {\n        this.runLetters();\n    }\n\n    runLetters = () => (this.interval = Globals.window().setInterval(this.processNextLetter, 50));\n\n    select = (mission: number) => () => {\n        Globals.window().clearInterval(this.interval);\n        this.setState({ processed: 0, selected: mission });\n        this.runLetters();\n    };\n\n    componentWillUnmount() {\n        Globals.window().clearInterval(this.interval);\n    }\n\n    render() {\n        return (\n            <div className=\"mission-control\">\n                <div className=\"mission-content\">\n                    <div className=\"mission-list\">\n                        <ul>\n                            {missions.map((m, i) => {\n                                const isSelected = this.state.selected === i;\n                                const className = isSelected ? 'selected' : undefined;\n                                const handler = isSelected ? undefined : this.select(i);\n                                return (\n                                    <li key={i} onClick={handler} className={className}>\n                                        {m.title}\n                                    </li>\n                                );\n                            })}\n                        </ul>\n                    </div>\n                    <div className=\"mission-desc\">\n                        {missions[this.state.selected].text.substring(0, this.state.processed)}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { FocusEventHandler } from 'react';\nimport { ErrorMessage, iField } from 'morfi';\nimport { __, __string, Message, StringMessage } from 'first-intl';\nimport { DisplayError } from './DisplayError';\nimport { EventUtil } from '../../util/event-util';\nimport { Util } from '../../util/util';\n\nexport type AbstractRef<T> = { current: null | T };\nexport type InputRef = AbstractRef<HTMLInputElement>;\n\nexport type InputType = 'text' | 'number' | 'password' | 'email';\n\ntype InputHandler = (value: string) => void;\n\ntype CommonInputProps = {\n    label?: Message;\n    placeholder?: StringMessage;\n    className?: string;\n    inputClassName?: string;\n    onFocus?: FocusEventHandler<HTMLInputElement>;\n    autoFocus?: boolean;\n    disabled?: boolean;\n    type?: InputType;\n    trim?: boolean;\n    name?: string;\n    forwardedRef?: InputRef;\n    readOnly?: boolean;\n};\n\ntype InputProps = {\n    required?: boolean;\n    onChange?: InputHandler;\n    onBlur?: InputHandler;\n    value: string;\n    error?: ErrorMessage;\n} & CommonInputProps;\n\nconst transformHandler = (handler: InputHandler, trim?: boolean): InputHandler => (value: string) =>\n    handler(trim ? value && value.trim() : value);\n\nexport const Input: React.FC<InputProps> = ({\n    value,\n    label,\n    placeholder,\n    error,\n    required,\n    className,\n    inputClassName,\n    onChange,\n    onBlur,\n    onFocus,\n    autoFocus,\n    disabled,\n    type = 'text',\n    trim,\n    name,\n    forwardedRef,\n    readOnly,\n}) => (\n    <div className={Util.classNames(className, required && 'required')}>\n        {label && <label>{__(label)}</label>}\n        <input\n            name={name}\n            className={Util.classNames(inputClassName, error && 'is-invalid')}\n            onChange={onChange && EventUtil.inputHandler(transformHandler(onChange, trim))}\n            onBlur={onBlur && EventUtil.inputHandler(transformHandler(onBlur, trim))}\n            onFocus={onFocus}\n            placeholder={placeholder && __string(placeholder)}\n            ref={forwardedRef}\n            readOnly={readOnly}\n            {...{ value, autoFocus, disabled, type }}\n        />\n        {error && <DisplayError error={error} />}\n    </div>\n);\n\ntype FormInputProps = { Field: iField<string> } & CommonInputProps;\n\nexport const FormInput = ({ Field, className = 'form-control', ...rest }: FormInputProps) => (\n    <Field>\n        {({ onChange, onBlur, required, value, error }) => (\n            <Input {...{ required, onBlur, onChange, className, value, error }} {...rest} />\n        )}\n    </Field>\n);\n","import { createStore } from 'react-use-sub';\nimport { GameState, Player } from './players-store';\n\ntype SpadeIsTrumpState = { gameState: GameState; players: Player[] };\n\nconst [useSpadeIsTrumpSub, SpadeIsTrumpStore] = createStore<SpadeIsTrumpState>({ gameState: [], players: [] });\n\nexport { useSpadeIsTrumpSub, SpadeIsTrumpStore };\n","import { Persistore } from 'persistore';\nimport { SpadeIsTrumpStore } from './spadeIsTrump-store';\nimport { GameState } from './players-store';\n\nconst _key = 'SIT.history';\n\nconst getHistory = (): GameState[] => {\n    try {\n        const players = Persistore.get(_key);\n        return JSON.parse(players as any);\n    } catch (e) {\n        return [];\n    }\n};\n\nconst _set = (gameState: GameState): void => {\n    const history = getHistory();\n    history.unshift(gameState);\n    if (history.length > 10) history.pop();\n    Persistore.set(_key, JSON.stringify(history));\n};\n\nconst set = (update: GameState | ((gameState: GameState) => GameState)) => {\n    if (typeof update === 'function') {\n        SpadeIsTrumpStore.set(({ gameState }) => ({ gameState: update(gameState) }));\n    } else {\n        SpadeIsTrumpStore.set({ gameState: update });\n    }\n    _set(SpadeIsTrumpStore.get().gameState);\n};\n\nconst reset = () => HistoryStore.set([]);\n\nconst undo = (): void => {\n    const history = getHistory();\n    if (history.length > 1) history.shift();\n    Persistore.set(_key, JSON.stringify(history));\n    SpadeIsTrumpStore.set({ gameState: history[0] });\n};\n\nconst _clear = (state: GameState): GameState =>\n    state.map((player) => ({\n        ...player,\n        total: 0,\n        points: player.points.map(() => ({})),\n    }));\n\nconst rearrange = () =>\n    set((state) => {\n        const cleared = _clear(state);\n        return [...cleared.slice(1), cleared[0]];\n    });\n\nconst get = (): GameState => getHistory()[0] || [];\n\nSpadeIsTrumpStore.set({ gameState: get() });\n\nexport const HistoryStore = { set, get, undo, reset, rearrange };\n","import { PointsState } from './Points';\nimport { Persistore } from 'persistore';\nimport { SpadeIsTrumpStore } from './spadeIsTrump-store';\nimport { Util } from '../../util/util';\n\nconst _key = 'SIT.players';\n\nexport type Player = { uuid: string; name: string; shortcut?: string };\nexport type PlayerState = { player: Player; points: PointsState[]; total: number };\nexport type GameState = PlayerState[];\n\nconst _get = (): Player[] => {\n    try {\n        const players = Persistore.get(_key);\n        return JSON.parse(players as any);\n    } catch (e) {\n        return [];\n    }\n};\n\nconst _set = (next: Player[]): void => Persistore.set(_key, JSON.stringify(next));\n\nconst set = (update: Player[] | ((players: Player[]) => Player[])) => {\n    if (typeof update === 'function') {\n        SpadeIsTrumpStore.set(({ players }) => ({ players: update(players) }));\n    } else {\n        SpadeIsTrumpStore.set({ players: update });\n    }\n    _set(SpadeIsTrumpStore.get().players);\n};\n\nconst add = (name: string, shortcut?: string) => set((players) => [{ name, shortcut, uuid: Util.uuid() }, ...players]);\n\nconst update = (update: Player): void =>\n    set((players) => {\n        const index = players.findIndex((p) => p.uuid === update.uuid);\n        return index === -1 ? players : Util.nextArray(players, index, update);\n    });\n\nconst remove = (player: Player): void => set((players) => players.filter((p) => p.uuid !== player.uuid));\n\nconst moveTo = (before: number, after: number) =>\n    set((players) => {\n        const next = players.filter((_, index) => index !== before);\n        next.splice(after, 0, players[before]);\n        return next;\n    });\n\nconst moveUp = (current: number) => (current > 0 ? moveTo(current, current - 1) : undefined);\nconst moveDown = (current: number) => moveTo(current, current + 1);\n\nSpadeIsTrumpStore.set({ players: _get() });\n\nexport const PlayerStore = { set, add, update, remove, moveTo, moveDown, moveUp };\n","export enum Color {\n    YELLOW = '#b18e05',\n    BLUE = '#1313b1',\n    BLACK = '#000',\n    GREEN = '#054800',\n    ORANGE = '#b85409',\n    PURPLE = '#390257',\n}\n\nexport const CROSS = '✘';\n\nexport enum BONUS {\n    FOX = 'FOX',\n    PLUS_1 = 'PLUS_1',\n    REFRESH = 'REFRESH',\n    YELLOW = 'YELLOW',\n    YELLOW_10 = 'YELLOW_10',\n    YELLOW_14 = 'YELLOW_14',\n    YELLOW_16 = 'YELLOW_16',\n    YELLOW_20 = 'YELLOW_20',\n    BLUE = 'BLUE',\n    GREEN = 'GREEN',\n    ORANGE_4 = 'ORANGE_4',\n    ORANGE_5 = 'ORANGE_5',\n    ORANGE_6 = 'ORANGE_6',\n    PURPLE = 'PURPLE',\n    ULTIMATE = 'ULTIMATE',\n}\n\nconst orangeFactors = [1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 3];\n\nexport const Data = {\n    [Color.YELLOW]: {\n        contents: [3, 6, 5, CROSS, 2, 1, CROSS, 5, 1, CROSS, 2, 4, CROSS, 3, 4, 6],\n        rowBonus: [BONUS.BLUE, BONUS.ORANGE_4, BONUS.GREEN, BONUS.FOX],\n        columnBonus: [BONUS.YELLOW_10, BONUS.YELLOW_14, BONUS.YELLOW_16, BONUS.YELLOW_20, BONUS.PLUS_1],\n    },\n    [Color.BLUE]: {\n        contents: [CROSS, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],\n        points: [0, 1, 2, 4, 7, 11, 16, 22, 29, 37, 46, 56],\n        rowBonus: [BONUS.ORANGE_5, BONUS.YELLOW, BONUS.FOX],\n        columnBonus: [BONUS.REFRESH, BONUS.GREEN, BONUS.PURPLE, BONUS.PLUS_1],\n    },\n    [Color.GREEN]: {\n        contents: [1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 6],\n        points: [1, 3, 6, 10, 15, 21, 28, 36, 45, 55, 66],\n        bonus: [\n            undefined,\n            undefined,\n            undefined,\n            BONUS.PLUS_1,\n            undefined,\n            BONUS.BLUE,\n            BONUS.FOX,\n            undefined,\n            BONUS.PURPLE,\n            BONUS.REFRESH,\n            undefined,\n        ],\n    },\n    [Color.ORANGE]: {\n        factors: orangeFactors,\n        contents: orangeFactors.map((f) => (f > 1 ? `x${f}` : '')),\n        bonus: [\n            undefined,\n            undefined,\n            BONUS.REFRESH,\n            undefined,\n            BONUS.YELLOW,\n            BONUS.PLUS_1,\n            undefined,\n            BONUS.FOX,\n            undefined,\n            BONUS.PURPLE,\n            undefined,\n        ],\n    },\n    [Color.PURPLE]: {\n        contents: ['', '', '', '', '', '', '', '', '', '', ''],\n        bonus: [\n            undefined,\n            undefined,\n            BONUS.REFRESH,\n            BONUS.BLUE,\n            BONUS.PLUS_1,\n            BONUS.YELLOW,\n            BONUS.FOX,\n            BONUS.REFRESH,\n            BONUS.GREEN,\n            BONUS.ORANGE_6,\n            BONUS.PLUS_1,\n        ],\n    },\n};\n","import React, { useCallback, useState } from 'react';\nimport { Morfi, FormData } from 'morfi';\nimport { FormInput } from '../../components/form/input';\nimport { __ } from 'first-intl';\nimport { PlayerStore } from './players-store';\n\ntype AddPlayerFormValues = { name: string; shortcut: string };\nconst initialValues: AddPlayerFormValues = { name: '', shortcut: '' };\nconst { Form, Fields } = Morfi.create<AddPlayerFormValues>(initialValues);\nconst initialData: FormData<AddPlayerFormValues> = { values: initialValues, errors: {} };\nconst validation = { name: { onChange: (v?: string) => (!v ? { id: 'SIT.addPlayer.name.required' } : undefined) } };\n\nexport const AddPlayerForm: React.FC<{ close: () => void }> = ({ close }) => {\n    const [data, setData] = useState(initialData);\n\n    const onSubmit = useCallback(\n        ({ name, shortcut }) => {\n            PlayerStore.add(name, shortcut);\n            close();\n        },\n        [close]\n    );\n\n    return (\n        <Form\n            className=\"startup add-players\"\n            onSubmit={onSubmit}\n            validation={validation}\n            data={data}\n            onChange={setData}>\n            <FormInput autoFocus Field={Fields.name} label=\"SIT.addPlayer.name\" />\n            <FormInput Field={Fields.shortcut} label=\"SIT.addPlayer.shortcut\" />\n            <button type=\"submit\">{__('SIT.addPlayer.submit')}</button>\n        </Form>\n    );\n};\n\nexport const AddPlayer: React.FC = () => {\n    const [focus, setFocus] = useState(false);\n\n    const onClick = useCallback(() => setFocus(true), []);\n    const close = useCallback(() => setFocus(false), []);\n\n    return focus ? (\n        <AddPlayerForm close={close} />\n    ) : (\n        <button className=\"add-player\" onClick={onClick} type=\"submit\">\n            {__('SIT.addPlayer')}\n        </button>\n    );\n};\n","import React, { useCallback } from 'react';\nimport { Player, PlayerStore } from './players-store';\nimport { Icon } from '../../components/icons/icon';\n\nexport const PlayerRow: React.FC<{ player: Player; pos: number }> = ({ player, pos }) => {\n    const { name, shortcut } = player;\n\n    const moveUp = useCallback(() => PlayerStore.moveUp(pos), [pos]);\n    const moveDown = useCallback(() => PlayerStore.moveDown(pos), [pos]);\n    const remove = useCallback(() => PlayerStore.remove(player), [player]);\n\n    return (\n        <tr className=\"player-row\">\n            <td className=\"player-pos\">\n                <span className=\"player-move-down\" onClick={moveDown}>\n                    <Icon.ArrowRight />\n                </span>\n                <span className=\"player-current-pos\">{pos + 1}</span>\n                <span className=\"player-move-up\" onClick={moveUp}>\n                    <Icon.ArrowRight />\n                </span>\n            </td>\n            <td className=\"player-name\">{name}</td>\n            <td className=\"player-shortcut\">{shortcut}</td>\n            <td className=\"player-actions\">\n                <span className=\"player-remove\" onClick={remove}>\n                    <Icon.Trash />\n                </span>\n            </td>\n        </tr>\n    );\n};\n","import React, { useState } from 'react';\nimport { Morfi, FormData } from 'morfi';\nimport { FormInput } from '../../components/form/input';\nimport { __ } from 'first-intl';\nimport { Util } from '../../util/util';\nimport { Player, PlayerState } from './players-store';\nimport { HistoryStore } from './history-store';\nimport { SpadeIsTrumpStore, useSpadeIsTrumpSub } from './spadeIsTrump-store';\nimport { AddPlayer } from './AddPlayer';\nimport { PlayerRow } from './PlayerRow';\n\nconst newPlayer = (player: Player, playerIdx: number, rounds: number): PlayerState => ({\n    player,\n    points: Util.array(rounds).map(() => ({})),\n    total: 0,\n});\n\nconst playersFromStartup = (startupInfo: StartupInfo): PlayerState[] => {\n    const rounds = Math.floor(startupInfo.numberOfCards / startupInfo.numberOfPlayers);\n    return SpadeIsTrumpStore.get()\n        .players.slice(0, startupInfo.numberOfPlayers)\n        .map((player, index) => newPlayer(player, index, rounds));\n};\n\nconst onChangeStartupInfo = (startupInfo: StartupInfo) => HistoryStore.set(playersFromStartup(startupInfo));\n\nexport type StartupInfo = { numberOfCards: number; numberOfPlayers: number };\nexport type StartupInfoValues = { numberOfCards: string; numberOfPlayers: string };\nconst StartupInfoValidations = {\n    numberOfCards: {\n        onChange: (v?: string) => {\n            const num = Number(v);\n            return isNaN(num) || num < 32 ? { id: 'SIT.startup.cartCount.invalid' } : undefined;\n        },\n    },\n    numberOfPlayers: {\n        onChange: (v?: string) => {\n            const num = Number(v);\n            if (isNaN(num) || num < 2 || num > 10) return { id: 'SIT.startup.playerCount.invalid' };\n            if (num > SpadeIsTrumpStore.get().players.length)\n                return { id: 'SIT.startup.playerCount.exceedsRegistered' };\n        },\n    },\n};\n\nconst submit = ({ numberOfCards, numberOfPlayers }: StartupInfoValues) => {\n    onChangeStartupInfo({ numberOfCards: +numberOfCards, numberOfPlayers: +numberOfPlayers });\n};\n\nconst initialValues: StartupInfoValues = { numberOfCards: '52', numberOfPlayers: '' };\nconst { Form, Fields } = Morfi.create<StartupInfoValues>(initialValues);\n\nexport const StartupInfoPicker = () => {\n    const { players } = useSpadeIsTrumpSub(({ players }) => ({ players }));\n\n    const [data, setData] = useState<FormData<StartupInfoValues>>({ values: initialValues, errors: {} });\n\n    return (\n        <div className=\"spade-is-trump\">\n            <div className=\"configs\">\n                <Form\n                    className=\"startup\"\n                    onSubmit={submit}\n                    validation={StartupInfoValidations}\n                    data={data}\n                    onChange={setData}>\n                    <FormInput Field={Fields.numberOfCards} label=\"SIT.startup.cardCount\" type=\"number\" />\n                    <FormInput Field={Fields.numberOfPlayers} label=\"SIT.startup.playerCount\" type=\"number\" />\n                    <button type=\"submit\">{__('SIT.startup.start')}</button>\n                </Form>\n            </div>\n            <div className=\"players\">\n                <div className=\"registered-players\">\n                    <table>\n                        <tbody>\n                            {players.map((player, index) => (\n                                <PlayerRow player={player} pos={index} key={player.uuid} />\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n                <AddPlayer />\n            </div>\n        </div>\n    );\n};\n","import React, { useState, useCallback, useEffect, FormEvent } from 'react';\nimport { Input } from '../../components/form/input';\n\nexport type PointsState = { tip?: number; checked?: boolean; earned?: number };\n\ntype PointsComponentProps = {\n    points: PointsState;\n    onChange: (player: PointsState) => void;\n    limit: number;\n    checkable?: boolean;\n    active: boolean;\n    activeRound: boolean;\n};\n\nconst parseNum = (v: string): number | undefined => {\n    if (v && v.trim()) {\n        const parsed = Number(v.trim());\n        if (!isNaN(parsed) && parsed >= 0) {\n            return parsed;\n        }\n    }\n};\n\nconst _tipToString = (tip?: number) => (tip !== undefined ? String(tip) : '');\n\nexport const Points = ({ points, activeRound, limit, onChange, checkable, active }: PointsComponentProps) => {\n    const [focus, setFocus] = useState(false);\n    const [currentTip, setCurrentTip] = useState<string>(() => _tipToString(points.tip));\n\n    const onFocus = useCallback(() => {\n        activeRound && setFocus(true);\n    }, [activeRound]);\n\n    const onChangeTip = useCallback(\n        (tip: string) => {\n            if (activeRound) {\n                const num = parseNum(tip);\n                if (num === undefined) {\n                    setCurrentTip('');\n                } else if (num >= 0 && num <= limit) {\n                    setCurrentTip(tip);\n                }\n            }\n        },\n        [activeRound, limit]\n    );\n\n    const onBlur = useCallback(\n        (tip: string) => {\n            if (activeRound) {\n                const num = parseNum(tip);\n                if (num !== undefined) {\n                    onChange({ ...points, tip: num });\n                }\n                setFocus(false);\n            }\n        },\n        [activeRound, points, onChange]\n    );\n\n    const onSubmit = useCallback(\n        (event: FormEvent) => {\n            event.preventDefault();\n            onBlur(currentTip);\n        },\n        [onBlur, currentTip]\n    );\n\n    const setEarned = useCallback(\n        (earned: number) => {\n            if (!activeRound || points.earned) return;\n            onChange({ ...points, earned });\n        },\n        [activeRound, points, onChange]\n    );\n\n    const onSuccess = useCallback(() => {\n        setEarned(Number(points.tip) + 10);\n    }, [setEarned, points]);\n\n    const onFailed = useCallback(() => {\n        setEarned(Number(points.tip) * -1);\n    }, [setEarned, points]);\n\n    useEffect(() => {\n        setCurrentTip(_tipToString(points.tip));\n    }, [points.tip]);\n\n    if (points.earned !== undefined) {\n        return points.earned > 0 ? (\n            <td className=\"points points-earned\">{points.earned}</td>\n        ) : (\n            <td className=\"points points-lost\">{points.earned}</td>\n        );\n    }\n\n    if (!focus) {\n        const clazzName = activeRound && active ? 'points active' : 'points';\n        const readyToPlay = activeRound && checkable;\n        return (\n            <td onClick={readyToPlay ? undefined : onFocus} className={clazzName}>\n                <div onClick={readyToPlay ? onFocus : undefined} className=\"points-tip\">\n                    {currentTip}\n                </div>\n                {readyToPlay && (\n                    <>\n                        <button className=\"points-success\" type=\"button\" onClick={onSuccess}>\n                            +\n                        </button>\n                        <button className=\"points-failed\" type=\"button\" onClick={onFailed}>\n                            -\n                        </button>\n                    </>\n                )}\n            </td>\n        );\n    }\n    return (\n        <td>\n            <form onSubmit={onSubmit}>\n                <Input\n                    className=\"points-input\"\n                    value={currentTip}\n                    autoFocus\n                    onChange={onChangeTip}\n                    onBlur={onBlur}\n                    type=\"number\"\n                />\n            </form>\n        </td>\n    );\n};\n","import React, { useCallback, useState } from 'react';\n\nexport type ClickableDescriptionProps = { desc: string; short?: string; className?: string; tag?: string };\n\nexport const ClickableDescription: React.FC<ClickableDescriptionProps> = ({ desc, short, className, tag = 'div' }) => {\n    const [showName, setShowName] = useState(false);\n    const displayed = showName ? desc : short || desc;\n\n    const onClick = useCallback(() => {\n        if (short) {\n            setShowName(true);\n            window.setTimeout(() => setShowName(false), 3000);\n        }\n    }, [short]);\n\n    return React.createElement(tag, { onClick, className }, displayed);\n};\n","import React from 'react';\nimport { __string } from 'first-intl';\nimport { Util } from '../../util/util';\nimport { Icon } from '../../components/icons/icon';\nimport { Points, PointsState } from './Points';\nimport { HistoryStore } from './history-store';\nimport { useSpadeIsTrumpSub } from './spadeIsTrump-store';\nimport { GameState, PlayerState } from './players-store';\nimport { ClickableDescription } from './ClickableDescription';\n\nconst getActiveRound = (gameState: GameState, rounds: number): number | undefined => {\n    const earnings = Util.array(rounds).map(() => 0);\n    for (let i = 0; i < gameState.length; i++) {\n        const points: PointsState[] = gameState[i].points;\n        for (let j = 0; j < points.length; j++) {\n            if (points[j].earned !== undefined) earnings[j]++;\n        }\n    }\n    const round = earnings.findIndex((num) => num < gameState.length);\n    return round === -1 ? undefined : round;\n};\n\nconst activeRoundReady = (gameState: GameState, activeRound?: number): boolean => {\n    if (activeRound === undefined) return true;\n    for (let i = 0; i < gameState.length; i++) {\n        const points = gameState[i].points[activeRound];\n        if (points.tip === undefined) return false;\n    }\n    return true;\n};\n\nconst roundHasError = (gameState: GameState, round: number, cards: number): boolean => {\n    const earnings = gameState.map(\n        (player) => player.points.map((points) => points.earned).filter((_, index) => index === round)[0]\n    );\n    if (earnings.filter((v) => v === undefined).length) return false; // only display warning if all earnings are known\n    const positives = earnings.map((e: any) => (e > 10 ? e - 10 : undefined)).reduce((r: number, v = 0) => r + v, 0);\n    return Boolean(positives > cards || (positives === cards && earnings.filter((v) => v === 0).length));\n};\n\nconst onPlayerChange = (player: PlayerState, playerIdx: number) =>\n    HistoryStore.set((gameState) => {\n        const next = [...gameState];\n        next[playerIdx] = player;\n        return next;\n    });\n\nconst onPointsChange = (player: PlayerState, playerIdx: number, roundIdx: number) => (points: PointsState) => {\n    const next = [...player.points];\n    next[roundIdx] = points;\n    onPlayerChange({ ...player, points: next }, playerIdx);\n};\n\nexport const SpadeIsTrumpStarted: React.FC = () => {\n    const { gameState } = useSpadeIsTrumpSub(({ gameState }) => ({ gameState }));\n    const rounds = gameState[0].points.length;\n    const activeRound = getActiveRound(gameState, rounds);\n    const earnedPoints = gameState.map((player) => player.points.reduce((res, val) => res + (val.earned || 0), 0));\n\n    return (\n        <table>\n            <thead>\n                <tr>\n                    <ClickableDescription desc={__string('SIT.cardCount')} short=\"#\" tag=\"th\" className=\"card-number\" />\n                    {gameState.map(({ player: { name, shortcut } }, playerIdx) => (\n                        <ClickableDescription desc={name} short={shortcut} key={playerIdx} tag=\"th\" />\n                    ))}\n                </tr>\n            </thead>\n            <tbody>\n                {Util.array(rounds).map((_, roundIdx: number) => {\n                    const isActiveRound = activeRound === roundIdx;\n                    const activeReady = activeRoundReady(gameState, activeRound);\n                    const cards = rounds - roundIdx;\n                    const hasError = roundHasError(gameState, roundIdx, cards);\n                    return (\n                        <tr\n                            key={cards}\n                            className={activeRound !== undefined && roundIdx > activeRound ? 'disabled' : undefined}>\n                            <td>\n                                {cards}\n                                {hasError && (\n                                    <span className=\"error-round\">\n                                        <Icon.Alert />\n                                    </span>\n                                )}\n                            </td>\n                            {gameState.map((player, playerIdx) => (\n                                <Points\n                                    key={playerIdx}\n                                    points={player.points[roundIdx]}\n                                    limit={cards}\n                                    checkable={activeReady}\n                                    onChange={onPointsChange(player, playerIdx, roundIdx)}\n                                    active={roundIdx % gameState.length === playerIdx}\n                                    activeRound={isActiveRound}\n                                />\n                            ))}\n                        </tr>\n                    );\n                })}\n                <tr className=\"sum\">\n                    <ClickableDescription desc={__string('SIT.points')} short=\"∑\" tag=\"td\" />\n                    {earnedPoints.map((earned, earnedIdx) => (\n                        <td key={earnedIdx}>\n                            {earned}\n                            {activeRound === undefined && earned === Math.max(...earnedPoints) && (\n                                <Icon.Crown className=\"winner\" />\n                            )}\n                        </td>\n                    ))}\n                </tr>\n            </tbody>\n        </table>\n    );\n};\n","import React from 'react';\nimport { StartupInfoPicker } from './StartupInfoPicker';\nimport { SpadeIsTrumpStarted } from './SpadeIsTrumpStarted';\nimport { ErrorBoundary } from '../../components/ErrorBoundary';\nimport { HistoryStore } from './history-store';\nimport { useSpadeIsTrumpSub } from './spadeIsTrump-store';\nimport { Footer, FooterButton } from '../../footer/Footer';\nimport { FooterUndo } from '../../footer/FooterUndo';\nimport { FooterRestart } from '../../footer/FooterRestart';\nimport { Icon } from '../../components/icons/icon';\n\ntype SpadeIsTrumpFooterProps = { started: boolean };\n\nconst SpadeIsTrumpFooter: React.FC<SpadeIsTrumpFooterProps> = ({ started }) => (\n    <Footer>\n        <FooterUndo onClick={HistoryStore.undo} />\n        {started && <FooterRestart onClick={HistoryStore.reset} />}\n        {started && (\n            <FooterButton onClick={HistoryStore.rearrange} description=\"Umsortieren\">\n                <Icon.Refresh />\n            </FooterButton>\n        )}\n    </Footer>\n);\n\nexport const SpadeIsTrump: React.FC = () => {\n    const started = useSpadeIsTrumpSub(({ gameState }) => !!gameState.length);\n\n    return (\n        <ErrorBoundary fix={HistoryStore.reset}>\n            <>\n                <div className=\"spade-is-trump\">{started ? <SpadeIsTrumpStarted /> : <StartupInfoPicker />}</div>\n                <SpadeIsTrumpFooter started={started} />\n            </>\n        </ErrorBoundary>\n    );\n};\n","import { Util } from '../../util/util';\nimport { createStore } from 'react-use-sub';\nimport { Persistore } from 'persistore';\nimport { BONUS, Color } from './data';\n\nconst _key = 'veryClever';\n\nexport type Crossed = boolean[];\nexport type Points = number[];\nexport type Highlight = { color: Color; index: number };\n\nconst _setHistoryLocal = (history: GameState[]) => Persistore.set(_key, JSON.stringify(history));\nconst _getHistory = () => {\n    try {\n        const history = JSON.parse(Persistore.get(_key) || '[]');\n        if (Array.isArray(history)) return history;\n    } catch (e) {\n        _setHistoryLocal([]);\n    }\n    return [];\n};\nconst _get = () => _getHistory().pop();\n\nexport type GameState = {\n    [Color.YELLOW]: Crossed;\n    [Color.BLUE]: Crossed;\n    [Color.GREEN]: Crossed;\n    [Color.ORANGE]: Points;\n    [Color.PURPLE]: Points;\n    earnedBonus: {\n        [Color.YELLOW]: BONUS[];\n        [Color.BLUE]: BONUS[];\n    };\n    reshuffle: Crossed;\n    plusOne: Crossed;\n    round: number;\n    selection: Color.ORANGE | Color.PURPLE | null;\n    highlight: null | Highlight;\n    bonus: BONUS[];\n    foxes: number;\n};\nexport const initialGameState = {\n    [Color.YELLOW]: Util.arrayFill(Util.array(16, false), [3, 6, 9, 12], true),\n    [Color.BLUE]: Util.arrayFill(Util.array(12, false), [0], true),\n    [Color.GREEN]: Util.array(11, false),\n    [Color.ORANGE]: Util.array(11, 0),\n    [Color.PURPLE]: Util.array(11, 0),\n    earnedBonus: {\n        [Color.YELLOW]: [],\n        [Color.BLUE]: [],\n    },\n    reshuffle: [false],\n    plusOne: [],\n    round: 1,\n    selection: null,\n    highlight: null,\n    bonus: [],\n    foxes: 0,\n};\nconst _setLocal = (state: GameState) => _setHistoryLocal([..._getHistory().slice(-9), state]);\n\nconst [useVeryCleverSub, _Store] = createStore<GameState>(initialGameState);\n\nconst _set: typeof _Store['set'] = (update) => {\n    _Store.set(update);\n    _setLocal(_Store.get());\n};\n\n_Store.set(_get() || {});\n\nconst undo = () => {\n    const history = _getHistory();\n    if (history.length > 1) {\n        history.pop();\n        _setHistoryLocal(history);\n        _Store.set(history[history.length - 1]);\n    }\n};\n\nconst reset = () => {\n    _setHistoryLocal([]);\n    _set(initialGameState);\n};\n\nexport const VeryCleverStore = {\n    get: _Store.get,\n    set: _set,\n    restart: () => _set(initialGameState),\n    undo,\n    reset,\n};\n\nexport { useVeryCleverSub };\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useDecryptoSub } from './Decrypto-store';\nimport { __ } from 'first-intl';\n\nenum Status {\n    WON = 'WON',\n    LOST = 'LOST',\n}\n\nexport const NotifyResult: React.FC = () => {\n    const [status, setStatus] = useState<Status | undefined>();\n    const { wins, losses } = useDecryptoSub(({ results }) => results);\n    const last = useRef({ wins, losses });\n\n    const close = useCallback(() => setStatus(undefined), []);\n\n    useEffect(() => {\n        if (last.current.wins === 1 && wins === 2) {\n            setStatus(Status.WON);\n        } else if (last.current.losses === 1 && losses === 2) {\n            setStatus(Status.LOST);\n        }\n        last.current = { wins, losses };\n    }, [wins, losses]);\n\n    if (!status) return null;\n\n    return (\n        <div className=\"result-overlay\" onClick={close}>\n            <span>{__(status === Status.WON ? 'DECRYPTO.won' : 'DECRYPTO.lost')}</span>\n        </div>\n    );\n};\n","import { Crossed, GameState, Points, VeryCleverStore } from './VeryClever-store';\nimport { Util } from '../../util/util';\nimport { BONUS, Color, Data } from './data';\n\nconst _takeBonus = (list: Crossed): Crossed => {\n    const firstFalse = list.findIndex((v) => !v);\n    return firstFalse >= 0 ? Util.nextArray(list, firstFalse, true) : list;\n};\n\nconst takeReshuffleBonus = () => VeryCleverStore.set(({ reshuffle }) => ({ reshuffle: _takeBonus(reshuffle) }));\nconst takePlusOneBonus = () => VeryCleverStore.set(({ plusOne }) => ({ plusOne: _takeBonus(plusOne) }));\n\nconst _allCrossed = (crossed: Crossed, ...nums: number[]): boolean => nums.every((num) => crossed[num]);\n\nconst _getYellowBonus = (crossed: Crossed, earned: BONUS[]): BONUS[] => {\n    const collected = [];\n\n    if (!earned.includes(BONUS.YELLOW_10) && _allCrossed(crossed, 0, 4, 8)) {\n        collected.push(BONUS.YELLOW_10);\n    }\n    if (!earned.includes(BONUS.YELLOW_14) && _allCrossed(crossed, 1, 5, 13)) {\n        collected.push(BONUS.YELLOW_14);\n    }\n    if (!earned.includes(BONUS.YELLOW_16) && _allCrossed(crossed, 2, 10, 14)) {\n        collected.push(BONUS.YELLOW_16);\n    }\n    if (!earned.includes(BONUS.YELLOW_20) && _allCrossed(crossed, 7, 11, 15)) {\n        collected.push(BONUS.YELLOW_20);\n    }\n    if (!earned.includes(BONUS.BLUE) && _allCrossed(crossed, 0, 1, 2)) {\n        collected.push(BONUS.BLUE);\n    }\n    if (!earned.includes(BONUS.ORANGE_4) && _allCrossed(crossed, 4, 5, 7)) {\n        collected.push(BONUS.ORANGE_4);\n    }\n    if (!earned.includes(BONUS.GREEN) && _allCrossed(crossed, 8, 10, 11)) {\n        collected.push(BONUS.GREEN);\n    }\n    if (!earned.includes(BONUS.FOX) && _allCrossed(crossed, 13, 14, 15)) {\n        collected.push(BONUS.FOX);\n    }\n    if (!earned.includes(BONUS.PLUS_1) && _allCrossed(crossed, 0, 5, 10, 15)) {\n        collected.push(BONUS.PLUS_1);\n    }\n\n    return collected;\n};\n\nconst _getBlueBonus = (crossed: Crossed, earned: BONUS[]): BONUS[] => {\n    const collected = [];\n\n    if (!earned.includes(BONUS.REFRESH) && _allCrossed(crossed, 4, 8)) {\n        collected.push(BONUS.REFRESH);\n    }\n    if (!earned.includes(BONUS.GREEN) && _allCrossed(crossed, 1, 5, 9)) {\n        collected.push(BONUS.GREEN);\n    }\n    if (!earned.includes(BONUS.PURPLE) && _allCrossed(crossed, 2, 6, 10)) {\n        collected.push(BONUS.PURPLE);\n    }\n    if (!earned.includes(BONUS.PLUS_1) && _allCrossed(crossed, 3, 7, 11)) {\n        collected.push(BONUS.PLUS_1);\n    }\n    if (!earned.includes(BONUS.ORANGE_5) && _allCrossed(crossed, 1, 2, 3)) {\n        collected.push(BONUS.ORANGE_5);\n    }\n    if (!earned.includes(BONUS.YELLOW) && _allCrossed(crossed, 4, 5, 6, 7)) {\n        collected.push(BONUS.YELLOW);\n    }\n    if (!earned.includes(BONUS.FOX) && _allCrossed(crossed, 8, 9, 10, 11)) {\n        collected.push(BONUS.FOX);\n    }\n\n    return collected;\n};\n\nconst _getRowBonus = (color: Color.GREEN | Color.ORANGE | Color.PURPLE, crossed: Crossed, index: number): BONUS[] => {\n    const bonus = Data[color].bonus[index];\n    return bonus ? [bonus] : [];\n};\n\nconst _getBonus = (\n    color: Color.YELLOW | Color.BLUE | Color.GREEN,\n    crossed: Crossed,\n    earned: BONUS[],\n    index: number\n): BONUS[] => {\n    if (color === Color.YELLOW) return _getYellowBonus(crossed, earned);\n    if (color === Color.BLUE) return _getBlueBonus(crossed, earned);\n    if (color === Color.GREEN) return _getRowBonus(Color.GREEN, crossed, index);\n\n    return undefined as never;\n};\n\nconst _crossableClicked = (color: Color.YELLOW | Color.BLUE | Color.GREEN, index: number, rest?: BONUS[]) =>\n    VeryCleverStore.set((state) => {\n        const crossed = Util.nextArray(state[color], index, true);\n        const earned = color === Color.GREEN ? [] : state.earnedBonus[color];\n        const collected = _getBonus(color, crossed, earned, index);\n\n        return {\n            [color]: crossed,\n            earnedBonus: {\n                ...state.earnedBonus,\n                [color]: [...earned, ...collected],\n            },\n            bonus: [...(rest || state.bonus), ...collected],\n            highlight: { color, index },\n        };\n    });\n\nconst _getNextIndex = (color: Color.GREEN | Color.ORANGE | Color.PURPLE): number =>\n    VeryCleverStore.get()[color].findIndex((v: any) => !v);\n\nconst _isCrossed = (color: Exclude<Color, Color.BLACK>, index: number): boolean =>\n    !!VeryCleverStore.get()[color][index];\n\nconst _isNextIndex = (color: Color.GREEN | Color.ORANGE | Color.PURPLE, index: number): boolean =>\n    _getNextIndex(color) === index;\n\nconst boxClicked = (color: Exclude<Color, Color.BLACK>, index: number) => {\n    if (_isCrossed(color, index)) return;\n    if (color === Color.ORANGE || color === Color.PURPLE || color === Color.GREEN) {\n        if (!_isNextIndex(color, index)) return;\n        if (color !== Color.GREEN) return VeryCleverStore.set({ selection: color });\n    }\n    return _crossableClicked(color, index);\n};\n\nconst clearSelection = () => VeryCleverStore.set({ selection: null });\n\nconst _selectValue = (color: Color.ORANGE | Color.PURPLE, value: number, rest?: BONUS[]) => {\n    const index = _getNextIndex(color);\n    const factor = color === Color.ORANGE ? Data[Color.ORANGE].factors[index] : 1;\n    VeryCleverStore.set((state) => {\n        const values = Util.nextArray(state[color], index, factor * value);\n        return {\n            [color]: values,\n            selection: null,\n            bonus: [...(rest || state.bonus), ..._getRowBonus(color, values.map(Boolean), index)],\n            highlight: { color: color, index },\n        };\n    });\n};\n\nconst selectValue = (value: number) => {\n    const { selection } = VeryCleverStore.get();\n    if (selection) {\n        _selectValue(selection, value);\n    }\n};\n\nconst _yellowPoints = (earned: BONUS[]) => {\n    const column1Points = earned.includes(BONUS.YELLOW_10) ? 10 : 0;\n    const column2Points = earned.includes(BONUS.YELLOW_14) ? 14 : 0;\n    const column3Points = earned.includes(BONUS.YELLOW_16) ? 16 : 0;\n    const column4Points = earned.includes(BONUS.YELLOW_20) ? 20 : 0;\n    return column1Points + column2Points + column3Points + column4Points;\n};\nconst _bluePoints = (crossed: Crossed) => Data[Color.BLUE].points[crossed.filter(Boolean).length - 1];\nconst _greenPoints = (crossed: Crossed): number | undefined =>\n    Data[Color.GREEN].points[crossed.filter(Boolean).length - 1];\nconst _sumPoints = (crossed: Points) => crossed.reduce((cur: number, red: number) => cur + red, 0);\n\nconst points = (state: GameState) => {\n    const yPoints = _yellowPoints(state.earnedBonus[Color.YELLOW]);\n    const bPoints = _bluePoints(state[Color.BLUE]);\n    const gPoints = _greenPoints(state[Color.GREEN]) || 0;\n    const oPoints = _sumPoints(state[Color.ORANGE]);\n    const pPoints = _sumPoints(state[Color.PURPLE]);\n    const foxPoints = Math.min(yPoints, bPoints, gPoints, oPoints, pPoints) * state.foxes;\n    return yPoints + bPoints + gPoints + oPoints + pPoints + foxPoints;\n};\n\nconst _useBonus = (bonus: BONUS, rest: BONUS[]) => {\n    if (bonus === BONUS.GREEN) _crossableClicked(Color.GREEN, _getNextIndex(Color.GREEN), rest);\n    else if (bonus === BONUS.ORANGE_4) _selectValue(Color.ORANGE, 4, rest);\n    else if (bonus === BONUS.ORANGE_5) _selectValue(Color.ORANGE, 5, rest);\n    else if (bonus === BONUS.ORANGE_6) _selectValue(Color.ORANGE, 6, rest);\n    else if (bonus === BONUS.PURPLE) _selectValue(Color.PURPLE, 6, rest);\n    else if (bonus === BONUS.FOX) VeryCleverStore.set(({ foxes }) => ({ foxes: foxes + 1, bonus: rest }));\n    else if (bonus === BONUS.PLUS_1)\n        VeryCleverStore.set(({ plusOne }) => ({ plusOne: [...plusOne, false], bonus: rest }));\n    else if (bonus === BONUS.REFRESH)\n        VeryCleverStore.set(({ reshuffle }) => ({ reshuffle: [...reshuffle, false], bonus: rest }));\n    else VeryCleverStore.set({ bonus: rest });\n};\n\nconst useBonus = () => {\n    const { bonus } = VeryCleverStore.get();\n    if (bonus) {\n        const [first, ...rest] = bonus;\n        _useBonus(first, rest);\n    }\n};\n\nconst ROUND_BONUS = [BONUS.REFRESH, BONUS.PLUS_1, BONUS.REFRESH, BONUS.ULTIMATE];\nconst _getRoundBonus = (round: number) => (ROUND_BONUS[round] ? [ROUND_BONUS[round]] : []);\n\nconst nextRound = () =>\n    VeryCleverStore.set(({ round }) => ({\n        round: round + 1,\n        bonus: _getRoundBonus(round),\n    }));\n\nexport const VeryCleverLogic = {\n    takeReshuffleBonus,\n    takePlusOneBonus,\n    boxClicked,\n    selectValue,\n    clearSelection,\n    points,\n    useBonus,\n    nextRound,\n};\n","import React, { ReactNode } from 'react';\nimport { Crossed, useVeryCleverSub } from './VeryClever-store';\nimport { VeryCleverLogic } from './VeryClever-logic';\nimport { Icon } from '../../components/icons/icon';\nimport { Util } from '../../util/util';\n\nexport type AvailableBonusProps = { children: ReactNode; crossed: Crossed; onClick: () => void };\n\nconst AvailableBonus: React.FC<AvailableBonusProps> = ({ children, crossed, onClick }) => (\n    <div className=\"grid-bonus-row\">\n        <div className=\"grid-item\">{children}</div>\n        {crossed.map((c, key) => (\n            <div key={key} className=\"grid-item\" onClick={onClick}>\n                <div className={Util.classNames('box', c && 'crossed')} />\n            </div>\n        ))}\n    </div>\n);\n\nexport const AvailableReshuffleBonus: React.FC = () => {\n    const { reshuffle } = useVeryCleverSub(({ reshuffle }) => ({ reshuffle }));\n\n    return (\n        <AvailableBonus crossed={reshuffle} onClick={VeryCleverLogic.takeReshuffleBonus}>\n            <Icon.Refresh2 />\n        </AvailableBonus>\n    );\n};\n\nexport const AvailablePlusOneBonus: React.FC = () => {\n    const { plusOne } = useVeryCleverSub(({ plusOne }) => ({ plusOne }));\n\n    return (\n        <AvailableBonus crossed={plusOne} onClick={VeryCleverLogic.takePlusOneBonus}>\n            <div className=\"content\">+1</div>\n        </AvailableBonus>\n    );\n};\n","import React from 'react';\nimport { useVeryCleverSub } from './VeryClever-store';\nimport { VeryCleverLogic } from './VeryClever-logic';\nimport { __ } from 'first-intl';\n\nexport const RoundOverview: React.FC = () => {\n    const { round } = useVeryCleverSub(({ round }) => ({ round }));\n    return (\n        <div className=\"round-overview\">\n            <span className=\"title\">\n                {__('VC.round')}\n                {round}\n            </span>\n            <button onClick={VeryCleverLogic.nextRound}>{__('VC.next')}</button>\n        </div>\n    );\n};\n","import React, { useCallback } from 'react';\nimport { VeryCleverLogic } from './VeryClever-logic';\nimport { useVeryCleverSub } from './VeryClever-store';\nimport { Color } from './data';\n\nexport type ValueSelectionOptionProps = { value: number; color: Color };\n\nexport const ValueSelectionOption: React.FC<ValueSelectionOptionProps> = ({ value, color }) => {\n    const onClick = useCallback(() => VeryCleverLogic.selectValue(value), [value]);\n    return (\n        <div className=\"value\" style={{ backgroundColor: color }} onClick={onClick}>\n            {value}\n        </div>\n    );\n};\n\ntype ValueSelectionProps = { color: Color };\n\nexport const ValueSelection: React.FC<ValueSelectionProps> = ({ color }) => {\n    const { prevVal } = useVeryCleverSub((state) => {\n        const currentIdx = color === Color.PURPLE ? state[Color.PURPLE].findIndex((v) => !v) - 1 : -1;\n        return { prevVal: currentIdx >= 0 ? state[Color.PURPLE][currentIdx] : 0 };\n    });\n\n    return (\n        <div className=\"value-selection\">\n            <div className=\"value-selection-inner\">\n                {[1, 2, 3, 4, 5, 6].slice(prevVal === 6 ? 0 : prevVal).map((v) => (\n                    <ValueSelectionOption key={v} color={color} value={v} />\n                ))}\n            </div>\n            <div className=\"value-selection-overlay\" onClick={VeryCleverLogic.clearSelection} />\n        </div>\n    );\n};\n","import React, { ReactNode } from 'react';\nimport { Icon } from '../../components/icons/icon';\nimport { BONUS, Color, CROSS } from './data';\n\nexport const FOX = '🦊';\nexport const PLUS_1 = '+1';\nexport const REFRESH = <Icon.Refresh2 />;\n\nconst CONTENT_AND_COLOR: { [bonus in BONUS]: { content: ReactNode; color: Color } } = {\n    [BONUS.FOX]: { content: FOX, color: Color.BLACK },\n    [BONUS.PLUS_1]: { content: PLUS_1, color: Color.BLACK },\n    [BONUS.REFRESH]: { content: REFRESH, color: Color.BLACK },\n    [BONUS.YELLOW]: { content: CROSS, color: Color.YELLOW },\n    [BONUS.YELLOW_10]: { content: 10, color: Color.YELLOW },\n    [BONUS.YELLOW_14]: { content: 14, color: Color.YELLOW },\n    [BONUS.YELLOW_16]: { content: 16, color: Color.YELLOW },\n    [BONUS.YELLOW_20]: { content: 20, color: Color.YELLOW },\n    [BONUS.BLUE]: { content: CROSS, color: Color.BLUE },\n    [BONUS.GREEN]: { content: CROSS, color: Color.GREEN },\n    [BONUS.ORANGE_4]: { content: 4, color: Color.ORANGE },\n    [BONUS.ORANGE_5]: { content: 5, color: Color.ORANGE },\n    [BONUS.ORANGE_6]: { content: 6, color: Color.ORANGE },\n    [BONUS.PURPLE]: { content: 6, color: Color.PURPLE },\n    [BONUS.ULTIMATE]: { content: CROSS + '/6', color: Color.BLACK },\n};\n\ntype BonusProps = { bonus: BONUS };\n\nexport const Bonus: React.FC<BonusProps> = ({ bonus }) => (\n    <div className=\"box bonus\" style={{ backgroundColor: CONTENT_AND_COLOR[bonus].color }}>\n        <div className=\"content\">{CONTENT_AND_COLOR[bonus].content}</div>\n    </div>\n);\n","import React, { ReactNode, useCallback } from 'react';\nimport { Highlight, useVeryCleverSub } from './VeryClever-store';\nimport { Util } from '../../util/util';\nimport { VeryCleverLogic } from './VeryClever-logic';\nimport { Color } from './data';\n\nconst _isHighLight = (highlight: null | Highlight, color: Color, index: number): boolean => {\n    if (!highlight) return false;\n    else return highlight.color === color && highlight.index === index;\n};\n\ntype BoxProps = { content: ReactNode; color: Exclude<Color, Color.BLACK>; gePrefix?: boolean; index: number };\n\nexport const Box = ({ content, color, gePrefix, index }: BoxProps) => {\n    const { crossed, newContent, highlight } = useVeryCleverSub((state) => {\n        const highlight = _isHighLight(state.highlight, color, index);\n        switch (color) {\n            case Color.ORANGE:\n            case Color.PURPLE:\n                return { crossed: false, newContent: state[color][index], highlight };\n            default:\n                return { crossed: state[color][index], highlight };\n        }\n    });\n\n    const onClick = useCallback(() => {\n        VeryCleverLogic.boxClicked(color, index);\n    }, [color, index]);\n\n    return (\n        <div\n            onClick={onClick}\n            className={Util.classNames('box', crossed && 'crossed', highlight && 'highlight')}\n            style={{ color, borderColor: color }}>\n            {gePrefix ? (\n                <div className=\"content\">\n                    &ge;\n                    {content}\n                </div>\n            ) : newContent ? (\n                <div className=\"picked\">{newContent}</div>\n            ) : (\n                <div className=\"content\">{content}</div>\n            )}\n        </div>\n    );\n};\n","import React, { ReactNode } from 'react';\nimport { Bonus } from './Bonus';\nimport { Util } from '../../util/util';\nimport { Box } from './Box';\nimport { BONUS, Color } from './data';\n\ntype BoxRowProps = {\n    color: Exclude<Color, Color.BLACK>;\n    contents: ReactNode[];\n    className?: string;\n    gePrefix?: boolean;\n    bonusList: Array<BONUS | undefined>;\n    points?: number[];\n};\n\nexport const BoxRow: React.FC<BoxRowProps> = ({ color, contents, className, gePrefix, bonusList, points = [] }) => (\n    <div className={Util.classNames('grid-row', className)} style={{ borderColor: color }}>\n        {contents.map((content, index) => {\n            const point = points[index];\n            const bonus = bonusList[index];\n            return (\n                <div key={index} className=\"grid-item\">\n                    <Box content={content} color={color} gePrefix={gePrefix} index={index} />\n                    {point && (\n                        <div className=\"points\" style={{ backgroundColor: color }}>\n                            {point}\n                        </div>\n                    )}\n                    {bonus && <Bonus bonus={bonus} />}\n                </div>\n            );\n        })}\n    </div>\n);\n","import React, { Fragment } from 'react';\nimport { Bonus } from './Bonus';\nimport { Util } from '../../util/util';\nimport { Box } from './Box';\nimport { Icon } from '../../components/icons/icon';\nimport { BONUS, Color } from './data';\n\ntype BoxGridProps = {\n    color: Exclude<Color, Color.BLACK>;\n    contents: Array<string | number>;\n    rowBonusList: BONUS[];\n    columnBonusList: BONUS[];\n};\n\nconst array6 = Util.array(6);\n\nexport const BoxGrid = ({ color, contents, rowBonusList, columnBonusList }: BoxGridProps) => (\n    <div className=\"grid-box-outer\">\n        <div className=\"grid-box\" style={{ borderColor: color, color }}>\n            {Util.array(contents.length / 4).map((_, row) => (\n                <Fragment key={row}>\n                    {contents.slice(row * 4, row * 4 + 4).map((content, key) => (\n                        <div className=\"grid-item\" key={key}>\n                            <Box key={key} content={content} color={color} index={4 * row + key} />\n                        </div>\n                    ))}\n                    <div className=\"grid-item grid-arrow\">\n                        <Icon.ArrowRight />\n                    </div>\n                    <div className=\"grid-item\">\n                        <Bonus bonus={rowBonusList[row]} />\n                    </div>\n                </Fragment>\n            ))}\n            {array6.map((_, i) => (\n                <div className=\"grid-item grid-arrow\" key={i}>\n                    {i < columnBonusList.length ? (\n                        i === 4 ? (\n                            <Icon.ArrowRight className=\"rotate-45\" />\n                        ) : (\n                            <Icon.ArrowDown />\n                        )\n                    ) : null}\n                </div>\n            ))}\n            {}\n            {columnBonusList.map((bonus, i) => (\n                <Fragment key={i}>\n                    {i === 4 && <div className=\"grid-item\" />}\n                    <div className=\"grid-item\">\n                        <Bonus bonus={bonus} />\n                    </div>\n                </Fragment>\n            ))}\n        </div>\n    </div>\n);\n","import React from 'react';\nimport { useVeryCleverSub } from './VeryClever-store';\nimport { VeryCleverLogic } from './VeryClever-logic';\nimport { __ } from 'first-intl';\n\nexport const Points: React.FC = () => {\n    const { points } = useVeryCleverSub((state) => ({ points: VeryCleverLogic.points(state) }));\n\n    return (\n        <div className=\"points-total\">\n            {__('VC.points')}\n            {points}\n        </div>\n    );\n};\n","import React from 'react';\nimport { Bonus } from './Bonus';\nimport { BONUS } from './data';\nimport { VeryCleverLogic } from './VeryClever-logic';\n\nexport type ActivatedBonusProps = { earned: BONUS[] };\n\nexport const ActivatedBonus: React.FC<ActivatedBonusProps> = ({ earned }) =>\n    earned.length ? (\n        <div className=\"bonus-splash\" onClick={VeryCleverLogic.useBonus}>\n            <div className=\"bonus-splash-overlay\" />\n            <div className=\"bonus-splash-inner\">\n                {earned.map((bonus: BONUS, index: number) => (\n                    <Bonus bonus={bonus} key={index} />\n                ))}\n            </div>\n        </div>\n    ) : null;\n","import React from 'react';\nimport { useVeryCleverSub } from './VeryClever-store';\nimport { AvailablePlusOneBonus, AvailableReshuffleBonus } from './AvailableBonus';\nimport { RoundOverview } from './RoundOverview';\nimport { ValueSelection } from './ValueSelection';\nimport { Color, Data } from './data';\nimport { BoxRow } from './BoxRow';\nimport { BoxGrid } from './BoxGrid';\nimport { Points } from './Points';\nimport { ActivatedBonus } from './ActivatedBonus';\n\nexport const VeryCleverInner: React.FC = () => {\n    const { selection, bonus } = useVeryCleverSub(({ selection, bonus }) => ({ selection, bonus }));\n    return (\n        <div className=\"very-clever-outer\">\n            <div className=\"very-clever\">\n                <RoundOverview />\n                <AvailableReshuffleBonus />\n                <AvailablePlusOneBonus />\n                <BoxGrid\n                    color={Color.YELLOW}\n                    contents={Data[Color.YELLOW].contents}\n                    rowBonusList={Data[Color.YELLOW].rowBonus}\n                    columnBonusList={Data[Color.YELLOW].columnBonus}\n                />\n                <BoxGrid\n                    color={Color.BLUE}\n                    contents={Data[Color.BLUE].contents}\n                    rowBonusList={Data[Color.BLUE].rowBonus}\n                    columnBonusList={Data[Color.BLUE].columnBonus}\n                />\n                <BoxRow\n                    color={Color.GREEN}\n                    contents={Data[Color.GREEN].contents}\n                    gePrefix\n                    bonusList={Data[Color.GREEN].bonus}\n                    points={Data[Color.GREEN].points}\n                />\n                <BoxRow\n                    color={Color.ORANGE}\n                    contents={Data[Color.ORANGE].contents}\n                    bonusList={Data[Color.ORANGE].bonus}\n                />\n                <BoxRow\n                    color={Color.PURPLE}\n                    contents={Data[Color.PURPLE].contents}\n                    className=\"growing\"\n                    bonusList={Data[Color.PURPLE].bonus}\n                />\n                <Points />\n                {selection && <ValueSelection color={selection} />}\n                {bonus && <ActivatedBonus earned={bonus} />}\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport { ErrorBoundary } from '../../components/ErrorBoundary';\nimport { VeryCleverInner } from './VeryCleverInner';\nimport { VeryCleverStore } from './VeryClever-store';\nimport { Footer } from '../../footer/Footer';\nimport { FooterUndo } from '../../footer/FooterUndo';\nimport { FooterRestart } from '../../footer/FooterRestart';\n\nconst VeryCleverFooter: React.FC = () => (\n    <Footer>\n        <FooterUndo onClick={VeryCleverStore.undo} />\n        <FooterRestart onClick={VeryCleverStore.reset} />\n    </Footer>\n);\n\nexport const VeryClever: React.FC = () => (\n    <ErrorBoundary fix={VeryCleverStore.reset}>\n        <VeryCleverInner />\n        <VeryCleverFooter />\n    </ErrorBoundary>\n);\n","import { Persistore } from 'persistore';\nimport { createStore } from 'react-use-sub';\n\nexport type CodePoint = 1 | 2 | 3 | 4;\nexport type Code = [CodePoint, CodePoint, CodePoint];\nexport type CodeWords = { first: string; second: string; third: string };\nexport type Results = { losses: number; wins: number };\nexport type Knowledge = [string[], string[], string[], string[]];\nconst NoKnowledge: Knowledge = [[], [], [], []];\nexport type PlayerState = { knowledge: Knowledge; code?: Code; guessed?: Code; codeWords?: CodeWords; round: number };\n\nexport type DecryptoState = { results: Results; me: PlayerState; enemy: PlayerState };\nconst initialDecryptoState: DecryptoState = {\n    results: { losses: 0, wins: 0 },\n    me: { knowledge: NoKnowledge, round: 0 },\n    enemy: { knowledge: NoKnowledge, round: 0 },\n};\n\nconst _key = 'decrypto';\n\nconst _fetch = (): DecryptoState => {\n    try {\n        const raw = Persistore.get(_key);\n        if (raw) {\n            return JSON.parse(raw);\n        }\n    } catch (e) {\n        // do nothing\n    }\n    return initialDecryptoState;\n};\nconst _persist = (state: DecryptoState) => Persistore.set(_key, JSON.stringify(state));\n\nconst [useDecryptoSub, Store] = createStore<DecryptoState>(_fetch());\nexport { useDecryptoSub };\n\nconst set: typeof Store['set'] = (update) => {\n    Store.set(update);\n    _persist(Store.get());\n};\n\nconst reset = () => set(initialDecryptoState);\n\nexport const DecryptoStore = { set, reset };\n","import React, { useState } from 'react';\nimport { FormInput } from '../../components/form/input';\nimport { FormData, Morfi } from 'morfi';\nimport { Code } from './Decrypto-store';\nimport { Icon } from '../../components/icons/icon';\nimport { __ } from 'first-intl';\n\ntype CodeWords = { first: string; second: string; third: string };\nconst initialCodeWords = { first: '', second: '', third: '' };\nconst initialCodeWordsData = { values: initialCodeWords, errors: {} };\nconst { Form, Fields } = Morfi.create<CodeWords>(initialCodeWords);\nconst codeWordValidator = (v?: string) => {\n    if (!v || !v.trim()) return { id: 'DECRYPTO.codeWord.required' };\n    try {\n        btoa(v);\n    } catch (e) {\n        return { id: 'DECRYPTO.codeWord.invalid' };\n    }\n};\nconst codeWordValidation = {\n    first: { onChange: codeWordValidator },\n    second: { onChange: codeWordValidator },\n    third: { onChange: codeWordValidator },\n};\n\nexport type CodeWordsSelectionProps = { onSubmit: (codeWords: CodeWords) => void; code?: Code };\n\nexport const CodeWordsSelection: React.FC<CodeWordsSelectionProps> = ({ onSubmit, code }) => {\n    const [codeWordsData, setCodeWordsData] = useState<FormData<CodeWords>>(initialCodeWordsData);\n    return (\n        <div className=\"code-words-selection\">\n            {code && (\n                <div className=\"code\">\n                    <span>{code.join('.')}</span>\n                </div>\n            )}\n            <Form onChange={setCodeWordsData} data={codeWordsData} onSubmit={onSubmit} validation={codeWordValidation}>\n                <FormInput Field={Fields.first} />\n                <FormInput Field={Fields.second} />\n                <FormInput Field={Fields.third} />\n                <button type=\"submit\" disabled={Morfi.hasErrors(codeWordsData)}>\n                    <Icon.Mask />\n                    <div className=\"description\">{__('DECRYPTO.btn.submit')}</div>\n                </button>\n            </Form>\n        </div>\n    );\n};\n","import React, { ReactNode, useCallback, useState } from 'react';\n\nexport type SelectOverlayValueProps<T> = {\n    value: T;\n    children: ReactNode;\n    onChange: (value: T) => void;\n    close: () => void;\n};\n\nexport const SelectOverlayValue = <T extends any>({ value, children, onChange, close }: SelectOverlayValueProps<T>) => {\n    const onClick = useCallback(() => {\n        onChange(value);\n        close();\n    }, [onChange, close, value]);\n    return (\n        <div className=\"value\" onClick={onClick}>\n            {children}\n        </div>\n    );\n};\n\nexport type SelectOverlayOption<T> = { value: T; node: ReactNode };\nexport type SelectOverlayProps<T> = {\n    children: ReactNode;\n    options: SelectOverlayOption<T>[];\n    onChange: (value: T) => void;\n};\n\nexport const SelectOverlay = <T extends any>({ children, options, onChange }: SelectOverlayProps<T>) => {\n    const [isOpen, setOpen] = useState<boolean>(false);\n\n    const close = useCallback(() => setOpen(false), []);\n    const open = useCallback(() => setOpen(true), []);\n\n    return (\n        <>\n            <span onClick={open}>{children}</span>\n            {isOpen && (\n                <div className=\"select-overlay\">\n                    <div className=\"select-overlay-inner\">\n                        {options.map(({ value, node }, index) => (\n                            <SelectOverlayValue key={index} close={close} onChange={onChange} value={value}>\n                                {node}\n                            </SelectOverlayValue>\n                        ))}\n                    </div>\n                    <div className=\"select-overlay-outer\" onClick={close} />\n                </div>\n            )}\n        </>\n    );\n};\n","import React, { useCallback, useMemo, useState } from 'react';\nimport { Code, CodePoint, CodeWords } from './Decrypto-store';\nimport { SelectOverlay, SelectOverlayOption } from '../../components/form/SelectOverlay';\nimport { Icon } from '../../components/icons/icon';\nimport { __ } from 'first-intl';\nimport { Util } from '../../util/util';\n\nexport type GuessCodeProps = { onSubmit: (guessed: Code) => void; codeWords: CodeWords };\nconst GuessOptions: SelectOverlayOption<CodePoint>[] = [\n    { value: 1 as CodePoint, node: 1 },\n    { value: 2 as CodePoint, node: 2 },\n    { value: 3 as CodePoint, node: 3 },\n    { value: 4 as CodePoint, node: 4 },\n];\n\nconst _getDuplicated = (first?: CodePoint, second?: CodePoint, third?: CodePoint): number | undefined => {\n    if (first && first === second) return first;\n    if (third && (third === second || third === first)) return third;\n};\nconst _getAllDuplicated = (first?: CodePoint, second?: CodePoint, third?: CodePoint): [boolean, boolean, boolean] => {\n    const duplicate = _getDuplicated(first, second, third);\n    return duplicate ? [duplicate === first, duplicate === second, duplicate === third] : [false, false, false];\n};\n\nexport const GuessCode: React.FC<GuessCodeProps> = ({ onSubmit, codeWords }) => {\n    const [first, setFirst] = useState<CodePoint | undefined>();\n    const [second, setSecond] = useState<CodePoint | undefined>();\n    const [third, setThird] = useState<CodePoint | undefined>();\n    const duplicated = _getAllDuplicated(first, second, third);\n\n    const wasGuessed = useMemo<boolean>(\n        () => !!(first && second && third && first !== second && first !== third && second !== third),\n        [first, second, third]\n    );\n\n    const onGuessedMe = useCallback(() => {\n        onSubmit([first!, second!, third!]);\n    }, [onSubmit, first, second, third]);\n\n    return (\n        <div className=\"guessing\">\n            <div className=\"guess\">\n                <div className=\"code-word\">{codeWords.first}</div>\n                <SelectOverlay options={GuessOptions} onChange={setFirst}>\n                    <span className={Util.classNames('code-guess', duplicated[0] && 'invalid')}>{first ?? '?'}</span>\n                </SelectOverlay>\n            </div>\n            <div className=\"guess\">\n                <div className=\"code-word\">{codeWords.second}</div>\n                <SelectOverlay options={GuessOptions} onChange={setSecond}>\n                    <span className={Util.classNames('code-guess', duplicated[1] && 'invalid')}>{second ?? '?'}</span>\n                </SelectOverlay>\n            </div>\n            <div className=\"guess\">\n                <div className=\"code-word\">{codeWords.third}</div>\n                <SelectOverlay options={GuessOptions} onChange={setThird}>\n                    <span className={Util.classNames('code-guess', duplicated[2] && 'invalid')}>{third ?? '?'}</span>\n                </SelectOverlay>\n            </div>\n            {wasGuessed && (\n                <button onClick={onGuessedMe} type=\"button\">\n                    <Icon.Key />\n                    <div className=\"description\">{__('DECRYPTO.btn.decode')}</div>\n                </button>\n            )}\n        </div>\n    );\n};\n","import React from 'react';\nimport { Code, CodeWords } from './Decrypto-store';\nimport { Util } from '../../util/util';\n\nexport type GuessResultProps = { codeWords: CodeWords; code: Code; guessed: Code };\n\nexport const GuessResult: React.FC<GuessResultProps> = ({ codeWords, code, guessed }) => {\n    const firstIncorrect = guessed[0] !== code[0];\n    const secondIncorrect = guessed[1] !== code[1];\n    const thirdIncorrect = guessed[2] !== code[2];\n\n    return (\n        <div className=\"guessed\">\n            <div className=\"guess\">\n                <div className=\"code-word\">{codeWords.first}</div>\n                <span className={Util.classNames('code-guess', firstIncorrect ? 'invalid' : 'valid')}>\n                    {guessed[0]}\n                </span>\n                {firstIncorrect && <span className=\"code-was\">{code[0]}</span>}\n            </div>\n            <div className=\"guess\">\n                <div className=\"code-word\">{codeWords.second}</div>\n                <span className={Util.classNames('code-guess', secondIncorrect ? 'invalid' : 'valid')}>\n                    {guessed[1]}\n                </span>\n                {secondIncorrect && <span className=\"code-was\">{code[1]}</span>}\n            </div>\n            <div className=\"guess\">\n                <div className=\"code-word\">{codeWords.third}</div>\n                <span className={Util.classNames('code-guess', thirdIncorrect ? 'invalid' : 'valid')}>\n                    {guessed[2]}\n                </span>\n                {thirdIncorrect && <span className=\"code-was\">{code[2]}</span>}\n            </div>\n        </div>\n    );\n};\n","import React, { useMemo } from 'react';\nimport { Knowledge } from './Decrypto-store';\n\nexport type KnowledgeViewProps = { knowledge: Knowledge };\n\nexport const KnowledgeView: React.FC<KnowledgeViewProps> = ({ knowledge }) => {\n    const rows = useMemo(() => {\n        const result = [];\n        const max = knowledge.reduce((red, cur) => Math.max(red, cur.length), 0);\n        for (let i = 0; i < max; i++) {\n            result.push(\n                <tr key={i}>\n                    {knowledge.map((k, idx) => (\n                        <td key={idx}>{k[i]}</td>\n                    ))}\n                </tr>\n            );\n        }\n        return result;\n    }, [knowledge]);\n\n    return (\n        <div className=\"knowledge\">\n            <table>\n                <thead>\n                    <tr>\n                        <td>1</td>\n                        <td>2</td>\n                        <td>3</td>\n                        <td>4</td>\n                    </tr>\n                </thead>\n                <tbody>{rows}</tbody>\n            </table>\n        </div>\n    );\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport QRCode from 'qrcode';\n\ntype ColorOption = { dark?: string; light?: string };\nconst transparent = '#0000';\n// we always choose transparent bg if any color of the qr code itself was chosen,\n// because the bg can be better regulated by the outer css styles\nexport const QrCodeColorOptions = {\n    white: { dark: '#FFF', light: transparent },\n    black: { dark: '#000', light: transparent },\n};\n\nexport type QrCodeOptions = { margin?: number; width?: number; color?: ColorOption };\n\ntype QrCodeProps = { info: string; options: QrCodeOptions };\n\nexport const QrCode: React.FC<QrCodeProps> = ({ info, options }) => {\n    const [error, setError] = useState<Error | undefined>();\n    const canvas = useRef<HTMLCanvasElement | null>(null);\n\n    useEffect(() => {\n        QRCode.toCanvas(canvas.current, info, options, (error) => {\n            if (error) setError(error);\n        });\n    }, [info, options]);\n\n    if (error) return <>Ups, something went wrong (Code: QR1)</>;\n\n    return <canvas ref={canvas} />;\n};\n","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport QrCode from 'qrcode-reader';\nimport { Code, CodeWords } from './Decrypto-store';\nimport { __ } from 'first-intl';\n\nconst openStream = (): Promise<MediaStream> =>\n    navigator.mediaDevices.getUserMedia({ audio: false, video: { facingMode: 'environment' } });\n\ntype QrCodeScannerProps = { onInput: (input: { code: Code; codeWords: CodeWords }) => void; prepareClose: boolean };\n\nexport const QrCodeScanner: React.FC<QrCodeScannerProps> = ({ onInput, prepareClose }) => {\n    const [permissionDenied, setPermissionDenied] = useState(false);\n    const [error, setError] = useState<Error | undefined>();\n    const [stream, setStream] = useState<MediaStream | undefined>();\n    const streamRef = useRef<MediaStream | undefined>();\n    streamRef.current = stream;\n    const { width, height } = useMemo(\n        () => ({\n            width: window.innerWidth,\n            height: window.innerHeight,\n        }),\n        []\n    );\n    const canvas = useRef<HTMLCanvasElement | null>(null);\n    const video = useRef<HTMLVideoElement | null>(null);\n    const isRunning = useRef(false);\n    const createSnap = useRef(() => {});\n\n    const clearStream = useCallback((): void => {\n        streamRef.current!.getTracks().forEach((track) => streamRef.current!.removeTrack(track));\n        video.current!.srcObject = null;\n        video.current!.src = '';\n    }, []);\n\n    useEffect(() => {\n        openStream()\n            .then(setStream)\n            .catch((e) => {\n                if (e.name === 'NotAllowedError') {\n                    // if encountered first time show the user the warning and consequently fail by trying to open\n                    // the media stream, because that helps to notify him that we want to open the stream.\n                    setPermissionDenied(true);\n                } else {\n                    // clear the interval, because will not be solved soon\n                    setError(e);\n                }\n            });\n    }, [clearStream]);\n\n    useEffect(() => {\n        if (prepareClose) {\n            video.current!.pause(); // eslint-disable-line react-hooks/exhaustive-deps\n            clearStream();\n        }\n    }, [prepareClose, clearStream]);\n\n    const startScanning = useCallback((): void => {\n        window.requestAnimationFrame(createSnap.current);\n    }, []);\n\n    useEffect(() => {\n        const videoElem = video.current!;\n        if (stream && !isRunning.current) {\n            isRunning.current = true;\n            if ('srcObject' in videoElem) {\n                videoElem.srcObject = stream;\n            } else {\n                // Avoid using this in new browsers, as it is going away.\n                videoElem!.src = window.URL.createObjectURL(stream);\n            }\n            // we have to set those attributes to empty strings, to ensure that\n            // the video displays anything on safari ios\n            videoElem.setAttribute('autoplay', '');\n            videoElem.setAttribute('muted', '');\n            videoElem.setAttribute('playsinline', '');\n            startScanning();\n        }\n    }, [startScanning, stream]);\n\n    const handleQrCodeResult = useCallback(\n        (error: any, result: { result: string }) => {\n            if (error || prepareClose) return startScanning();\n            try {\n                const { code, codeWords } = JSON.parse(atob(result.result));\n                if (\n                    code.every((p: any) => typeof p === 'number') &&\n                    typeof codeWords.first === 'string' &&\n                    typeof codeWords.second === 'string' &&\n                    typeof codeWords.third === 'string'\n                ) {\n                    onInput({ code, codeWords });\n                }\n            } catch (e) {\n                // do nothing\n            }\n            // in every case we need to start scanning again, because\n            // the video stream needs to be active to get closed accordingly\n            // else the browser does not know the stream can be removed\n            startScanning();\n        },\n        [onInput, startScanning, prepareClose]\n    );\n\n    createSnap.current = useCallback((): void => {\n        const context = canvas.current && canvas.current.getContext('2d');\n\n        if (context) {\n            const qr = new QrCode();\n            (context as any).drawImage(video.current, 0, 0, width, height, 0, 0, width, height);\n            const imageData = context.getImageData(0, 0, width, height);\n            qr.callback = handleQrCodeResult;\n            qr.decode(imageData);\n        }\n    }, [handleQrCodeResult, height, width]);\n\n    if (permissionDenied) return <>{__('media.camAccess.required')}</>;\n    if (error) return <>Ups, something went wrong (Code: QR2)</>;\n\n    return (\n        <div className=\"scanner\">\n            {stream && (\n                <div>\n                    <video ref={video} />\n                    <canvas width={width} height={height} ref={canvas} />\n                </div>\n            )}\n        </div>\n    );\n};\n","import React from 'react';\nimport { createStore } from 'react-use-sub';\nimport { QrCode, QrCodeColorOptions } from './QrCode';\nimport { QrCodeScanner } from './QrCodeScanner';\nimport { Code, CodeWords, DecryptoStore } from './Decrypto-store';\nimport { Icon } from '../../components/icons/icon';\n\ntype QrCodeState = { info: string | null; scanning: boolean; closingScanner: boolean };\nconst initialQrCodeState = { info: null, scanning: false, closingScanner: false };\n\nconst [useQrCodeInfo, qrCodeInfoStore] = createStore<QrCodeState>(initialQrCodeState);\n\nexport const closeQrCodeOverlay = () => {\n    const { closingScanner, scanning } = qrCodeInfoStore.get();\n    if (closingScanner) return;\n    else if (scanning) {\n        qrCodeInfoStore.set({ closingScanner: true });\n        // we need to close the scanner in two different phases\n        // 1. notify the scanner to clear the active video stream\n        // 2. remove the HTML elements by closing the React component\n        // this has to be done with a certain delay, which is quite high, but\n        // the user will be displayed immediate feedback by hiding the HTML elements\n        setTimeout(() => qrCodeInfoStore.set(initialQrCodeState), 1000);\n    } else {\n        qrCodeInfoStore.set(initialQrCodeState);\n    }\n};\nexport const openQrCodeInfoOverlay = (info: string) => qrCodeInfoStore.set({ info });\nexport const openQrCodeScannerOverlay = () => qrCodeInfoStore.set({ scanning: true });\n\nconst _onScanInput = ({ code, codeWords }: { code: Code; codeWords: CodeWords }) => {\n    closeQrCodeOverlay();\n    DecryptoStore.set(({ enemy }) => ({ enemy: { ...enemy, code, codeWords, round: enemy.round + 1 } }));\n};\n\nexport const QrCodeOverlay: React.FC = () => {\n    const { info, scanning, closingScanner } = useQrCodeInfo((state) => state);\n    const width = Math.min(window.innerWidth, window.innerHeight);\n\n    return info ? (\n        <div className=\"qr-code\">\n            <QrCode info={info} options={{ color: QrCodeColorOptions.black, width }} />\n            <button onClick={closeQrCodeOverlay}>\n                <Icon.Times />\n            </button>\n        </div>\n    ) : scanning ? (\n        <div className=\"qr-scanning\" style={closingScanner ? { display: 'none' } : undefined}>\n            <QrCodeScanner onInput={_onScanInput} prepareClose={closingScanner} />\n            <button onClick={closeQrCodeOverlay}>\n                <Icon.Times />\n            </button>\n        </div>\n    ) : null;\n};\n","import React, { useCallback } from 'react';\nimport { Code, CodeWords } from './Decrypto-store';\nimport { openQrCodeInfoOverlay } from './QrCodeOverlay';\nimport { Icon } from '../../components/icons/icon';\nimport { __ } from 'first-intl';\n\nexport type ShowQrCodeProps = { code: Code; codeWords: CodeWords };\n\nexport const ShowQrCode: React.FC<ShowQrCodeProps> = ({ codeWords, code }) => {\n    const onClick = useCallback(() => openQrCodeInfoOverlay(btoa(JSON.stringify({ code, codeWords }))), [\n        code,\n        codeWords,\n    ]);\n\n    return (\n        <button className=\"open-qr-code\" onClick={onClick} type=\"button\">\n            <Icon.QrCode />\n            <div className=\"description\">{__('DECRYPTO.btn.transfer')}</div>\n        </button>\n    );\n};\n","import React from 'react';\nimport { Util } from '../../util/util';\nimport { Code, CodeWords, DecryptoStore, useDecryptoSub } from './Decrypto-store';\nimport { CodeWordsSelection } from './CodeWordsSelection';\nimport { GuessCode } from './GuessCode';\nimport { GuessResult } from './GuessResult';\nimport { KnowledgeView } from './KnowledgeView';\nimport { ShowQrCode } from './ShowQrCode';\nimport { __ } from 'first-intl';\n\nconst _randomCode = (): Code => Util.arrayShuffle([1, 2, 3, 4]).slice(0, 3) as Code;\nconst _generateCode = () =>\n    DecryptoStore.set(({ me }) => ({\n        me: { ...me, code: _randomCode(), codeWords: undefined, guessed: undefined, round: me.round + 1 },\n    }));\nconst _setCodeWords = (codeWords: CodeWords) => DecryptoStore.set(({ me }) => ({ me: { ...me, codeWords } }));\nconst _setGuessed = (guessed: Code) =>\n    DecryptoStore.set(({ me, results: { wins, losses } }) => {\n        const { codeWords, code } = me;\n        const { first, second, third } = codeWords!;\n        const wrongGuess = guessed[0] !== code![0] || guessed[1] !== code![1] || guessed[2] !== code![2];\n        const knowledge: any = [...me.knowledge].map((arr) => [...arr]);\n        knowledge[code![0] - 1].push(first);\n        knowledge[code![1] - 1].push(second);\n        knowledge[code![2] - 1].push(third);\n        const updatedMe = { me: { ...me, knowledge, guessed } };\n        return wrongGuess ? { ...updatedMe, results: { wins, losses: losses + 1 } } : updatedMe;\n    });\n\nexport const DecryptoMe: React.FC = () => {\n    const { code, codeWords, guessed, knowledge, round } = useDecryptoSub(({ me }) => me);\n    const disableGeneration = useDecryptoSub(({ enemy: { guessed, round }, me, results: { wins, losses } }) => {\n        const finishedEnemyRound = guessed ? round : round - 1;\n        const meRound = me.round;\n        const lostOrWon = losses > 1 || wins > 1;\n        return lostOrWon || (meRound > 0 && finishedEnemyRound !== meRound);\n    });\n\n    const noCodeOrFinishedGuessing = !code || !!(code && codeWords && guessed);\n\n    return (\n        <>\n            {round > 0 && (\n                <div className=\"round\">\n                    {__('DECRYPTO.round')} {round}\n                </div>\n            )}\n            {noCodeOrFinishedGuessing && (\n                <div className=\"generate-code\">\n                    <button onClick={_generateCode} type=\"button\" disabled={disableGeneration}>\n                        ?.?.?\n                        <div className=\"description\">{__('DECRYPTO.btn.generate')}</div>\n                    </button>\n                </div>\n            )}\n            {code && !codeWords && <CodeWordsSelection onSubmit={_setCodeWords} code={code} />}\n            {code && codeWords && !guessed && <GuessCode onSubmit={_setGuessed} codeWords={codeWords} />}\n            {code && codeWords && guessed && <GuessResult codeWords={codeWords} code={code} guessed={guessed} />}\n            {code && codeWords && <ShowQrCode code={code} codeWords={codeWords} />}\n            <KnowledgeView knowledge={knowledge} />\n        </>\n    );\n};\n","import React, { useCallback } from 'react';\nimport { Code, DecryptoStore, PlayerState, useDecryptoSub } from './Decrypto-store';\nimport { GuessCode } from './GuessCode';\nimport { GuessResult } from './GuessResult';\nimport { KnowledgeView } from './KnowledgeView';\nimport { openQrCodeScannerOverlay } from './QrCodeOverlay';\nimport { Icon } from '../../components/icons/icon';\nimport { __ } from 'first-intl';\n\nconst _setEnemy = (meUpdates: Partial<PlayerState>) =>\n    DecryptoStore.set(({ enemy }) => ({ enemy: { ...enemy, ...meUpdates } }));\nconst _setGuessed = (guessed: Code) =>\n    DecryptoStore.set(({ enemy, results: { wins, losses } }) => {\n        const { codeWords, code } = enemy;\n        const { first, second, third } = codeWords!;\n        const correctGuess = guessed[0] === code![0] && guessed[1] === code![1] && guessed[2] === code![2];\n        const knowledge: any = [...enemy.knowledge].map((arr) => [...arr]);\n        knowledge[code![0] - 1].push(first);\n        knowledge[code![1] - 1].push(second);\n        knowledge[code![2] - 1].push(third);\n        const updatedEnemy = { enemy: { ...enemy, knowledge, guessed } };\n        return correctGuess ? { ...updatedEnemy, results: { wins: wins + 1, losses } } : updatedEnemy;\n    });\n\nexport const DecryptoEnemy: React.FC = () => {\n    const { code, codeWords, guessed, knowledge, round } = useDecryptoSub(({ enemy }) => enemy);\n    const disableCatch = useDecryptoSub(({ me: { round, codeWords }, enemy, results: { wins, losses } }) => {\n        const readyMeRound = codeWords ? round : round - 1;\n        return readyMeRound <= enemy.round;\n    });\n\n    const onClick = useCallback(() => {\n        _setEnemy({ code: undefined, codeWords: undefined, guessed: undefined });\n        openQrCodeScannerOverlay();\n    }, []);\n\n    const noCodeOrFinishedGuessing = !code || !!(code && codeWords && guessed);\n\n    return (\n        <>\n            {round > 0 && (\n                <div className=\"round\">\n                    {__('DECRYPTO.round')} {round}\n                </div>\n            )}\n            {noCodeOrFinishedGuessing && (\n                <div className=\"scan-code\">\n                    <button onClick={onClick} type=\"button\" disabled={disableCatch}>\n                        <Icon.Glasses />\n                        <div className=\"description\">{__('DECRYPTO.btn.catch')}</div>\n                    </button>\n                </div>\n            )}\n            {code && codeWords && !guessed && <GuessCode onSubmit={_setGuessed} codeWords={codeWords} />}\n            {code && codeWords && guessed && <GuessResult codeWords={codeWords} code={code} guessed={guessed} />}\n            <KnowledgeView knowledge={knowledge} />\n        </>\n    );\n};\n","import React, { useCallback, MouseEvent } from 'react';\nimport { createStore } from 'react-use-sub';\nimport { UrlUtil } from './util/url';\nimport { App } from './App';\nimport { Again } from './games/Again';\nimport { MissionControl } from './mission/MissionControl';\nimport { SpadeIsTrump } from './games/SpadeIsTrump';\nimport { VeryClever } from './games/VeryClever';\nimport { Decrypto } from './games/Decrypto';\n\nexport enum NavLoc {\n    AGAIN = 'again',\n    DECRYPTO = 'decrypto',\n    MISSION = 'mission',\n    SIT = 'spade-is-trump',\n    VERY_CLEVER = 'very-clever',\n}\nconst _getCurrentNavLoc = (): NavLoc | null => {\n    const { loc } = UrlUtil.locationSearchToQuery(window.location.search);\n    return Object.values(NavLoc).includes(loc) ? loc : null;\n};\n\nconst [useNavSub, NavStore] = createStore<{ loc: NavLoc | null }>({ loc: _getCurrentNavLoc() });\n\nconst Root: React.FC = () => {\n    const loc = useNavSub(({ loc }) => loc);\n\n    if (loc === NavLoc.AGAIN) return <Again />;\n    if (loc === NavLoc.DECRYPTO) return <Decrypto />;\n    if (loc === NavLoc.MISSION) return <MissionControl />;\n    if (loc === NavLoc.SIT) return <SpadeIsTrump />;\n    if (loc === NavLoc.VERY_CLEVER) return <VeryClever />;\n\n    return <App />;\n};\n\nconst onLocationChange = () => {\n    const loc = _getCurrentNavLoc();\n    if (loc !== NavStore.get().loc) NavStore.set({ loc });\n};\nwindow.addEventListener('popstate', onLocationChange);\n\nconst Link: React.FC<{ children: React.ReactNode; loc: NavLoc }> = ({ children, loc }) => {\n    const href = '?loc=' + loc;\n\n    const onClick = useCallback(\n        (event: MouseEvent<HTMLAnchorElement>) => {\n            event.preventDefault();\n            NavStore.set({ loc });\n            window.history.pushState(null, loc, href);\n        },\n        [loc, href]\n    );\n\n    return (\n        <a href={href} onClick={onClick}>\n            {children}\n        </a>\n    );\n};\n\nexport const AppNavigation = { Root, Link };\n","import React, { useCallback, useState } from 'react';\nimport { Util } from '../../util/util';\nimport { useDecryptoSub } from './Decrypto-store';\nimport { DecryptoMe } from './DecryptoMe';\nimport { QrCodeOverlay } from './QrCodeOverlay';\nimport { DecryptoEnemy } from './DecryptoEnemy';\nimport { Icon } from '../../components/icons/icon';\nimport { NotifyResult } from './NotifyResult';\n\nexport const DecryptoInternal: React.FC = () => {\n    const [showEnemy, setShowEnemy] = useState<boolean>(false);\n    const { losses, wins } = useDecryptoSub(({ results }) => results);\n\n    const onSwitch = useCallback(() => setShowEnemy((s) => !s), []);\n\n    return (\n        <div\n            className={Util.classNames('decrypto', showEnemy && 'enemy', losses > 0 && 'alarm', wins > 0 && 'success')}>\n            <div className=\"decrypto-inner\">\n                <NotifyResult />\n                <div className=\"navigation\">\n                    <button type=\"button\" onClick={onSwitch}>\n                        <Icon.Exchange />\n                    </button>\n                </div>\n                <div className=\"content\">{showEnemy ? <DecryptoEnemy /> : <DecryptoMe />}</div>\n                <QrCodeOverlay />\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport { ErrorBoundary } from '../../components/ErrorBoundary';\nimport { DecryptoStore } from './Decrypto-store';\nimport { DecryptoInternal } from './Decrypto';\nimport { Footer } from '../../footer/Footer';\nimport { FooterRestart } from '../../footer/FooterRestart';\n\nconst DecryptoFooter: React.FC = () => (\n    <Footer>\n        <FooterRestart onClick={DecryptoStore.reset} />\n    </Footer>\n);\n\nexport const Decrypto: React.FC = () => (\n    <ErrorBoundary fix={DecryptoStore.reset}>\n        <DecryptoInternal />\n        <DecryptoFooter />\n    </ErrorBoundary>\n);\n","import './assets/main.scss';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Globals } from './globals';\nimport { ServiceWorkerUpdater } from './sw-logic';\nimport { IntlRoot } from './intl';\nimport { AppNavigation } from './AppNavigation';\n\nReactDOM.render(\n    <IntlRoot>\n        <AppNavigation.Root />\n        <ServiceWorkerUpdater />\n    </IntlRoot>,\n    Globals.document().getElementById('root')\n);\n"],"sourceRoot":""}