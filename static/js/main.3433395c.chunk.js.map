{"version":3,"sources":["globals.ts","util/util.ts","components/icons/icon.tsx","sw-logic.tsx","intl.tsx","util/url.ts","admin/Admin.tsx","games/Again/again-store.ts","admin/AdminEntry.tsx","App.tsx","games/Again/data.ts","games/Again/types.ts","games/Again/Box.tsx","games/Again/ColorPoints.tsx","games/Again/again-logic.ts","games/Again/Jokers.tsx","util/hof-util.ts","hooks/useWindowResizeEffect.ts","hooks/useEventListener.ts","games/Again/again-resize.ts","games/Again/Grid.tsx","games/Again/Letters.tsx","games/Again/RowPoints.tsx","games/Again/Cube.tsx","footer/Footer.tsx","games/Again/Turn.tsx","games/Again/Total.tsx","games/Again/CompletionPopup.tsx","games/Again/ActionSplash.tsx","games/Again/AgainStarted.tsx","components/form/DisplayError.tsx","util/event-util.ts","components/form/select.tsx","games/Again/DataSelection.tsx","components/ErrorBoundary.tsx","footer/FooterUndo.tsx","footer/FooterRestart.tsx","games/Again/index.tsx","mission/MissionControl.tsx","components/form/input.tsx","games/SpadeIsTrump/spadeIsTrump-store.ts","games/SpadeIsTrump/history-store.ts","games/SpadeIsTrump/players-store.ts","games/VeryClever/data.ts","games/SpadeIsTrump/AddPlayer.tsx","games/SpadeIsTrump/PlayerRow.tsx","games/SpadeIsTrump/StartupInfoPicker.tsx","games/SpadeIsTrump/Points.tsx","games/SpadeIsTrump/ClickableDescription.tsx","games/SpadeIsTrump/SpadeIsTrumpStarted.tsx","games/SpadeIsTrump/index.tsx","games/VeryClever/VeryClever-store.ts","games/Decrypto/NotifyResult.tsx","games/VeryClever/VeryClever-logic.ts","games/VeryClever/AvailableBonus.tsx","games/VeryClever/RoundOverview.tsx","games/VeryClever/ValueSelection.tsx","games/VeryClever/Bonus.tsx","games/VeryClever/Box.tsx","games/VeryClever/BoxRow.tsx","games/VeryClever/BoxGrid.tsx","games/VeryClever/Points.tsx","games/VeryClever/ActivatedBonus.tsx","games/VeryClever/VeryCleverInner.tsx","games/VeryClever/index.tsx","games/Decrypto/Decrypto-store.ts","games/Decrypto/CodeWordsSelection.tsx","components/form/SelectOverlay.tsx","games/Decrypto/GuessCode.tsx","games/Decrypto/GuessResult.tsx","games/Decrypto/KnowledgeView.tsx","games/Decrypto/QrCode.tsx","games/Decrypto/QrCodeScanner.tsx","games/Decrypto/QrCodeOverlay.tsx","games/Decrypto/ShowQrCode.tsx","games/Decrypto/DecryptoMe.tsx","games/Decrypto/DecryptoEnemy.tsx","AppNavigation.tsx","games/Decrypto/Decrypto.tsx","games/Decrypto/index.tsx","index.tsx"],"names":["Globals","window","document","navigator","onLine","ClientHistory","back","history","classNamesFilter","arg","Util","num","defaultValue","Array","fill","classes","filter","join","undefined","before","index","value","copy","splice","uuid","a","Math","random","toString","replace","arr","indices","forEach","i","length","j","floor","_Icon","symbol","props","width","className","viewBox","d","Icons","Icon","Alert","ArrowRight","ChevronUp","ChevronDown","ArrowDown","Ban","Crown","Exchange","Forward","Glasses","Home","Key","Mask","Menu","Undo","PowerOff","QrCode","Refresh","Refresh2","Settings","Times","Trash","reloadPage","open","location","href","newSWInstalledCb","registerServiceWorker","serviceWorker","register","then","reg","onupdatefound","installingWorker","installing","activeWorker","active","onstatechange","state","catch","console","error","doAfter","ms","cb","Promise","resolve","setTimeout","ServiceWorkerUpdater","useState","content","setContent","contentDelayed","useCallback","delay","initRefresh","all","useEffect","addEventListener","_persist","chosen","Persistore","set","addIntlData","deIntl","currentLang","saved","get","_getPersisted","lang","language","startsWith","_detectPreferred","enIntl","Updater","setKey","key","toggleIntl","IntlRoot","children","UrlUtil","search","s","substr","params","split","result","param","pair","decodeURIComponent","allReportedErrors","oldConsoleError","push","onerror","e","SplashIconType","Admin","close","map","message","String","Object","keys","localStorage","JSON","stringify","getItem","onClick","_AdminEntry","lastClicked","successCount","margin","timing","AdminEntry","setActive","now","Date","diff","App","src","alt","AppNavigation","Link","loc","NavLoc","AGAIN","loading","__","SIT","VERY_CLEVER","DECRYPTO","parseRawData","starPositions","rowColors","label","grid","stars","backgroundColor","row","Number","AllRawData","AllData","black","blue","green","orange","pink","violet","yellow","dataOptions","DataSelectionOptions","COLOR","O","B","G","R","Y","Box","color","customColor","circled","crossed","star","borderColor","flicker","xmlns","x","y","height","rx","ry","stroke","strokeWidth","points","textAnchor","fontSize","cx","cy","r","x1","y1","x2","y2","blockColorPoints","colorPointsBlocked","AgainStore","ColorList","ColorPoints","completedColors","rowPoints1","rowPoints2","getCompletedRows","every","checked","getCompletedColors","gridData","boxIndex","getClickable","allowMiddle","rowIndex","calculate","again","completedRows","totalPoints","rowPointsBlocked","takenJokers","completed","reduce","v","getTotalPoints","uncrossedRow","uncrossedGrid","unblockedRowPoints","unblockedColorPoints","initialAgainState","turns","initialAgainStartedState","turnCrossed","completedColor","createStore","againSplash","againData","againStarted","useAgainSub","store","getHistory","states","parse","randomDataKey","limit","setStarted","updates","getChosenData","option","init","againState","updatedState","unshift","pop","undo","shift","UNDO","remove","restart","chooseData","selectedOption","dataOption","setSplash","icon","onCross","currentRow","count","updatedRow","updatedTurnRow","onFinish","madeTurn","lastCrossed","newCompletedRows","nextCompletedColors","newCompletedColor","findIndex","Boolean","skipped","calculateTurn","SKIP","SUBMIT","onAbort","CANCEL","onClosePopup","BoxWrapper","NumberJoker","fontWeight","ColorJoker","JokerSeparator","EqualSign","JokerPlaceholder","taken","Jokers","takeJoker","_","HofUtil","func","lastPending","args","clearTimeout","useWindowResizeEffect","callbackRef","useRef","current","type","listener","capture","ref","wrapped","removeEventListener","useEventListener","innerWidth","applyPadding","padding","ratioDiscrepancy","innerHeight","calculateNecessaryPadding","paddingValue","from","getElementsByClassName","elem","style","setProperty","Grid","clickable","lastTurn","onClickHandler","starPosition","crossedRow","isMiddleRow","isClickable","allLetters","Letters","letter","blockRowPoints","rowWasCompleted","RowPoints","VALUE_SVG","Cube","innerValue","FooterButton","description","FooterHome","applyFooterHeight","getElementById","Footer","expandable","hideHome","setOpen","toggle","o","Abort","Finish","Turn","FooterTurnControl","Success","turn","isCompleted","Turns","Total","CompletionPopup","onClose","hide","ActionSplash","iconView","iconType","renderIcon","AgainStarted","DisplayError","EventUtil","preventDefault","event","original","target","Option","__string","Select","serialize","required","onChange","onBlur","options","disabled","name","optionValues","values","getOptionValues","handlerRemapped","handler","optionValue","indexOf","currentValue","find","currentIndex","onSelect","OptionsWithRandom","DataSelection","ErrorBoundary","hasError","this","fix","Component","getDerivedStateFromError","FooterUndo","FooterRestart","FooterStarted","Again","missions","title","text","MissionControl","processed","selected","interval","processNextLetter","clearInterval","setState","runLetters","setInterval","select","mission","m","isSelected","substring","transformHandler","trim","Input","placeholder","inputClassName","onFocus","autoFocus","forwardedRef","readOnly","FormInput","Field","rest","gameState","players","useSpadeIsTrumpSub","SpadeIsTrumpStore","update","_set","HistoryStore","reset","rearrange","cleared","player","total","_clear","slice","next","moveTo","after","_get","Color","PlayerStore","shortcut","p","initialValues","Morfi","create","Form","Fields","initialData","errors","validation","id","AddPlayerForm","data","setData","onSubmit","AddPlayer","focus","setFocus","PlayerRow","pos","moveUp","moveDown","playersFromStartup","startupInfo","rounds","numberOfCards","numberOfPlayers","playerIdx","newPlayer","StartupInfoValidations","isNaN","submit","StartupInfoPicker","parseNum","parsed","_tipToString","tip","Points","activeRound","checkable","currentTip","setCurrentTip","onChangeTip","setEarned","earned","onSuccess","onFailed","clazzName","readyToPlay","ClickableDescription","desc","short","tag","showName","setShowName","displayed","React","createElement","onPointsChange","roundIdx","onPlayerChange","SpadeIsTrumpStarted","earnings","round","getActiveRound","earnedPoints","res","val","isActiveRound","activeReady","activeRoundReady","cards","positives","roundHasError","earnedIdx","max","SpadeIsTrumpFooter","started","SpadeIsTrump","BONUS","orangeFactors","Data","YELLOW","contents","rowBonus","BLUE","ORANGE_4","GREEN","FOX","columnBonus","YELLOW_10","YELLOW_14","YELLOW_16","YELLOW_20","PLUS_1","ORANGE_5","REFRESH","PURPLE","bonus","ORANGE","factors","f","ORANGE_6","_setHistoryLocal","_getHistory","isArray","initialGameState","useVeryCleverSub","_Store","Status","VeryCleverStore","_takeBonus","list","firstFalse","_allCrossed","nums","_getRowBonus","_getBonus","collected","includes","_getYellowBonus","_getBlueBonus","_crossableClicked","earnedBonus","_getNextIndex","_selectValue","factor","_sumPoints","cur","red","ROUND_BONUS","ULTIMATE","_getRoundBonus","VeryCleverLogic","takeReshuffleBonus","reshuffle","takePlusOneBonus","plusOne","boxClicked","_isCrossed","_isNextIndex","selection","selectValue","clearSelection","yPoints","bPoints","gPoints","_greenPoints","oPoints","pPoints","min","foxes","useBonus","_useBonus","nextRound","AvailableBonus","c","AvailableReshuffleBonus","AvailablePlusOneBonus","RoundOverview","ValueSelectionOption","ValueSelection","prevVal","currentIdx","CONTENT_AND_COLOR","BLACK","CROSS","Bonus","gePrefix","highlight","_isHighLight","newContent","BoxRow","bonusList","point","array6","BoxGrid","rowBonusList","columnBonusList","ActivatedBonus","VeryCleverInner","VeryCleverFooter","VeryClever","NoKnowledge","initialDecryptoState","results","losses","wins","me","knowledge","enemy","raw","_fetch","useDecryptoSub","Store","DecryptoStore","initialCodeWords","first","second","third","initialCodeWordsData","codeWordValidator","btoa","codeWordValidation","CodeWordsSelection","code","codeWordsData","setCodeWordsData","hasErrors","SelectOverlayValue","SelectOverlay","isOpen","node","GuessOptions","GuessCode","codeWords","setFirst","setSecond","setThird","duplicated","duplicate","_getDuplicated","_getAllDuplicated","wasGuessed","useMemo","onGuessedMe","GuessResult","guessed","firstIncorrect","secondIncorrect","thirdIncorrect","KnowledgeView","rows","k","idx","QrCodeColorOptions","white","dark","light","info","setError","canvas","QRCode","toCanvas","QrCodeScanner","onInput","prepareClose","permissionDenied","setPermissionDenied","stream","setStream","streamRef","video","isRunning","createSnap","clearStream","getTracks","track","removeTrack","srcObject","mediaDevices","getUserMedia","audio","facingMode","pause","startScanning","requestAnimationFrame","videoElem","URL","createObjectURL","setAttribute","handleQrCodeResult","atob","context","getContext","qr","drawImage","imageData","getImageData","callback","decode","initialQrCodeState","scanning","closingScanner","useQrCodeInfo","qrCodeInfoStore","closeQrCodeOverlay","_onScanInput","QrCodeOverlay","display","ShowQrCode","_generateCode","_setCodeWords","_setGuessed","wrongGuess","updatedMe","DecryptoMe","disableGeneration","finishedEnemyRound","meRound","noCodeOrFinishedGuessing","correctGuess","updatedEnemy","DecryptoEnemy","disableCatch","meUpdates","NotifyResult","status","setStatus","last","WON","LOST","DecryptoInternal","showEnemy","setShowEnemy","onSwitch","DecryptoFooter","Decrypto","_getCurrentNavLoc","useNavSub","NavStore","Root","MISSION","pushState","ReactDOM","render"],"mappings":"0lcAAaA,EAAU,CACnBC,OAAO,SAAD,mGAAC,EAAC,kBAAMA,UACdC,SAAS,SAAD,mGAAC,EAAC,kBAAMA,YAChBC,UAAU,SAAD,mGAAC,EAAC,kBAAWA,aACtBC,OAAQ,mBAAiB,WAAYJ,EAAQG,cAAgBH,EAAQG,YAAYC,SAGxEC,EAAgB,CACzBC,KAAM,kBAAML,OAAOM,QAAQD,S,sBCRzBE,EAAmB,SAACC,GAAD,QAAgBA,GAAsB,kBAARA,GAqC1CC,EAlCC,SAAIC,EAAaC,GAAjB,OAAgDC,MAAMF,GAAKG,KAAKF,IAkCjEF,EApCM,sCAAIK,EAAJ,yBAAIA,EAAJ,uBAA2CA,EAAQC,OAAOR,GAAkBS,KAAK,WAAQC,GAoC/FR,EAxBK,SAAIS,EAAaC,EAAeC,GAC9C,IAAMC,EAAI,YAAOH,GAEjB,OADAG,EAAKC,OAAOH,EAAO,EAAGC,GACfC,GAqBEZ,EALA,SAAPc,EAAQC,GAAD,OACRA,GACOA,EAA8B,GAAhBC,KAAKC,UAAoBF,EAAY,GAAKG,SAAS,KACjE,CAAC,MAAgB,KAAO,KAAO,KAAO,MAAMC,QAAQ,SAAUL,IAE7Dd,EAhCK,SAAIoB,EAAUC,EAAmBV,GAC/C,IAAMC,EAAI,YAAOQ,GAIjB,OAHAC,EAAQC,SAAQ,SAACC,GACbX,EAAKW,GAAKZ,KAEPC,GA2BEZ,EAlBQ,SAAIoB,GAGrB,IAFA,IAAMR,EAAI,YAAOQ,GAERG,EADKX,EAAKY,OAAS,EACRD,EAAI,EAAGA,IAAK,CAC5B,IAAME,EAAIT,KAAKU,MAAMV,KAAKC,UAAYM,EAAI,IADd,EAEP,CAACX,EAAKa,GAAIb,EAAKW,IAAnCX,EAAKW,GAFsB,KAElBX,EAAKa,GAFa,KAIhC,OAAOb,GCpBLe,EAAQ,SAACC,GAAD,IAA6BC,EAA7B,uDAAgD,GAAIC,EAApD,uDAAoE,IAApE,OACV,yBAAKC,UAAWF,EAAME,UAAYF,EAAME,UAAY,QAAU,OAAQC,QAAO,cAASF,EAAT,SACzE,0BAAM1B,KAAK,eAAe6B,EAAGC,EAAMN,OAS9BO,EAAO,CAChBC,MAAO,SAACP,GAAD,OAAuBF,EAAM,QAASE,EAAO,MACpDQ,WAAY,SAACR,GAAD,OAAuBF,EAAM,cAAeE,EAAO,MAC/DS,UAAW,SAACT,GAAD,OAAuBF,EAAM,aAAcE,EAAO,MAC7DU,YARgB,SAAC,GAAD,IAAGR,EAAH,EAAGA,UAAH,OAChB,kBAACI,EAAKG,UAAN,CAAgBP,UAAW/B,EAAgB,aAAc+B,MAQzDS,UAVc,SAAC,GAAD,IAAGT,EAAH,EAAGA,UAAH,OAA8B,kBAACI,EAAKE,WAAN,CAAiBN,UAAW/B,EAAgB,YAAa+B,MAWrGU,IAAK,SAACZ,GAAD,OAAuBF,EAAM,MAAOE,IACzCa,MAAO,SAACb,GAAD,OAAuBF,EAAM,QAASE,EAAO,MACpDc,SAAU,SAACd,GAAD,OAAuBF,EAAM,WAAYE,IACnDe,QAAS,SAACf,GAAD,OAAuBF,EAAM,UAAWE,IACjDgB,QAAS,SAAChB,GAAD,OAAuBF,EAAM,UAAWE,EAAO,MACxDiB,KAAM,SAACjB,GAAD,OAAuBF,EAAM,OAAQE,EAAO,MAClDkB,IAAK,SAAClB,GAAD,OAAuBF,EAAM,MAAOE,IACzCmB,KAAM,SAACnB,GAAD,OAAuBF,EAAM,OAAQE,EAAO,MAClDoB,KAAM,SAACpB,GAAD,OAAuBF,EAAM,OAAQE,EAAO,MAClDqB,KAAM,SAACrB,GAAD,OAAuBF,EAAM,OAAQE,IAC3CsB,SAAU,SAACtB,GAAD,OAAuBF,EAAM,YAAaE,IACpDuB,OAAQ,SAACvB,GAAD,OAAuBF,EAAM,UAAWE,EAAO,MACvDwB,QAAS,SAACxB,GAAD,OAAuBF,EAAM,UAAWE,EAAO,MACxDyB,SAAU,SAACzB,GAAD,OAAuBF,EAAM,YAAaE,IACpD0B,SAAU,SAAC1B,GAAD,OAAuBF,EAAM,WAAYE,IACnD2B,MAAO,SAAC3B,GAAD,OAAuBF,EAAM,QAASE,IAC7C4B,MAAO,SAAC5B,GAAD,OAAuBF,EAAM,QAASE,EAAO,OCnClD6B,EAAa,WACfpE,EAAQC,SAASoE,KAAKpE,OAAOqE,SAASC,KAAM,UAG5CC,EAAmB,aAEjBC,EAAwB,kBAC1BzE,EAAQG,YACHuE,cAAcC,SAAS,UACvBC,MAAK,SAACC,GACHA,EAAIC,cAAgB,WAIhB,IAAMC,EAAmBF,EAAIG,WACvBC,EAAeJ,EAAIK,OACzBH,EAAiBI,cAAgB,WAOE,cAA3BJ,EAAiBK,OAAyBH,GAAcT,SAIvEa,OAAM,kBAAMrF,EAAQC,SAASqF,QAAQC,MAAM,+CAQ9CC,EAAU,SAACC,EAAYC,GAAb,OACZ,IAAIC,SAAQ,SAACC,GAAD,OACR5F,EAAQC,SAAS4F,YAAW,WACxBH,IACAE,MACDH,OAGEK,EAAuB,WAAO,IAAD,EACRC,qBADQ,mBAC/BC,EAD+B,KACtBC,EADsB,KAGhCC,EAAiBC,uBACnB,SAACC,EAAeJ,GAAhB,OAAsDR,EAAQY,GAAO,kBAAMH,EAAWD,QACtF,IAGEK,EAAcF,uBAChB,kBACIR,QAAQW,IAAI,CACRJ,EAAe,EAAG,mBAClBA,EAAe,IAAM,mBACrBA,EAAe,KAAM,oBACrBA,EAAe,KAAM,qBACrBA,EAAe,KAAM,sBACrBA,EAAe,KAAM,kBAACrD,EAAKe,KAAN,OACrB4B,EAAQ,KAAMpB,OAEtB,IAQJ,OALAmC,qBAAU,WACN/B,EAAmB6B,EAnCnB,kBAAmBlG,WAAaF,OAAOuG,iBAAiB,OAAQ/B,KAqCjE,IAEEuB,EAGD,yBAAKvD,UAAU,aACX,yBAAKA,UAAU,sBACf,yBAAKA,UAAU,qBAAqBuD,IALvB,M,8BChEnBS,EAAW,SAACC,GAAD,OAA+BC,IAAWC,IAF9C,OAEwDF,IAMrEG,YAAYC,GAEZ,IAKIC,EAZkB,WAClB,IAAMC,EAAQL,IAAWM,IAJhB,QAKT,MAAiB,OAAVD,GAA4B,OAAVA,EAAiBA,OAAQ9F,EAUpCgG,IALO,WACrB,IAAMC,EAAOhH,UAAUiH,SACvB,OAAOD,GAAQA,EAAKE,WAAW,MAAQ,KAAO,KAGbC,GAEjB,OAAhBP,GACAF,YAAYU,GAGhB,IAAMC,EAAU,CAAEC,OAAQ,SAACC,MAEdC,EAAa,WACF,OAAhBZ,GACAA,EAAc,KACdF,YAAYU,GACZC,EAAQC,OAAO,MACfhB,EAAS,QAETM,EAAc,KACdF,YAAYC,GACZU,EAAQC,OAAO,MACfhB,EAAS,QAIJmB,EAA8C,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACnD9B,mBAA4BgB,GADuB,mBAClEW,EADkE,KAC7DD,EAD6D,KAOzE,OAJAlB,qBAAU,WACNiB,EAAQC,OAASA,IAClB,IAEI,kBAAC,WAAD,CAAUC,IAAKA,GAAMG,I,OCCnBC,EAtCiB,WAI1B,IAJ4E,IAAjDC,EAAgD,uDAA/B,GACtCC,EAAID,EAAOV,WAAW,KAAOU,EAAOE,OAAO,GAAKF,EAChDG,EAASF,EAAEG,MAAM,KACjBC,EAAS,GACNnG,EAAI,EAAGA,EAAIiG,EAAOhG,OAAQD,IAAK,CACpC,IAAMoG,EAAQH,EAAOjG,GACrB,GAAIoG,EAAO,CACP,IAAMC,EAAOD,EAAMF,MAAM,KACnB9G,EAAQiH,EAAK,QACLpH,IAAVG,IAAqB+G,EAAOG,mBAAmBD,EAAK,KAAOC,mBAAmBlH,KAG1F,OAAO+G,GCzBLI,EAA2B,GAC3BC,EAAkBxI,OAAOqF,QAAQC,MACvCtF,OAAOqF,QAAQC,MAAQ,WACnBiD,EAAkBE,KAAlB,MAAAF,EAAiB,WACjBC,EAAe,WAAf,cAEJxI,OAAO0I,QAAU,SAACC,GACdJ,EAAkBE,KAAKE,IAKpB,ICPKC,EDOCC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,yBAAKtG,UAAU,SACX,yBAAKA,UAAU,iBACX,6CACC+F,EAAkBQ,KAAI,SAACC,EAAS7H,GAAV,OACnB,uBAAGsG,IAAKtG,GAAQ8H,OAAOD,QAG/B,yBAAKxG,UAAU,gBACX,4CACC0G,OAAOC,KAAKC,cAAcL,KAAI,SAACtB,GAAD,OAC3B,kBAAC,WAAD,CAAUA,IAAKA,GACX,4BAAKA,GACL,2BAAI4B,KAAKC,UAAUF,aAAaG,QAAQ9B,UAIpD,4BAAQ+B,QAASV,GAAjB,WE5BFW,EAAc,CAChBC,YAAa,EACbC,aAAc,EACdC,OAAQ,IACRC,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,MAIzBC,EAAuB,WAAO,IAAD,EACVhE,oBAAS,GADC,mBAC/Bb,EAD+B,KACvB8E,EADuB,KAEhCP,EAAUtD,uBAAY,WACxB,IAAM8D,EAAMC,KAAKD,MACXE,EAAOF,EAAMP,EAAYC,YAC/B,GAAIQ,EAAO,IAEPT,EAAYE,aAAe,MACxB,CACH,IAAME,EAASJ,EAAYI,OAAOJ,EAAYE,cAC1CO,EAAOT,EAAYG,OAASC,GAAUA,EAASK,EAAOT,EAAYG,OAEjC,IAA7BH,EAAYE,cACZF,EAAYE,aAAe,EAC3BI,GAAU,IAEVN,EAAYE,eAIhBF,EAAYE,aAAe,EAGnCF,EAAYC,YAAcM,IAC3B,IAEGlB,EAAQ5C,uBAAY,kBAAM6D,GAAU,KAAQ,IAElD,OAAO9E,EAAS,kBAAC,EAAD,CAAO6D,MAAOA,IAAY,yBAAKtG,UAAU,cAAcgH,QAASA,KCjCvEW,EAAgB,kBACzB,yBAAK3H,UAAU,OACX,4BAAQA,UAAU,cACd,yBAAK4H,IAAI,YAAY5H,UAAU,WAAW6H,IAAI,SAC9C,yBACID,IAA0B,OL4CatD,EK5CN,oBAAsB,gBACvDtE,UAAU,WACV6H,IAAI,kBACJb,QAAS9B,KAGjB,yBAAKlF,UAAU,eACX,yBAAKA,UAAU,WACX,kBAAC8H,GAAcC,KAAf,CAAoBC,IAAKC,GAAOC,OAC5B,yBAAKN,IAAI,qBAAqBC,IAAI,gBAAgBM,QAAQ,SAC1D,4BAAKC,YAAG,YAGhB,yBAAKpI,UAAU,WACX,kBAAC8H,GAAcC,KAAf,CAAoBC,IAAKC,GAAOI,KAC5B,yBAAKT,IAAI,mBAAmBC,IAAI,cAAcM,QAAQ,SACtD,4BAAKC,YAAG,UAGhB,yBAAKpI,UAAU,WACX,kBAAC8H,GAAcC,KAAf,CAAoBC,IAAKC,GAAOK,aAC5B,yBAAKV,IAAI,0BAA0BC,IAAI,qBAAqBM,QAAQ,SACpE,4BAAKC,YAAG,SAGhB,yBAAKpI,UAAU,WACX,kBAAC8H,GAAcC,KAAf,CAAoBC,IAAKC,GAAOM,UAC5B,yBAAKX,IAAI,wBAAwBC,IAAI,mBAAmBM,QAAQ,SAChE,4BAAKC,YAAG,gBAIpB,kBAAC,EAAD,Q,OClCFI,EAAe,SAAC,GAAD,IADUC,EADLC,EAEFC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,gBAAvB,MAA6D,CAC9EH,QACAC,MAJsBF,EAICE,EAJkCF,EAAUnC,KAAI,SAACwC,GAAD,OAAcA,EAAIrD,MAAM,QAK/FmD,OAJ2BJ,EAIEI,EAJkCJ,EAAc/C,MAAM,IAAIa,IAAIyC,SAK3FF,oBAGEG,EAuBI,CACFN,MAAO,mBACPG,gBAAiB,UACjBD,MAAO,kBACPD,KAAM,CACF,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YA1CNK,EA6CK,CACHN,MAAO,oBACPG,gBAAiB,UACjBD,MAAO,kBACPD,KAAM,CACF,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YAhENK,EAmEM,CACJN,MAAO,qBACPG,gBAAiB,UACjBD,MAAO,kBACPD,KAAM,CACF,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YAtFNK,EAyFI,CACFN,MAAO,mBACPG,gBAAiB,UACjBD,MAAO,kBACPD,KAAM,CACF,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YA5GNK,EA+GM,CACJN,MAAO,qBACPG,gBAAiB,UACjBD,MAAO,kBACPD,KAAM,CACF,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YAlINK,EAqIM,CACJN,MAAO,qBACPG,gBAAiB,UACjBD,MAAO,kBACPD,KAAM,CACF,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YAMCM,EAAyC,CAClDC,MAAOX,EA9JA,CACHG,MAAO,oBACPG,gBAAiB,UACjBD,MAAO,kBACPD,KAAM,CACF,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,aA4IRQ,KAAMZ,EAAaS,GACnBI,MAAOb,EAAaS,GACpBK,OAAQd,EAAaS,GACrBM,KAAMf,EAAaS,GACnBO,OAAQhB,EAAaS,GACrBQ,OAAQjB,EAAaS,IAEZS,EAA4BhD,OAAOC,KAAKuC,GAExCS,GAAwDD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","file":"static/js/main.3433395c.chunk.js","sourcesContent":["export const Globals = {\n    window: () => window,\n    document: () => document,\n    navigator: (): any => navigator,\n    onLine: (): boolean => !('onLine' in Globals.navigator()) || Globals.navigator().onLine,\n};\n\nexport const ClientHistory = {\n    back: () => window.history.back(),\n};\n","const classNamesFilter = (arg: any) => !!arg && typeof arg === 'string';\nconst classNames = (...classes: any[]): string | undefined => classes.filter(classNamesFilter).join(' ') || undefined;\n\nconst array = <T>(num: number, defaultValue?: T): Array<T> => Array(num).fill(defaultValue);\n\nconst arrayFill = <T>(arr: T[], indices: number[], value: T): T[] => {\n    const copy = [...arr];\n    indices.forEach((i) => {\n        copy[i] = value;\n    });\n    return copy;\n};\n\nconst nextArray = <T>(before: T[], index: number, value: T): T[] => {\n    const copy = [...before];\n    copy.splice(index, 1, value);\n    return copy;\n};\n\nconst arrayShuffle = <T>(arr: T[]): T[] => {\n    const copy = [...arr];\n    const start = copy.length - 1;\n    for (let i = start; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [copy[i], copy[j]] = [copy[j], copy[i]];\n    }\n    return copy;\n};\n\n// optimized as much as possible\n// call this function without arguments to generate a new uuid\ntype UuidParam = void;\nconst uuid = (a: UuidParam): string =>\n    (a as any)\n        ? ((a as any) ^ ((Math.random() * 16) >> ((a as any) / 4))).toString(16)\n        : (([1e7] as any) + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, uuid);\n\nexport const Util = { array, classNames, nextArray, uuid, arrayFill, arrayShuffle };\n","import React from 'react';\nimport Icons from './icon-path.json';\nimport { Util } from '../../util/util';\n\ntype IconProps = { className?: string };\n\nconst _Icon = (symbol: keyof typeof Icons, props: IconProps = {}, width: number = 512) => (\n    <svg className={props.className ? props.className + ' icon' : 'icon'} viewBox={`0 0 ${width} 512`}>\n        <path fill=\"currentColor\" d={Icons[symbol]} />\n    </svg>\n);\n\nconst ArrowDown = ({ className }: IconProps) => <Icon.ArrowRight className={Util.classNames('rotate-90', className)} />;\nconst ChevronDown = ({ className }: IconProps) => (\n    <Icon.ChevronUp className={Util.classNames('rotate-180', className)} />\n);\n\nexport const Icon = {\n    Alert: (props?: IconProps) => _Icon('ALERT', props, 576),\n    ArrowRight: (props?: IconProps) => _Icon('ARROW_RIGHT', props, 448),\n    ChevronUp: (props?: IconProps) => _Icon('CHEVRON_UP', props, 448),\n    ChevronDown,\n    ArrowDown,\n    Ban: (props?: IconProps) => _Icon('BAN', props),\n    Crown: (props?: IconProps) => _Icon('CROWN', props, 640),\n    Exchange: (props?: IconProps) => _Icon('EXCHANGE', props),\n    Forward: (props?: IconProps) => _Icon('FORWARD', props),\n    Glasses: (props?: IconProps) => _Icon('GLASSES', props, 576),\n    Home: (props?: IconProps) => _Icon('HOME', props, 576),\n    Key: (props?: IconProps) => _Icon('KEY', props),\n    Mask: (props?: IconProps) => _Icon('MASK', props, 640),\n    Menu: (props?: IconProps) => _Icon('MENU', props, 448),\n    Undo: (props?: IconProps) => _Icon('UNDO', props),\n    PowerOff: (props?: IconProps) => _Icon('POWER_OFF', props),\n    QrCode: (props?: IconProps) => _Icon('QR_CODE', props, 448),\n    Refresh: (props?: IconProps) => _Icon('REFRESH', props, 640),\n    Refresh2: (props?: IconProps) => _Icon('REFRESH_2', props),\n    Settings: (props?: IconProps) => _Icon('SETTINGS', props),\n    Times: (props?: IconProps) => _Icon('TIMES', props),\n    Trash: (props?: IconProps) => _Icon('TRASH', props, 448),\n};\n","import React, { ReactNode, useEffect, useCallback, useState } from 'react';\nimport { Globals } from './globals';\nimport { Icon } from './components/icons/icon';\n\nconst reloadPage = () => {\n    Globals.window().open(window.location.href, '_self');\n};\n\nlet newSWInstalledCb = () => {};\n\nconst registerServiceWorker = () =>\n    Globals.navigator()\n        .serviceWorker.register('/sw.js')\n        .then((reg: any /* ServiceWorkerRegistration */) => {\n            reg.onupdatefound = () => {\n                // reg.installing -> the installing worker, or undefined\n                // reg.waiting -> the waiting worker, or undefined\n                // reg.active -> the active worker, or undefined\n                const installingWorker = reg.installing;\n                const activeWorker = reg.active;\n                installingWorker.onstatechange = () => {\n                    // \"installing\" - the install event has fired, but not yet complete\n                    // \"installed\"  - install complete\n                    // \"activating\" - the activate event has fired, but not yet complete\n                    // \"activated\"  - fully active\n                    // \"redundant\"  - discarded. Either failed install, or it's been\n                    //                replaced by a newer version\n                    if (installingWorker.state === 'installed' && activeWorker) newSWInstalledCb();\n                };\n            };\n        })\n        .catch(() => Globals.window().console.error('some service worker registration failed'));\n\nconst initServiceWorker = () => {\n    if (process.env.NODE_ENV !== 'development') {\n        'serviceWorker' in navigator && window.addEventListener('load', registerServiceWorker);\n    }\n};\n\nconst doAfter = (ms: number, cb: () => void): Promise<void> =>\n    new Promise((resolve) =>\n        Globals.window().setTimeout(() => {\n            cb();\n            resolve();\n        }, ms)\n    );\n\nexport const ServiceWorkerUpdater = () => {\n    const [content, setContent] = useState<ReactNode | void>();\n\n    const contentDelayed = useCallback(\n        (delay: number, content: ReactNode): Promise<void> => doAfter(delay, () => setContent(content)),\n        []\n    );\n\n    const initRefresh = useCallback(\n        () =>\n            Promise.all([\n                contentDelayed(0, 'Update gefunden'),\n                contentDelayed(1000, 'Update anwenden'),\n                contentDelayed(1300, 'Update anwenden.'),\n                contentDelayed(1600, 'Update anwenden..'),\n                contentDelayed(1900, 'Update anwenden...'),\n                contentDelayed(2200, <Icon.Undo />),\n                doAfter(2500, reloadPage),\n            ]),\n        [] // eslint-disable-line react-hooks/exhaustive-deps\n    );\n\n    useEffect(() => {\n        newSWInstalledCb = initRefresh;\n        initServiceWorker();\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    if (!content) return null;\n\n    return (\n        <div className=\"sw-update\">\n            <div className=\"sw-update-overlay\" />\n            <div className=\"sw-update-content\">{content}</div>\n        </div>\n    );\n};\n","import React, { Fragment, ReactNode, useEffect, useState } from 'react';\nimport { addIntlData } from 'first-intl';\nimport deIntl from './intl-de.json';\nimport enIntl from './intl-en.json';\nimport { Persistore } from 'persistore';\n\ntype SupportedLanguage = 'de' | 'en';\n\nconst _key = 'lang';\n\nconst _persist = (chosen: SupportedLanguage) => Persistore.set(_key, chosen);\nconst _getPersisted = (): SupportedLanguage | undefined => {\n    const saved = Persistore.get(_key);\n    return saved === 'de' || saved === 'en' ? saved : undefined;\n};\n\naddIntlData(deIntl);\n\nconst _detectPreferred = (): SupportedLanguage => {\n    const lang = navigator.language;\n    return lang && lang.startsWith('en') ? 'en' : 'de';\n};\n\nlet currentLang = _getPersisted() || _detectPreferred();\n\nif (currentLang !== 'de') {\n    addIntlData(enIntl);\n}\n\nconst Updater = { setKey: (key: SupportedLanguage) => {} };\n\nexport const toggleIntl = () => {\n    if (currentLang === 'de') {\n        currentLang = 'en';\n        addIntlData(enIntl);\n        Updater.setKey('en');\n        _persist('en');\n    } else {\n        currentLang = 'de';\n        addIntlData(deIntl);\n        Updater.setKey('de');\n        _persist('de');\n    }\n};\n\nexport const IntlRoot: React.FC<{ children: ReactNode }> = ({ children }) => {\n    const [key, setKey] = useState<SupportedLanguage>(currentLang);\n\n    useEffect(() => {\n        Updater.setKey = setKey;\n    }, []);\n\n    return <Fragment key={key}>{children}</Fragment>;\n};\n\nexport const getCurrentIntl = (): SupportedLanguage => currentLang;\n","/**\n * Wording conventions:\n * 1) search string => Part of the url preceded by the pathname.\n *      e.g.: ?uuid=whatever&page=4\n * 2) query string => search string without \"?\"\n *      e.g.: uuid=whatever&page=4\n * 3) query => the associated object of the query string\n *      e.g.: {uuid: 'whatever', page: '4'}\n *\n * ATTENTION: All values will be strings!!!\n */\n\n/**\n * Transforms location search string into query object.\n */\nconst locationSearchToQuery = (search: string = ''): { [key: string]: any } => {\n    const s = search.startsWith('?') ? search.substr(1) : search; // hash history not considered for now\n    const params = s.split('&');\n    const result = {} as { [key: string]: any };\n    for (let i = 0; i < params.length; i++) {\n        const param = params[i];\n        if (param) {\n            const pair = param.split('=');\n            const value = pair[1];\n            if (value !== undefined) result[decodeURIComponent(pair[0])] = decodeURIComponent(value);\n        }\n    }\n    return result;\n};\n\n/**\n * Transforms query object to query string.\n */\nconst queryToString = (query: { [key: string]: any }): string =>\n    Object.keys(query)\n        .map((key) => {\n            const value = query[key];\n            if (value !== undefined && value !== null) {\n                return `${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`;\n            }\n            return undefined;\n        })\n        .filter(Boolean)\n        .join('&');\n\n/**\n * Transforms query object to search string.\n */\nconst queryToSearch = (query: Object): string => {\n    const queryString = queryToString(query);\n    return queryString ? `?${queryString}` : '';\n};\n\nexport const UrlUtil = { queryToString, locationSearchToQuery, queryToSearch };\n","import React, { Fragment } from 'react';\n\nconst allReportedErrors: any[] = [];\nconst oldConsoleError = window.console.error;\nwindow.console.error = (...args: any[]) => {\n    allReportedErrors.push(...args);\n    oldConsoleError(...args);\n};\nwindow.onerror = (e) => {\n    allReportedErrors.push(e);\n};\n\nexport type AdminProps = { close: () => void };\n\nexport const Admin: React.FC<AdminProps> = ({ close }) => (\n    <div className=\"admin\">\n        <div className=\"console-error\">\n            <h1>console.error</h1>\n            {allReportedErrors.map((message, index) => (\n                <p key={index}>{String(message)}</p>\n            ))}\n        </div>\n        <div className=\"localStorage\">\n            <h1>localStorage</h1>\n            {Object.keys(localStorage).map((key) => (\n                <Fragment key={key}>\n                    <h3>{key}</h3>\n                    <p>{JSON.stringify(localStorage.getItem(key))}</p>\n                </Fragment>\n            ))}\n        </div>\n        <button onClick={close}>Close</button>\n    </div>\n);\n","import { Persistore } from 'persistore';\nimport { Util } from '../../util/util';\nimport { AllData, Data, dataOptions, DataOption } from './data';\nimport { Color } from './types';\nimport { createStore } from 'react-use-sub';\nimport { calculateTurn } from './again-logic';\n\nexport enum SplashIconType {\n    CANCEL = 'cancel',\n    UNDO = 'undo',\n    SUBMIT = 'submit',\n    SKIP = 'skip',\n}\n\nexport type TurnState = {\n    skipped: boolean;\n    color?: Color;\n    count?: number;\n    completedColor?: Color;\n    completedRows?: boolean[];\n};\n\nexport type AgainState = {\n    crossed: boolean[][];\n    rowPointsBlocked: boolean[];\n    colorPointsBlocked: boolean[];\n    takenJokers: number;\n    turns: TurnState[];\n};\n\nconst uncrossedRow: boolean[] = Util.array(7).map(() => false);\nexport const uncrossedGrid: boolean[][] = Util.array(15).map(() => uncrossedRow);\nconst unblockedRowPoints: boolean[] = Util.array(15).map(() => false);\nconst unblockedColorPoints: boolean[] = Util.array(5).map(() => false);\nconst initialAgainState: AgainState = {\n    crossed: uncrossedGrid,\n    rowPointsBlocked: unblockedRowPoints,\n    colorPointsBlocked: unblockedColorPoints,\n    takenJokers: 0,\n    turns: [],\n};\n\nexport type Chosen = { color: Color; count: number };\nexport type AgainStartedState = {\n    crossed: boolean[][];\n    turnCrossed: boolean[][];\n    chosen: Chosen | null;\n    completedColor: Color | null;\n};\nconst initialAgainStartedState: AgainStartedState = {\n    crossed: uncrossedGrid,\n    turnCrossed: uncrossedGrid,\n    chosen: null,\n    completedColor: null,\n};\n\ntype State = {\n    againSplash: SplashIconType | null;\n    again: AgainState;\n    againData: Data | null;\n    againStarted: AgainStartedState;\n};\n\nconst [useAgainSub, store] = createStore<State>({\n    againSplash: null,\n    again: initialAgainState,\n    againData: null,\n    againStarted: initialAgainStartedState,\n});\n\nexport { useAgainSub };\n\nconst setSplash = (icon: SplashIconType | null) => store.set({ againSplash: icon });\n\nconst _key = 'again';\nconst _keyChosen = 'again_chosen';\n\nconst getHistory = (): AgainState[] => {\n    try {\n        const states = Persistore.get(_key);\n        return JSON.parse(states as any);\n    } catch (e) {\n        return [];\n    }\n};\n\nconst randomNum = (limit: number) => Math.floor(Math.random() * limit);\nconst randomDataKey = (): DataOption => dataOptions[randomNum(dataOptions.length)];\n\nconst dataOption = (option: DataOption | 'random'): DataOption => (option === 'random' ? randomDataKey() : option);\n\nconst chooseData = (option: DataOption): void => {\n    const selectedOption = dataOption(option);\n    store.set({ againData: AllData[selectedOption] });\n    Persistore.set(_keyChosen, selectedOption);\n};\n\nconst setStarted = (updates: Partial<AgainStartedState>): void =>\n    store.set(({ againStarted }) => ({ againStarted: { ...againStarted, ...updates } }));\n\nconst set = (state: Partial<AgainState>): void => {\n    store.set(({ again }) => ({ again: { ...again, ...state } }));\n    const updatedState = store.get().again;\n\n    // update the crossed of the again started state\n    setStarted({ crossed: updatedState.crossed });\n\n    const history = getHistory();\n    history.unshift(updatedState);\n    if (history.length > 30) history.pop();\n    Persistore.set(_key, JSON.stringify(history));\n};\n\nconst undo = (): void => {\n    if (!store.get().againSplash) {\n        const history = getHistory();\n        if (history.length > 1) {\n            history.shift();\n            Persistore.set(_key, JSON.stringify(history));\n            store.set({ again: history[0], againSplash: SplashIconType.UNDO });\n        } else {\n            Persistore.remove(_key);\n            store.set({ again: initialAgainState, againSplash: history.length > 0 ? SplashIconType.UNDO : null });\n        }\n    }\n};\n\nconst get = (): AgainState => getHistory()[0] || initialAgainState;\nconst getChosenData = (): Data | null => {\n    const option = Persistore.get(_keyChosen);\n    return option ? AllData[(option as any) as DataOption] : null;\n};\n\nconst init = () => {\n    const againState = get();\n    store.set({\n        again: againState,\n        againData: getChosenData(),\n        againStarted: { ...initialAgainStartedState, crossed: againState.crossed },\n    });\n};\n\n// TODO: Make this action revertable by moving the chosen state into the again state\nconst restart = (): void => Persistore.remove(_key) || Persistore.remove(_keyChosen) || init();\n\ninit();\n\nconst onCross = (boxIndex: number, rowIndex: number): void => {\n    const {\n        againStarted: { crossed, turnCrossed, chosen },\n        againData,\n    } = store.get();\n    const currentRow = crossed[rowIndex];\n    if (!currentRow[boxIndex] && againData) {\n        const color = againData.grid[rowIndex][boxIndex];\n        if (chosen) {\n            if (color !== chosen.color) return; // many colors is not allowed\n            const alreadyPicked = chosen.count;\n            if (alreadyPicked > 4) return; // no more than 5 per color and turn\n        }\n        const updatedRow = Util.nextArray(currentRow, boxIndex, true);\n        const updatedTurnRow = Util.nextArray(turnCrossed[rowIndex], boxIndex, true);\n        const count = chosen ? chosen.count + 1 : 1;\n        AgainStore.setStarted({\n            crossed: Util.nextArray(crossed, rowIndex, updatedRow),\n            turnCrossed: Util.nextArray(turnCrossed, rowIndex, updatedTurnRow),\n            chosen: { color, count },\n        });\n    }\n};\n\nconst onFinish = () => {\n    const {\n        againStarted: { crossed, chosen },\n        againSplash,\n        again,\n        againData,\n    } = store.get();\n    if (!againSplash && againData) {\n        const madeTurn = calculateTurn(chosen, again.crossed, crossed, againData);\n\n        AgainStore.set({ crossed, turns: [...again.turns, madeTurn] });\n        AgainStore.setSplash(madeTurn.skipped ? SplashIconType.SKIP : SplashIconType.SUBMIT);\n        AgainStore.setStarted({\n            turnCrossed: uncrossedGrid,\n            chosen: null,\n            completedColor: madeTurn.completedColor,\n        });\n    }\n};\n\nconst onAbort = () => {\n    const { againSplash, again } = store.get();\n    if (!againSplash) {\n        AgainStore.setSplash(SplashIconType.CANCEL);\n        AgainStore.setStarted({\n            turnCrossed: uncrossedGrid,\n            chosen: null,\n            crossed: again.crossed,\n            completedColor: null,\n        });\n    }\n};\n\nconst onClosePopup = () => AgainStore.setStarted({ completedColor: null });\n\nexport const AgainStore = {\n    set,\n    undo,\n    restart,\n    chooseData,\n    setSplash,\n    setStarted,\n    onCross,\n    onFinish,\n    onAbort,\n    onClosePopup,\n};\n","import React, { useCallback, useState } from 'react';\nimport { Admin } from './Admin';\n\nconst _AdminEntry = {\n    lastClicked: 0,\n    successCount: 0,\n    margin: 100,\n    timing: [474, 405, 135, 464, 919, 446], // TODO(VL): Rework this entry strategy. Does not work reliably on all devices\n};\n\n// TODO(VL): Should be possible everywhere to open the admin panel. Not only on first page\nexport const AdminEntry: React.FC = () => {\n    const [active, setActive] = useState(false);\n    const onClick = useCallback(() => {\n        const now = Date.now();\n        const diff = now - _AdminEntry.lastClicked;\n        if (diff > 2000) {\n            // console.log('First');\n            _AdminEntry.successCount = 0;\n        } else {\n            const timing = _AdminEntry.timing[_AdminEntry.successCount];\n            if (diff - _AdminEntry.margin < timing && timing < diff + _AdminEntry.margin) {\n                // console.log('Success');\n                if (_AdminEntry.successCount === 5) {\n                    _AdminEntry.successCount = 0;\n                    setActive(true);\n                } else {\n                    _AdminEntry.successCount++;\n                }\n            } else {\n                // console.log('Failed');\n                _AdminEntry.successCount = 0;\n            }\n        }\n        _AdminEntry.lastClicked = now;\n    }, []);\n\n    const close = useCallback(() => setActive(false), []);\n\n    return active ? <Admin close={close} /> : <div className=\"admin-entry\" onClick={onClick} />;\n};\n","import React from 'react';\nimport { __ } from 'first-intl';\nimport { getCurrentIntl, toggleIntl } from './intl';\nimport { AppNavigation, NavLoc } from './AppNavigation';\nimport { AdminEntry } from './admin/AdminEntry';\n\nexport const App: React.FC = () => (\n    <div className=\"App\">\n        <header className=\"App-header\">\n            <img src=\"/logo.svg\" className=\"App-logo\" alt=\"logo\" />\n            <img\n                src={getCurrentIntl() === 'de' ? '/flag.germany.svg' : '/flag.usa.svg'}\n                className=\"App-logo\"\n                alt=\"toggle language\"\n                onClick={toggleIntl}\n            />\n        </header>\n        <div className=\"App-content\">\n            <div className=\"preview\">\n                <AppNavigation.Link loc={NavLoc.AGAIN}>\n                    <img src=\"/preview-again.jpg\" alt=\"preview again\" loading=\"lazy\" />\n                    <h2>{__('AGAIN')}</h2>\n                </AppNavigation.Link>\n            </div>\n            <div className=\"preview\">\n                <AppNavigation.Link loc={NavLoc.SIT}>\n                    <img src=\"/preview-sit.jpg\" alt=\"preview sit\" loading=\"lazy\" />\n                    <h2>{__('SIT')}</h2>\n                </AppNavigation.Link>\n            </div>\n            <div className=\"preview\">\n                <AppNavigation.Link loc={NavLoc.VERY_CLEVER}>\n                    <img src=\"/preview-veryClever.jpg\" alt=\"preview veryClever\" loading=\"lazy\" />\n                    <h2>{__('VC')}</h2>\n                </AppNavigation.Link>\n            </div>\n            <div className=\"preview\">\n                <AppNavigation.Link loc={NavLoc.DECRYPTO}>\n                    <img src=\"/preview-decrypto.jpg\" alt=\"preview decrypto\" loading=\"lazy\" />\n                    <h2>{__('DECRYPTO')}</h2>\n                </AppNavigation.Link>\n            </div>\n        </div>\n        <AdminEntry />\n    </div>\n);\n","import { Color } from './types';\nimport { SelectOption } from '../../components/form/select';\nimport { StringMessage } from 'first-intl';\n\ntype RawData = { label: StringMessage; grid: string[]; stars: string; backgroundColor: string };\nexport type Data = { label: StringMessage; grid: Color[][]; stars: number[]; backgroundColor: string };\n\nconst parseRawGridData = (rowColors: string[]): Color[][] => rowColors.map((row: any) => row.split(''));\nconst parseRawStarPositions = (starPositions: string): number[] => starPositions.split('').map(Number);\nconst parseRawData = ({ label, grid, stars, backgroundColor }: RawData): Data => ({\n    label,\n    grid: parseRawGridData(grid),\n    stars: parseRawStarPositions(stars),\n    backgroundColor,\n});\n\nconst AllRawData = {\n    black: {\n        label: 'AGAIN.color.black',\n        backgroundColor: '#222222',\n        stars: '251513205150635',\n        grid: [\n            'GOBBRRY',\n            'GGGROBY',\n            'GYRROBB',\n            'YGGGORB',\n            'YYGOORB',\n            'YYGORRB',\n            'YOGBBRR',\n            'GORBBYY',\n            'BRRGOYY',\n            'BBRGOOY',\n            'BBYYORG',\n            'OOYYRBG',\n            'YOOORBG',\n            'YGGRRBO',\n            'YGGBROO',\n        ],\n    },\n    blue: {\n        label: 'AGAIN.color.blue',\n        backgroundColor: '#64a8ff',\n        stars: '125161046141324',\n        grid: [\n            'ROBBGGY',\n            'RROBBGY',\n            'GROOBYY',\n            'GBBORYY',\n            'YBGORRR',\n            'YGGGRBO',\n            'YYGRBBO',\n            'GGRRBYO',\n            'GGOOBYR',\n            'RRGOBYY',\n            'RGGOOBY',\n            'RYGOBBB',\n            'RRGBYOO',\n            'OOGBYYR',\n            'OOYYGBR',\n        ],\n    },\n    green: {\n        label: 'AGAIN.color.green',\n        backgroundColor: '#22b244',\n        stars: '044266214405344',\n        grid: [\n            'OGBBBRY',\n            'GGBORRY',\n            'BGOOORY',\n            'BGGORRY',\n            'RRYOBBG',\n            'RYYGOBB',\n            'RGGGOBY',\n            'GRBBOYY',\n            'GGRBBYO',\n            'GGRBYYO',\n            'YRRBOOG',\n            'YYROOBG',\n            'YYORRGB',\n            'RROOYGB',\n            'RYYOOGB',\n        ],\n    },\n    orange: {\n        label: 'AGAIN.color.orange',\n        backgroundColor: '#d03b09',\n        stars: '030414031051652',\n        grid: [\n            'OBYYRGG',\n            'OOBYYGR',\n            'YOBBGGR',\n            'OOGYBRR',\n            'RGGYBBO',\n            'RRRYGBO',\n            'RGGYYBO',\n            'GGYBOOR',\n            'OYYBBGR',\n            'RRYYBGO',\n            'GRRYBOO',\n            'GGRRBYO',\n            'GBBOOYR',\n            'GYYOBBR',\n            'GYOOBBR',\n        ],\n    },\n    pink: {\n        label: 'AGAIN.color.pink',\n        backgroundColor: '#9c2271',\n        stars: '206201230315514',\n        grid: [\n            'GRBBBOY',\n            'GOBBRYY',\n            'OOBRRGY',\n            'OYRRBGG',\n            'OGGRBBY',\n            'RGGGBOY',\n            'RBBGOOY',\n            'RYYOBGG',\n            'YYROBBG',\n            'BYRROOG',\n            'BGRYYOO',\n            'BOOGYYR',\n            'BOGGYRR',\n            'BOOGYRR',\n            'RROGBYY',\n        ],\n    },\n    violet: {\n        label: 'AGAIN.color.violet',\n        backgroundColor: '#701fa7',\n        stars: '530420214213612',\n        grid: [\n            'YOOOGBR',\n            'YBOGGGR',\n            'OBBYGRR',\n            'OBBYRGG',\n            'ORYYYGB',\n            'GRRYOOB',\n            'BROOGGY',\n            'BROGGYY',\n            'BROOYGG',\n            'YYBBORG',\n            'YYBBORG',\n            'RBBOOYG',\n            'RRRBOYG',\n            'GRBBOYY',\n            'GOBRRRY',\n        ],\n    },\n    yellow: {\n        label: 'AGAIN.color.yellow',\n        backgroundColor: '#d09012',\n        stars: '625062536324220',\n        grid: [\n            'RRBOYYG',\n            'GGROBYY',\n            'GRROBBY',\n            'YRBOOGG',\n            'YRBBOGG',\n            'YYGBROO',\n            'YYGBROO',\n            'OOGBRYY',\n            'RRGGBYO',\n            'RRGYBOO',\n            'GGRYBBO',\n            'GGBBRYO',\n            'GBORRYY',\n            'BBBROYG',\n            'YBRROOG',\n        ],\n    },\n};\n\nexport type DataOption = keyof typeof AllRawData;\nexport const AllData: { [key in DataOption]: Data } = {\n    black: parseRawData(AllRawData.black),\n    blue: parseRawData(AllRawData.blue),\n    green: parseRawData(AllRawData.green),\n    orange: parseRawData(AllRawData.orange),\n    pink: parseRawData(AllRawData.pink),\n    violet: parseRawData(AllRawData.violet),\n    yellow: parseRawData(AllRawData.yellow),\n};\nexport const dataOptions: DataOption[] = Object.keys(AllData) as any;\n\nexport const DataSelectionOptions: Array<SelectOption<DataOption>> = dataOptions.map(\n    (key: DataOption): SelectOption<DataOption> => ({\n        label: AllData[key].label,\n        value: key,\n    })\n);\n","export const COLOR = {\n    O: '#d65c0c',\n    B: '#0f63ff',\n    G: '#03860b',\n    R: '#cd0b1b',\n    Y: '#ffdf10',\n};\n\nexport type Color = keyof typeof COLOR;\n","import React from 'react';\nimport { Color, COLOR } from './types';\nimport { Util } from '../../util/util';\n\ntype BoxProps = {\n    content?: string | number;\n    color?: Color;\n    customColor?: string;\n    borderColor?: string;\n    star?: boolean;\n    circled?: boolean;\n    crossed?: boolean;\n    onClick?: () => void;\n    flicker?: boolean;\n};\nexport const Box: React.FC<BoxProps> = ({\n    content,\n    color,\n    customColor,\n    circled,\n    crossed,\n    onClick,\n    star,\n    borderColor,\n    flicker,\n}) => (\n    <div>\n        <div className={Util.classNames('box box-bordered', flicker && 'box-flicker')} onClick={onClick}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\">\n                <rect\n                    x=\"0\"\n                    y=\"0\"\n                    width=\"50\"\n                    height=\"50\"\n                    rx=\"10\"\n                    ry=\"10\"\n                    fill={(color && COLOR[color]) || customColor || 'white'}\n                />\n                {borderColor && (\n                    <rect\n                        x=\"1\"\n                        y=\"1\"\n                        width=\"48\"\n                        height=\"48\"\n                        rx=\"10\"\n                        ry=\"10\"\n                        fill=\"none\"\n                        stroke={borderColor}\n                        strokeWidth=\"3\"\n                    />\n                )}\n                {star && <polygon points=\"25 5 32 20 45 20 35 28 42 45 25 35 8 45 15 28 2 20 18 20\" fill=\"white\" />}\n                {content !== undefined && (\n                    <text textAnchor=\"middle\" x=\"25\" y=\"35\" fontSize=\"30\">\n                        {content}\n                    </text>\n                )}\n                {circled && <circle cx=\"25\" cy=\"25\" r=\"23\" fill=\"none\" stroke=\"black\" strokeWidth=\"2\" />}\n                {crossed && (\n                    <g stroke=\"black\" strokeWidth=\"4\">\n                        <line x1=\"5\" y1=\"5\" x2=\"45\" y2=\"45\" />\n                        <line x1=\"5\" y1=\"45\" x2=\"45\" y2=\"5\" />\n                    </g>\n                )}\n            </svg>\n        </div>\n    </div>\n);\n","import React from 'react';\nimport { AgainStore } from './again-store';\nimport { Box } from './Box';\nimport { Util } from '../../util/util';\n\nconst blockColorPoints = (index: number, colorPointsBlocked: boolean[]) => () => {\n    AgainStore.set({ colorPointsBlocked: Util.nextArray(colorPointsBlocked, index, true) });\n};\n\nexport const ColorList = 'OBGRY'.split('');\n\ntype ColorPointsProps = { colorPointsBlocked: boolean[]; completedColors: boolean[] };\nexport const ColorPoints: React.FC<ColorPointsProps> = ({ colorPointsBlocked, completedColors }) => (\n    <div className={Util.classNames('again-color-points')}>\n        <div className=\"again-color-points-1\">\n            {ColorList.map((color: any, index) => (\n                <Box\n                    key={index}\n                    content={5}\n                    color={color}\n                    crossed={colorPointsBlocked[index]}\n                    onClick={blockColorPoints(index, colorPointsBlocked)}\n                    circled={!colorPointsBlocked[index] && completedColors[index]}\n                />\n            ))}\n        </div>\n        <div className=\"again-color-points-2\">\n            {ColorList.map((color: any, index) => (\n                <Box\n                    key={index}\n                    content={3}\n                    color={color}\n                    circled={colorPointsBlocked[index] && completedColors[index]}\n                />\n            ))}\n        </div>\n    </div>\n);\n","import { Data } from './data';\nimport { AgainState, Chosen, TurnState } from './again-store';\nimport { ColorList } from './ColorPoints';\n\nconst rowPoints1 = '533322212223335'.split('').map(Number);\nconst rowPoints2 = '322211101112223'.split('').map(Number);\n\nexport const getCompletedRows = (crossed: boolean[][]): boolean[] =>\n    crossed.map((row) => row.every((checked) => checked));\nexport const getCompletedColors = (crossed: boolean[][], gridData: Data): boolean[] =>\n    'OBGRY'\n        .split('')\n        .map((color) =>\n            crossed.every((row, index) =>\n                row.every((checked, boxIndex) => gridData.grid[index][boxIndex] !== color || checked)\n            )\n        );\n\nconst getTotalPoints = (\n    again: AgainState,\n    gridData: Data,\n    completedRows: boolean[],\n    completedColors: boolean[]\n): number => {\n    const { rowPointsBlocked, colorPointsBlocked, crossed, takenJokers } = again;\n    const rowPoints = completedRows\n        .map((completed, index) => (!completed ? 0 : rowPointsBlocked[index] ? rowPoints2[index] : rowPoints1[index]))\n        .reduce((r, v) => r + v, 0);\n    const colorPoints = completedColors\n        .map((completed, index) => (!completed ? 0 : colorPointsBlocked[index] ? 3 : 5))\n        .reduce((r, v) => r + v, 0 as number);\n    const jokerPoints = 8 - takenJokers;\n    const starPoints = crossed\n        .map((row, index) => (row[gridData.stars[index]] ? 0 : -2))\n        .reduce((r, v) => r + v, 0 as number);\n\n    return rowPoints + colorPoints + jokerPoints + starPoints;\n};\n\nexport const getClickable = (crossed: boolean[][], allowMiddle: boolean = true): boolean[][] =>\n    crossed.map((row, rowIndex) =>\n        row.map(\n            (checked, boxIndex) =>\n                !checked &&\n                ((allowMiddle && rowIndex === 7) || // is allowed middle row\n                (crossed[rowIndex - 1] || {})[boxIndex] || // left box is checked\n                (crossed[rowIndex + 1] || {})[boxIndex] || // right box is checked\n                row[boxIndex - 1] || // upper box is checked\n                    row[boxIndex + 1]) // below box is checked\n        )\n    );\n\ntype Calculation = { completedRows: boolean[]; completedColors: boolean[]; totalPoints: number };\n\nexport const calculate = (again: AgainState, gridData: Data): Calculation => {\n    const completedRows = getCompletedRows(again.crossed);\n    const completedColors = getCompletedColors(again.crossed, gridData);\n    const totalPoints = getTotalPoints(again, gridData, completedRows, completedColors);\n    return { completedRows, completedColors, totalPoints };\n};\n\nexport const calculateTurn = (\n    chosen: Chosen | null,\n    lastCrossed: boolean[][],\n    crossed: boolean[][],\n    gridData: Data\n): TurnState => {\n    if (chosen) {\n        const completedRows = getCompletedRows(lastCrossed);\n        const nextCompletedRows = getCompletedRows(crossed);\n        const newCompletedRows = nextCompletedRows.map((row, index) => row && !completedRows[index]);\n\n        const nextCompletedColors = getCompletedColors(crossed, gridData);\n        const completedColors = getCompletedColors(lastCrossed, gridData);\n\n        const newCompletedColor = nextCompletedColors\n            .map((row, index) => row && !completedColors[index])\n            .findIndex(Boolean);\n        return {\n            ...chosen,\n            skipped: false,\n            completedRows: newCompletedRows,\n            completedColor: ColorList[newCompletedColor] as any,\n        };\n    }\n    return { skipped: true };\n};\n","import React, { ReactNode, useCallback } from 'react';\nimport { AgainStore } from './again-store';\nimport { Util } from '../../util/util';\n\nconst BoxWrapper: React.FC<{ children: ReactNode; onClick?: () => void }> = ({ children, onClick }) => (\n    <div>\n        <div className=\"box\" onClick={onClick}>\n            {children}\n        </div>\n    </div>\n);\n\nconst NumberJoker: React.FC = () => (\n    <BoxWrapper>\n        <svg viewBox=\"0 0 50 50\">\n            <rect x=\"0\" y=\"0\" width=\"50\" height=\"50\" rx=\"10\" ry=\"10\" fill=\"black\" />\n            <text textAnchor=\"middle\" x=\"25\" y=\"38\" fontSize=\"40\" fontWeight=\"900\" fill=\"white\">\n                ?\n            </text>\n        </svg>\n    </BoxWrapper>\n);\n\nconst ColorJoker: React.FC = () => (\n    <BoxWrapper>\n        <svg viewBox=\"0 0 50 50\">\n            <rect x=\"0\" y=\"0\" width=\"50\" height=\"50\" rx=\"10\" ry=\"10\" fill=\"black\" />\n            <g stroke=\"white\" strokeWidth=\"10\">\n                <line x1=\"10\" y1=\"10\" x2=\"40\" y2=\"40\" />\n                <line x1=\"10\" y1=\"40\" x2=\"40\" y2=\"10\" />\n            </g>\n        </svg>\n    </BoxWrapper>\n);\n\nconst JokerSeparator: React.FC = () => (\n    <BoxWrapper>\n        <svg viewBox=\"0 0 50 50\">\n            <line x1=\"15\" y1=\"45\" x2=\"35\" y2=\"5\" stroke=\"black\" strokeWidth=\"10\" />\n        </svg>\n    </BoxWrapper>\n);\n\nconst EqualSign: React.FC = () => (\n    <BoxWrapper>\n        <svg viewBox=\"0 0 50 50\">\n            <line x1=\"10\" y1=\"20\" x2=\"40\" y2=\"20\" stroke=\"black\" strokeWidth=\"7\" />\n            <line x1=\"10\" y1=\"30\" x2=\"40\" y2=\"30\" stroke=\"black\" strokeWidth=\"7\" />\n        </svg>\n    </BoxWrapper>\n);\n\nconst JokerPlaceholder: React.FC<{ taken: boolean; onClick?: () => void }> = ({ taken, onClick }) => (\n    <BoxWrapper onClick={onClick}>\n        <svg viewBox=\"0 0 50 50\">\n            <circle cx=\"25\" cy=\"25\" r=\"23\" fill=\"none\" stroke=\"black\" strokeWidth=\"2\" />\n            <text textAnchor=\"middle\" x=\"25\" y=\"38\" fontSize=\"40\" fontWeight=\"900\">\n                !\n            </text>\n            {taken && (\n                <g stroke=\"black\" strokeWidth=\"4\">\n                    <line x1=\"7\" y1=\"7\" x2=\"43\" y2=\"43\" />\n                    <line x1=\"7\" y1=\"43\" x2=\"43\" y2=\"7\" />\n                </g>\n            )}\n        </svg>\n    </BoxWrapper>\n);\n\ntype JokersProps = { takenJokers: number };\nexport const Jokers: React.FC<JokersProps> = ({ takenJokers }) => {\n    const takeJoker = useCallback(() => AgainStore.set({ takenJokers: takenJokers + 1 }), [takenJokers]);\n    return (\n        <div className=\"again-jokers\">\n            <NumberJoker />\n            <JokerSeparator />\n            <ColorJoker />\n            <EqualSign />\n            {Util.array(8).map((_, index) => (\n                <JokerPlaceholder\n                    onClick={index === takenJokers ? takeJoker : undefined}\n                    key={index}\n                    taken={index < takenJokers}\n                />\n            ))}\n        </div>\n    );\n};\n","import { Globals } from '../globals';\n\n/**\n * The wrapped function will be called debounced with a certain specified delay.\n */\nconst debounced = <T extends (...arg: any[]) => void>(func: T, delay: number): T => {\n    let lastPending = 0;\n    return ((...args: any[]) => {\n        Globals.window().clearTimeout(lastPending);\n        lastPending = Globals.window().setTimeout(() => func(...args), delay);\n    }) as any;\n};\n\n/*\n * Hof is a shortcut for (Higher Order Function).\n */\nexport const HofUtil = { debounced };\n","import { useRef, useCallback } from 'react';\nimport { Globals } from '../globals';\nimport { useEventListener } from './useEventListener';\nimport { HofUtil } from '../util/hof-util';\n\ntype ResizeCallback = (width: number) => void;\n\nexport const useWindowResizeEffect = (cb: ResizeCallback) => {\n    const callbackRef = useRef<ResizeCallback>(cb);\n    callbackRef.current = cb;\n\n    const callback = useCallback(\n        HofUtil.debounced(() => {\n            callbackRef.current(Globals.window().innerWidth);\n        }, 10),\n        []\n    );\n\n    useEventListener('resize', callback);\n};\n","import { useCallback, useEffect, useRef } from 'react';\nimport { Globals } from '../globals';\n\nexport const useEventListener = <K extends keyof WindowEventMap>(\n    type: K,\n    listener: (ev: WindowEventMap[K]) => any,\n    // The event propagation through the DOM happens in two phases, the capture and the bubble phase.\n    // During the capture phase the event propagates from the window down to the clicked element.\n    // After that the event \"bubbles\" up again to the window. See https://javascript.info/bubbling-and-capturing for more details.\n    // As a default the bubble phase is used to trigger the event listener.\n    // If you want to use the capture phase set the following flag.\n    capture?: boolean\n) => {\n    const ref = useRef<typeof listener>(listener);\n    ref.current = listener;\n\n    const wrapped = useCallback<typeof listener>((e) => {\n        ref.current(e);\n    }, []);\n\n    useEffect(() => {\n        Globals.window().addEventListener(type, wrapped, capture);\n        return () => Globals.window().removeEventListener(type, wrapped, capture);\n    }, [type, capture]); // eslint-disable-line react-hooks/exhaustive-deps\n};\n","import { useWindowResizeEffect } from '../../hooks/useWindowResizeEffect';\nimport { useEffect } from 'react';\n\nconst OPTIMAL_HEIGHT_WIDTH_RATIO = 0.48;\nexport const RESIZE_CLASS = 'again-resize';\n\nconst calculateNecessaryPadding = (): number => {\n    const ratioDiscrepancy = OPTIMAL_HEIGHT_WIDTH_RATIO - (window.innerHeight - 48) / window.innerWidth;\n    return ratioDiscrepancy > 0 ? ratioDiscrepancy * window.innerWidth : 0;\n};\n\nconst applyPadding = () => {\n    const padding = calculateNecessaryPadding();\n    const paddingValue = padding ? `0 ${padding}px` : '';\n    Array.from(document.getElementsByClassName(RESIZE_CLASS)).forEach((elem) => {\n        (elem as HTMLElement).style.setProperty('padding', paddingValue);\n    });\n};\n\nexport const useAgainResize = () => {\n    useEffect(applyPadding, []);\n    useWindowResizeEffect(applyPadding);\n};\n","import React, { useCallback } from 'react';\nimport { Color } from './types';\nimport { Box } from './Box';\nimport { Data } from './data';\nimport { Util } from '../../util/util';\nimport { TurnState } from './again-store';\nimport { RESIZE_CLASS } from './again-resize';\n\ntype GridProps = {\n    gridData: Data;\n    crossed: boolean[][];\n    clickable: boolean[][];\n    onCross: (boxIndex: number, rowIndex: number) => void;\n    lastTurn?: TurnState;\n};\n\nexport const Grid: React.FC<GridProps> = ({ gridData, crossed, clickable, lastTurn, onCross }) => {\n    const onClickHandler = useCallback((boxIndex: number, rowIndex: number) => () => onCross(boxIndex, rowIndex), [\n        onCross,\n    ]);\n    return (\n        <div className={Util.classNames('again-grid', RESIZE_CLASS)}>\n            {gridData.grid.map((row: Color[], rowIndex: number) => (\n                <div\n                    className={Util.classNames(\n                        'again-row',\n                        lastTurn && lastTurn.completedRows && lastTurn.completedRows[rowIndex] && 'row-alert'\n                    )}\n                    key={rowIndex}>\n                    {row.map((color, boxIndex) => {\n                        const starPosition = gridData.stars[rowIndex];\n                        const crossedRow = crossed[rowIndex];\n                        const isMiddleRow = rowIndex === 7;\n                        const isClickable = clickable[rowIndex][boxIndex];\n\n                        return (\n                            <Box\n                                onClick={isClickable ? onClickHandler(boxIndex, rowIndex) : undefined}\n                                key={boxIndex}\n                                color={color}\n                                star={starPosition === boxIndex}\n                                crossed={crossedRow[boxIndex]}\n                                borderColor={isMiddleRow ? 'white' : 'black'}\n                            />\n                        );\n                    })}\n                </div>\n            ))}\n        </div>\n    );\n};\n","import React from 'react';\nimport { Box } from './Box';\nimport { Util } from '../../util/util';\nimport { RESIZE_CLASS } from './again-resize';\n\nexport const allLetters = 'ABCDEFGHIJKLMNO'.split('');\n\nexport const Letters: React.FC = () => (\n    <div className={Util.classNames('again-letters', RESIZE_CLASS)}>\n        {allLetters.map((letter, index) => (\n            <Box key={index} content={letter} />\n        ))}\n    </div>\n);\n","import React from 'react';\nimport { AgainStore, TurnState } from './again-store';\nimport { Box } from './Box';\nimport { Util } from '../../util/util';\nimport { RESIZE_CLASS } from './again-resize';\n\nconst rowPoints1 = '533322212223335'.split('').map(Number);\nconst rowPoints2 = '322211101112223'.split('').map(Number);\n\nconst blockRowPoints = (index: number, rowPointsBlocked: boolean[]) => () => {\n    AgainStore.set({ rowPointsBlocked: Util.nextArray(rowPointsBlocked, index, true) });\n};\n\nconst rowWasCompleted = (index: number, lastTurn?: TurnState): boolean =>\n    Boolean(lastTurn && lastTurn.completedRows && lastTurn.completedRows[index]);\n\nconst COMPLETED = '#5eee61';\n\ntype RowPointsProps = { rowPointsBlocked: boolean[]; completedRows: boolean[]; lastTurn?: TurnState };\nexport const RowPoints: React.FC<RowPointsProps> = ({ rowPointsBlocked, completedRows, lastTurn }) => (\n    <div className={Util.classNames('again-row-points', RESIZE_CLASS)}>\n        <div className=\"again-row-points-1\">\n            {rowPoints1.map((num, index) => (\n                <Box\n                    key={index}\n                    content={num}\n                    crossed={rowPointsBlocked[index]}\n                    onClick={rowPointsBlocked[index] ? undefined : blockRowPoints(index, rowPointsBlocked)}\n                    circled={!rowPointsBlocked[index] && completedRows[index]}\n                    customColor={!rowPointsBlocked[index] && rowWasCompleted(index, lastTurn) ? COMPLETED : undefined}\n                />\n            ))}\n        </div>\n        <div className=\"again-row-points-2\">\n            {rowPoints2.map((num, index) => (\n                <Box\n                    key={index}\n                    content={num}\n                    circled={rowPointsBlocked[index] && completedRows[index]}\n                    customColor={rowPointsBlocked[index] && rowWasCompleted(index, lastTurn) ? COMPLETED : undefined}\n                />\n            ))}\n        </div>\n    </div>\n);\n","import React from 'react';\nimport { COLOR } from './types';\nimport { TurnState } from './again-store';\n\nconst VALUE_SVG = [\n    <text x=\"110\" y=\"420\" fontSize=\"500\" key=\"0\">\n        ?\n    </text>,\n    <circle cx=\"250\" cy=\"250\" r=\"50\" fill=\"black\" key=\"1\" />,\n    <g fill=\"black\" key=\"2\">\n        <circle cx=\"125\" cy=\"375\" r=\"50\" />\n        <circle cx=\"375\" cy=\"125\" r=\"50\" />\n    </g>,\n    <g fill=\"black\" key=\"3\">\n        <circle cx=\"125\" cy=\"375\" r=\"50\" />\n        <circle cx=\"250\" cy=\"250\" r=\"50\" />\n        <circle cx=\"375\" cy=\"125\" r=\"50\" />\n    </g>,\n    <g fill=\"black\" key=\"4\">\n        <circle cx=\"125\" cy=\"375\" r=\"50\" />\n        <circle cx=\"125\" cy=\"125\" r=\"50\" />\n        <circle cx=\"375\" cy=\"375\" r=\"50\" />\n        <circle cx=\"375\" cy=\"125\" r=\"50\" />\n    </g>,\n    <g fill=\"black\" key=\"5\">\n        <circle cx=\"125\" cy=\"375\" r=\"50\" />\n        <circle cx=\"125\" cy=\"125\" r=\"50\" />\n        <circle cx=\"250\" cy=\"250\" r=\"50\" />\n        <circle cx=\"375\" cy=\"375\" r=\"50\" />\n        <circle cx=\"375\" cy=\"125\" r=\"50\" />\n    </g>,\n];\n\nexport const Cube: React.FC<Partial<TurnState>> = ({ count, color }) => {\n    const innerValue = count !== undefined ? VALUE_SVG[count] : undefined;\n\n    return (\n        <div className=\"cube\">\n            <svg className=\"icon\" viewBox=\"0 0 500 500\">\n                <rect x=\"0\" y=\"0\" width=\"500\" height=\"500\" rx=\"100\" ry=\"100\" fill=\"white\" />\n                {innerValue || (\n                    <g stroke={(color && COLOR[color]) || 'black'} strokeWidth=\"100\">\n                        <line x1=\"80\" y1=\"80\" x2=\"420\" y2=\"420\" />\n                        <line x1=\"80\" y1=\"420\" x2=\"420\" y2=\"80\" />\n                    </g>\n                )}\n            </svg>\n        </div>\n    );\n};\n","import React, { ReactNode, ReactNodeArray, useCallback, useEffect, useState } from 'react';\nimport { Icon } from '../components/icons/icon';\nimport { __, Message } from 'first-intl';\nimport { ClientHistory } from '../globals';\nimport { Util } from '../util/util';\n\nexport type FooterButtonProps = {\n    onClick?: () => void;\n    description?: Message;\n    children: ReactNode;\n    className?: string;\n};\n\nexport const FooterButton: React.FC<FooterButtonProps> = ({ onClick, description, children, className }) => (\n    <div className={Util.classNames('footer-action', className, !onClick && 'no-handler')} onClick={onClick}>\n        {children}\n        {description && <div className=\"small\">{__(description)}</div>}\n    </div>\n);\n\nconst FooterHome: React.FC = () => (\n    <FooterButton onClick={ClientHistory.back} description=\"APP.home\">\n        <Icon.Home />\n    </FooterButton>\n);\n\nconst applyFooterHeight = (open: boolean) =>\n    document.getElementById('root')!.style.setProperty('--footer-height', open ? '3rem' : '0px');\n\ntype FooterProps = {\n    expandable?: boolean;\n    hideHome?: boolean;\n    className?: string;\n    children?: ReactNodeArray | ReactNode;\n};\n\nexport const Footer: React.FC<FooterProps> = ({ children, expandable, hideHome, className }) => {\n    const [open, setOpen] = useState(true);\n    const toggle = useCallback(() => setOpen((o) => !o), []);\n\n    useEffect(() => {\n        if (!expandable) setOpen(true);\n    }, [expandable]);\n\n    useEffect(() => {\n        applyFooterHeight(open);\n    }, [open]);\n\n    useEffect(() => () => applyFooterHeight(false), []);\n\n    if (!open)\n        return (\n            <footer className={className}>\n                <div className=\"footer-handle closed\" onClick={toggle}>\n                    <Icon.ChevronUp />\n                </div>\n            </footer>\n        );\n\n    return (\n        <footer className={className}>\n            {expandable && (\n                <div className=\"footer-handle\" onClick={toggle}>\n                    <Icon.ChevronDown />\n                </div>\n            )}\n            <div className=\"footer-border\" />\n            <nav>\n                <div className=\"footer-actions\">\n                    {hideHome || <FooterHome />}\n                    {children}\n                </div>\n            </nav>\n        </footer>\n    );\n};\n","import React from 'react';\nimport { Cube } from './Cube';\nimport { Icon } from '../../components/icons/icon';\nimport { Box } from './Box';\nimport { allLetters } from './Letters';\nimport { TurnState, Chosen, AgainStore } from './again-store';\nimport { __ } from 'first-intl';\nimport { Footer, FooterButton } from '../../footer/Footer';\n\nexport const Abort = () => (\n    <svg className=\"icon\" viewBox=\"0 0 500 500\">\n        <g stroke=\"red\" strokeWidth=\"100\">\n            <line x1=\"80\" y1=\"80\" x2=\"420\" y2=\"420\" />\n            <line x1=\"80\" y1=\"420\" x2=\"420\" y2=\"80\" />\n        </g>\n    </svg>\n);\n\nexport const Finish = () => (\n    <svg className=\"icon\" viewBox=\"0 0 500 500\">\n        <g stroke=\"darkgreen\" strokeWidth=\"100\">\n            <line x1=\"70\" y1=\"180\" x2=\"262\" y2=\"347\" />\n            <line x1=\"220\" y1=\"320\" x2=\"420\" y2=\"80\" />\n        </g>\n    </svg>\n);\n\nexport const Turn = ({ count = 0, color, skipped }: Partial<TurnState>) =>\n    skipped ? (\n        <div>\n            <Icon.Ban className=\"cube\" />\n        </div>\n    ) : (\n        <div>\n            <Cube count={count} />\n            <Cube color={color} />\n        </div>\n    );\n\ntype FooterTurnControlProps = { chosen: Chosen };\nexport const FooterTurnControl: React.FC<FooterTurnControlProps> = ({ chosen }) => (\n    <Footer hideHome className=\"turn-control\">\n        <FooterButton onClick={AgainStore.onAbort}>\n            <Abort />\n        </FooterButton>\n        <FooterButton className=\"turn\">\n            <Turn count={chosen.count} color={chosen.color} />\n        </FooterButton>\n        <FooterButton onClick={AgainStore.onFinish}>\n            <Finish />\n        </FooterButton>\n    </Footer>\n);\n\nconst Success: React.FC<{ turn: TurnState }> = ({ turn }) => {\n    const { completedColor, completedRows } = turn;\n    const completed = [];\n    if (completedColor) completed.push(<Cube color={completedColor} key=\"color\" />);\n    if (completedRows)\n        completedRows.forEach((isCompleted, index) => {\n            if (isCompleted) completed.push(<Box content={allLetters[index]} key={index} />);\n        });\n    return completed.length > 0 ? (\n        <>\n            <Icon.ArrowRight className=\"success-arrow\" />\n            {completed}\n        </>\n    ) : null;\n};\n\ntype TurnsProps = { turns: TurnState[] };\nexport const Turns = ({ turns }: TurnsProps) => (\n    <div className=\"again-turns\">\n        <h4>{__('AGAIN.madeTurns')}</h4>\n        {turns.map((turn, index) => (\n            <div className=\"again-turn\" key={index}>\n                {`${index + 1}) `}\n                <div className=\"turn-chosen\">\n                    <Turn count={turn.count} color={turn.color} skipped={turn.skipped} key={index} />\n                </div>\n                <div className=\"turn-success\">\n                    <Success turn={turn} />\n                </div>\n            </div>\n        ))}\n    </div>\n);\n","import React from 'react';\nimport { Turn } from './Turn';\nimport { TurnState } from './again-store';\nimport { __ } from 'first-intl';\n\ntype TotalProps = { totalPoints: number; lastTurn?: TurnState };\nexport const Total: React.FC<TotalProps> = ({ totalPoints, lastTurn }) => (\n    <div className=\"again-total\">\n        {__('AGAIN.points')}\n        <div className=\"again-total-points\">{totalPoints}</div>\n        {lastTurn && (\n            <div className=\"again-last-turn\">\n                {__('AGAIN.lastTurn')}\n                <Turn {...lastTurn} />\n            </div>\n        )}\n    </div>\n);\n","import React from 'react';\nimport { Color } from './types';\nimport { Cube } from './Cube';\nimport { __ } from 'first-intl';\n\ntype CompletionPopupProps = { color: Color; onClose: () => void };\n\nexport const CompletionPopup = ({ color, onClose }: CompletionPopupProps) => (\n    <div className=\"again-popup\" onClick={onClose}>\n        <div className=\"popup-overlay\" />\n        <div className=\"popup-content\">\n            {__('AGAIN.color.finished')}\n            <Cube color={color} />\n        </div>\n    </div>\n);\n","import React, { ReactNode, useEffect } from 'react';\nimport { Abort, Finish } from './Turn';\nimport { Icon } from '../../components/icons/icon';\nimport { AgainStore, SplashIconType, useAgainSub } from './again-store';\n\nconst renderIcon = (iconType: SplashIconType | null): ReactNode => {\n    if (!iconType) return null;\n    switch (iconType) {\n        case 'cancel':\n            return <Abort />;\n        case 'submit':\n            return <Finish />;\n        case 'undo':\n            return <Icon.Undo className=\"reflect\" />;\n        case 'skip':\n            return <Icon.Ban />;\n        default:\n            return null;\n    }\n};\n\nconst hide = () => AgainStore.setSplash(null);\n\nexport const ActionSplash: React.FC = () => {\n    const { icon } = useAgainSub(({ againSplash }) => ({ icon: againSplash }));\n\n    useEffect(\n        () => () => {\n            window.setTimeout(hide, 500);\n        },\n        [icon]\n    );\n\n    const iconView = renderIcon(icon);\n\n    if (!iconView) return null;\n\n    return (\n        <div className=\"again-splash\">\n            <div className=\"splash-overlay\" />\n            <div className=\"splash-content\">{iconView}</div>\n        </div>\n    );\n};\n","import React from 'react';\nimport { AgainStore, useAgainSub } from './again-store';\nimport { Data } from './data';\nimport { Jokers } from './Jokers';\nimport { Grid } from './Grid';\nimport { Letters } from './Letters';\nimport { calculate, getClickable } from './again-logic';\nimport { RowPoints } from './RowPoints';\nimport { ColorPoints } from './ColorPoints';\nimport { Total } from './Total';\nimport { Turns } from './Turn';\nimport { CompletionPopup } from './CompletionPopup';\nimport { ActionSplash } from './ActionSplash';\nimport { useAgainResize } from './again-resize';\n\nexport const AgainStarted: React.FC<{ gridData: Data }> = ({ gridData }) => {\n    useAgainResize();\n    const { again, againSplash, againStarted } = useAgainSub(({ again, againSplash, againStarted }) => ({\n        again,\n        againSplash,\n        againStarted,\n    }));\n    const { crossed, chosen, turnCrossed, completedColor } = againStarted;\n\n    const { rowPointsBlocked, colorPointsBlocked, takenJokers, turns } = again;\n    const { completedRows, completedColors, totalPoints } = calculate(again, gridData);\n    const { backgroundColor } = gridData;\n    const clickable = chosen ? getClickable(turnCrossed, false) : getClickable(crossed);\n    const lastTurn = turns[turns.length - 1];\n\n    return (\n        <div className=\"again\">\n            <ActionSplash />\n            {completedColor && !againSplash && (\n                <CompletionPopup color={completedColor} onClose={AgainStore.onClosePopup} />\n            )}\n            <div className=\"again-inner\" style={{ backgroundColor }}>\n                <Grid\n                    gridData={gridData}\n                    crossed={crossed}\n                    clickable={clickable}\n                    onCross={AgainStore.onCross}\n                    lastTurn={lastTurn}\n                />\n                <Letters />\n                <RowPoints rowPointsBlocked={rowPointsBlocked} completedRows={completedRows} lastTurn={lastTurn} />\n                <Jokers takenJokers={takenJokers} />\n                <ColorPoints colorPointsBlocked={colorPointsBlocked} completedColors={completedColors} />\n                <Total totalPoints={totalPoints} lastTurn={lastTurn} />\n                <Turns turns={turns} />\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport { __, Message } from 'first-intl';\n\nexport const DisplayError: React.FC<{ error: Message }> = ({ error }) => (\n    <span className=\"invalid-feedback\">{__(error)}</span>\n);\n","type Event = { preventDefault: Function; target: { value: any } };\ntype EventHandler = (event: Event) => void;\n\ntype CustomInputHandling = { preventDefault?: boolean };\n\nconst inputHandler = (\n    cb: (_: any) => unknown | void,\n    { preventDefault = true }: CustomInputHandling = {}\n): EventHandler => (event) => {\n    if (preventDefault) event.preventDefault();\n    const original = event.target.value;\n    cb(original);\n};\n\nconst preventDefault = (event: any) => event.preventDefault();\n\nexport const EventUtil = { inputHandler, preventDefault };\n","import React, { ReactElement } from 'react';\nimport { __, __string, Message, StringMessage } from 'first-intl';\nimport { DisplayError } from './DisplayError';\nimport { ErrorMessage, iField } from 'morfi';\nimport { Util } from '../../util/util';\nimport { EventUtil } from '../../util/event-util';\n\nexport type SelectOption<T> = { label: StringMessage | string; value: T };\n\ntype SelectHandler<T> = (value: T) => void;\n\ntype CommonSelectProps<T> = {\n    name?: string;\n    label?: Message;\n    className?: string;\n    options: ReadonlyArray<SelectOption<T>>;\n    disabled?: boolean;\n    serialize?: (value: T) => string;\n};\n\ntype SelectProps<T> = {\n    required?: boolean;\n    onChange?: SelectHandler<T>;\n    onBlur?: SelectHandler<T>;\n    value: T;\n    error?: ErrorMessage;\n} & CommonSelectProps<T>;\n\n/**\n * ATTENTION: Since react v16.6 you have to supply strings or numbers within <option> tags.\n *            So you should not use any placeholders inside the messages you use as\n *            label for the select options.\n */\nconst Option: React.FC<{ label: StringMessage; value: string }> = ({ label, value }) => (\n    <option value={value}>{__string(label)}</option>\n);\n\ntype GetOptionValues = <T>(options: ReadonlyArray<SelectOption<T>>, serialize?: (value: T) => string) => string[];\nconst getOptionValues: GetOptionValues = (options, serialize) => {\n    const values = options.map((o) => o.value);\n    return serialize\n        ? values.map(serialize)\n        : values.map((v, i) => (v === undefined ? '' : typeof v === 'string' ? v : String(i)));\n};\n\nexport const Select: <T>(p: SelectProps<T>) => ReactElement = ({\n    value,\n    serialize,\n    label,\n    error,\n    required,\n    className,\n    onChange,\n    onBlur,\n    options,\n    disabled,\n    name,\n}) => {\n    const optionValues = getOptionValues(options, serialize);\n    const handlerRemapped = (handler?: typeof onChange) => (optionValue: string) =>\n        handler && handler(options[optionValues.indexOf(optionValue)].value);\n    const currentValue = options.find((option) => option.value === value);\n    const currentIndex = currentValue ? options.indexOf(currentValue) : 0;\n\n    return (\n        <div\n            className={Util.classNames(\n                className,\n                required && 'required',\n                !value && 'unselected',\n                error && 'has-error'\n            )}>\n            {label && <label>{__(label)}</label>}\n            <select\n                className=\"custom-select\"\n                name={name}\n                disabled={disabled}\n                onChange={EventUtil.inputHandler(handlerRemapped(onChange))}\n                onBlur={EventUtil.inputHandler(handlerRemapped(onBlur))}\n                value={optionValues[currentIndex]}>\n                {options.map((option, index: number) => (\n                    <Option label={option.label} value={optionValues[index]} key={index} />\n                ))}\n            </select>\n            {error && <DisplayError error={error} />}\n        </div>\n    );\n};\n\ntype FormSelectProps<T> = { Field: iField<T> } & CommonSelectProps<T>;\n\nexport const FormSelect: <T>(p: FormSelectProps<T>) => React.ReactElement<FormSelectProps<T>> = ({\n    Field,\n    className = 'form-control',\n    ...rest\n}) => (\n    <Field>\n        {({ onChange, onBlur, required, value, error }) => (\n            <Select {...{ value, error, required, onBlur, onChange, className }} {...rest} />\n        )}\n    </Field>\n);\n","import React from 'react';\nimport { DataOption, DataSelectionOptions } from './data';\nimport { AgainStore } from './again-store';\nimport { Select, SelectOption } from '../../components/form/select';\n\nconst placeHolderOption = { label: 'AGAIN.color.choose', value: undefined };\nconst randomOption = { label: 'AGAIN.color.random', value: 'random' as DataOption };\nconst onSelect = (option?: DataOption) => option && AgainStore.chooseData(option);\n\nconst OptionsWithRandom: SelectOption<DataOption | undefined>[] = [\n    placeHolderOption,\n    ...DataSelectionOptions,\n    randomOption,\n];\n\nexport const DataSelection: React.FC = () => (\n    <div className=\"again-selection\">\n        <Select options={OptionsWithRandom} onChange={onSelect} value={undefined} />\n    </div>\n);\n","import React, { Component, ReactNode } from 'react';\nimport { __ } from 'first-intl';\n\ntype ErrorBoundaryProps = { fix: () => void; children: ReactNode };\ntype ErrorBoundaryState = { hasError: boolean };\n\nexport class ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    state: ErrorBoundaryState = { hasError: false };\n\n    static getDerivedStateFromError = (): ErrorBoundaryState => ({ hasError: true });\n\n    render() {\n        const { hasError } = this.state;\n        const { children, fix } = this.props;\n\n        if (hasError) {\n            return (\n                <div className=\"game-error\">\n                    <h2>{__('error.boundary.unexpected')}</h2>\n                    <p>{__('error.boundary.sorry')}</p>\n                    <button type=\"button\" onClick={fix}>\n                        {__('error.boundary.fix')}\n                    </button>\n                </div>\n            );\n        }\n        return children;\n    }\n}\n","import React from 'react';\nimport { Icon } from '../components/icons/icon';\nimport { FooterButton } from './Footer';\n\nexport type FooterUndoProps = { onClick: () => void };\n\nexport const FooterUndo: React.FC<FooterUndoProps> = ({ onClick }) => (\n    <FooterButton onClick={onClick} description=\"APP.undo\">\n        <Icon.Undo className=\"reflect\" />\n    </FooterButton>\n);\n","import React from 'react';\nimport { Icon } from '../components/icons/icon';\nimport { FooterButton } from './Footer';\n\nexport type FooterRestartProps = { onClick: () => void };\n\nexport const FooterRestart: React.FC<FooterRestartProps> = ({ onClick }) => (\n    <FooterButton onClick={onClick} description=\"APP.restart\">\n        <Icon.PowerOff />\n    </FooterButton>\n);\n","import React from 'react';\nimport { AgainStarted } from './AgainStarted';\nimport { DataSelection } from './DataSelection';\nimport { ErrorBoundary } from '../../components/ErrorBoundary';\nimport { AgainStore, useAgainSub } from './again-store';\nimport { Footer, FooterButton } from '../../footer/Footer';\nimport { FooterUndo } from '../../footer/FooterUndo';\nimport { FooterRestart } from '../../footer/FooterRestart';\nimport { Icon } from '../../components/icons/icon';\nimport { FooterTurnControl } from './Turn';\n\nconst FooterStarted = () => (\n    <Footer>\n        <FooterUndo onClick={AgainStore.undo} />\n        <FooterRestart onClick={AgainStore.restart} />\n        <FooterButton onClick={AgainStore.onFinish} description=\"APP.skip\">\n            <Icon.Forward />\n        </FooterButton>\n    </Footer>\n);\n\nexport const Again: React.FC = () => {\n    const { againData, chosen } = useAgainSub(({ againData, againStarted: { chosen } }) => ({ againData, chosen }));\n    if (!againData)\n        return (\n            <>\n                <DataSelection />\n                <Footer />\n            </>\n        );\n    return (\n        <ErrorBoundary fix={AgainStore.restart}>\n            <>\n                <AgainStarted gridData={againData} />\n                {chosen ? <FooterTurnControl chosen={chosen} /> : <FooterStarted />}\n            </>\n        </ErrorBoundary>\n    );\n};\n","import React, { Component } from 'react';\nimport { Globals } from '../globals';\n\nconst missions = [\n    {\n        title: 'Save the world',\n        text:\n            'Did you never think about saving the world? You can do it. Just follow the given instructions...' +\n            'You need to modify your attitude. You have to become more optimistic and you should... bla blub foo bar',\n    },\n    {\n        title: 'Marry her',\n        text: 'It is finally the time. Get the ring. Make the first step and perform your show to win her heart <3',\n    },\n    {\n        title: 'Punch a bear',\n        text:\n            \"Yes. I'm serious. You should punch some big bear into his stomach. But possible you should first \" +\n            'think about a good plan to get away again - as fast as possible :{',\n    },\n];\n\nexport class MissionControl extends Component<{}, { processed: number; selected: number }> {\n    state = { processed: 0, selected: 0 };\n    interval = 0;\n\n    processNextLetter = () => {\n        const current = this.state.processed;\n        if (current === missions[this.state.selected].text.length) Globals.window().clearInterval(this.interval);\n        this.setState({ processed: current + 1 });\n    };\n\n    componentDidMount() {\n        this.runLetters();\n    }\n\n    runLetters = () => (this.interval = Globals.window().setInterval(this.processNextLetter, 50));\n\n    select = (mission: number) => () => {\n        Globals.window().clearInterval(this.interval);\n        this.setState({ processed: 0, selected: mission });\n        this.runLetters();\n    };\n\n    componentWillUnmount() {\n        Globals.window().clearInterval(this.interval);\n    }\n\n    render() {\n        return (\n            <div className=\"mission-control\">\n                <div className=\"mission-content\">\n                    <div className=\"mission-list\">\n                        <ul>\n                            {missions.map((m, i) => {\n                                const isSelected = this.state.selected === i;\n                                const className = isSelected ? 'selected' : undefined;\n                                const handler = isSelected ? undefined : this.select(i);\n                                return (\n                                    <li key={i} onClick={handler} className={className}>\n                                        {m.title}\n                                    </li>\n                                );\n                            })}\n                        </ul>\n                    </div>\n                    <div className=\"mission-desc\">\n                        {missions[this.state.selected].text.substring(0, this.state.processed)}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { FocusEventHandler } from 'react';\nimport { ErrorMessage, iField } from 'morfi';\nimport { __, __string, Message, StringMessage } from 'first-intl';\nimport { DisplayError } from './DisplayError';\nimport { EventUtil } from '../../util/event-util';\nimport { Util } from '../../util/util';\n\nexport type AbstractRef<T> = { current: null | T };\nexport type InputRef = AbstractRef<HTMLInputElement>;\n\nexport type InputType = 'text' | 'number' | 'password' | 'email';\n\ntype InputHandler = (value: string) => void;\n\ntype CommonInputProps = {\n    label?: Message;\n    placeholder?: StringMessage;\n    className?: string;\n    inputClassName?: string;\n    onFocus?: FocusEventHandler<HTMLInputElement>;\n    autoFocus?: boolean;\n    disabled?: boolean;\n    type?: InputType;\n    trim?: boolean;\n    name?: string;\n    forwardedRef?: InputRef;\n    readOnly?: boolean;\n};\n\ntype InputProps = {\n    required?: boolean;\n    onChange?: InputHandler;\n    onBlur?: InputHandler;\n    value: string;\n    error?: ErrorMessage;\n} & CommonInputProps;\n\nconst transformHandler = (handler: InputHandler, trim?: boolean): InputHandler => (value: string) =>\n    handler(trim ? value && value.trim() : value);\n\nexport const Input: React.FC<InputProps> = ({\n    value,\n    label,\n    placeholder,\n    error,\n    required,\n    className,\n    inputClassName,\n    onChange,\n    onBlur,\n    onFocus,\n    autoFocus,\n    disabled,\n    type = 'text',\n    trim,\n    name,\n    forwardedRef,\n    readOnly,\n}) => (\n    <div className={Util.classNames(className, required && 'required')}>\n        {label && <label>{__(label)}</label>}\n        <input\n            name={name}\n            className={Util.classNames(inputClassName, error && 'is-invalid')}\n            onChange={onChange && EventUtil.inputHandler(transformHandler(onChange, trim))}\n            onBlur={onBlur && EventUtil.inputHandler(transformHandler(onBlur, trim))}\n            onFocus={onFocus}\n            placeholder={placeholder && __string(placeholder)}\n            ref={forwardedRef}\n            readOnly={readOnly}\n            {...{ value, autoFocus, disabled, type }}\n        />\n        {error && <DisplayError error={error} />}\n    </div>\n);\n\ntype FormInputProps = { Field: iField<string> } & CommonInputProps;\n\nexport const FormInput = ({ Field, className = 'form-control', ...rest }: FormInputProps) => (\n    <Field>\n        {({ onChange, onBlur, required, value, error }) => (\n            <Input {...{ required, onBlur, onChange, className, value, error }} {...rest} />\n        )}\n    </Field>\n);\n","import { createStore } from 'react-use-sub';\nimport { GameState, Player } from './players-store';\n\ntype SpadeIsTrumpState = { gameState: GameState; players: Player[] };\n\nconst [useSpadeIsTrumpSub, SpadeIsTrumpStore] = createStore<SpadeIsTrumpState>({ gameState: [], players: [] });\n\nexport { useSpadeIsTrumpSub, SpadeIsTrumpStore };\n","import { Persistore } from 'persistore';\nimport { SpadeIsTrumpStore } from './spadeIsTrump-store';\nimport { GameState } from './players-store';\n\nconst _key = 'SIT.history';\n\nconst getHistory = (): GameState[] => {\n    try {\n        const players = Persistore.get(_key);\n        return JSON.parse(players as any);\n    } catch (e) {\n        return [];\n    }\n};\n\nconst _set = (gameState: GameState): void => {\n    const history = getHistory();\n    history.unshift(gameState);\n    if (history.length > 10) history.pop();\n    Persistore.set(_key, JSON.stringify(history));\n};\n\nconst set = (update: GameState | ((gameState: GameState) => GameState)) => {\n    if (typeof update === 'function') {\n        SpadeIsTrumpStore.set(({ gameState }) => ({ gameState: update(gameState) }));\n    } else {\n        SpadeIsTrumpStore.set({ gameState: update });\n    }\n    _set(SpadeIsTrumpStore.get().gameState);\n};\n\nconst reset = () => HistoryStore.set([]);\n\nconst undo = (): void => {\n    const history = getHistory();\n    if (history.length > 1) history.shift();\n    Persistore.set(_key, JSON.stringify(history));\n    SpadeIsTrumpStore.set({ gameState: history[0] });\n};\n\nconst _clear = (state: GameState): GameState =>\n    state.map((player) => ({\n        ...player,\n        total: 0,\n        points: player.points.map(() => ({})),\n    }));\n\nconst rearrange = () =>\n    set((state) => {\n        const cleared = _clear(state);\n        return [...cleared.slice(1), cleared[0]];\n    });\n\nconst get = (): GameState => getHistory()[0] || [];\n\nSpadeIsTrumpStore.set({ gameState: get() });\n\nexport const HistoryStore = { set, get, undo, reset, rearrange };\n","import { PointsState } from './Points';\nimport { Persistore } from 'persistore';\nimport { SpadeIsTrumpStore } from './spadeIsTrump-store';\nimport { Util } from '../../util/util';\n\nconst _key = 'SIT.players';\n\nexport type Player = { uuid: string; name: string; shortcut?: string };\nexport type PlayerState = { player: Player; points: PointsState[]; total: number };\nexport type GameState = PlayerState[];\n\nconst _get = (): Player[] => {\n    try {\n        const players = Persistore.get(_key);\n        return JSON.parse(players as any);\n    } catch (e) {\n        return [];\n    }\n};\n\nconst _set = (next: Player[]): void => Persistore.set(_key, JSON.stringify(next));\n\nconst set = (update: Player[] | ((players: Player[]) => Player[])) => {\n    if (typeof update === 'function') {\n        SpadeIsTrumpStore.set(({ players }) => ({ players: update(players) }));\n    } else {\n        SpadeIsTrumpStore.set({ players: update });\n    }\n    _set(SpadeIsTrumpStore.get().players);\n};\n\nconst add = (name: string, shortcut?: string) => set((players) => [{ name, shortcut, uuid: Util.uuid() }, ...players]);\n\nconst update = (update: Player): void =>\n    set((players) => {\n        const index = players.findIndex((p) => p.uuid === update.uuid);\n        return index === -1 ? players : Util.nextArray(players, index, update);\n    });\n\nconst remove = (player: Player): void => set((players) => players.filter((p) => p.uuid !== player.uuid));\n\nconst moveTo = (before: number, after: number) =>\n    set((players) => {\n        const next = players.filter((_, index) => index !== before);\n        next.splice(after, 0, players[before]);\n        return next;\n    });\n\nconst moveUp = (current: number) => (current > 0 ? moveTo(current, current - 1) : undefined);\nconst moveDown = (current: number) => moveTo(current, current + 1);\n\nSpadeIsTrumpStore.set({ players: _get() });\n\nexport const PlayerStore = { set, add, update, remove, moveTo, moveDown, moveUp };\n","export enum Color {\n    YELLOW = '#b18e05',\n    BLUE = '#1313b1',\n    BLACK = '#000',\n    GREEN = '#054800',\n    ORANGE = '#b85409',\n    PURPLE = '#390257',\n}\n\nexport const CROSS = '✘';\n\nexport enum BONUS {\n    FOX = 'FOX',\n    PLUS_1 = 'PLUS_1',\n    REFRESH = 'REFRESH',\n    YELLOW = 'YELLOW',\n    YELLOW_10 = 'YELLOW_10',\n    YELLOW_14 = 'YELLOW_14',\n    YELLOW_16 = 'YELLOW_16',\n    YELLOW_20 = 'YELLOW_20',\n    BLUE = 'BLUE',\n    GREEN = 'GREEN',\n    ORANGE_4 = 'ORANGE_4',\n    ORANGE_5 = 'ORANGE_5',\n    ORANGE_6 = 'ORANGE_6',\n    PURPLE = 'PURPLE',\n    ULTIMATE = 'ULTIMATE',\n}\n\nconst orangeFactors = [1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 3];\n\nexport const Data = {\n    [Color.YELLOW]: {\n        contents: [3, 6, 5, CROSS, 2, 1, CROSS, 5, 1, CROSS, 2, 4, CROSS, 3, 4, 6],\n        rowBonus: [BONUS.BLUE, BONUS.ORANGE_4, BONUS.GREEN, BONUS.FOX],\n        columnBonus: [BONUS.YELLOW_10, BONUS.YELLOW_14, BONUS.YELLOW_16, BONUS.YELLOW_20, BONUS.PLUS_1],\n    },\n    [Color.BLUE]: {\n        contents: [CROSS, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],\n        points: [0, 1, 2, 4, 7, 11, 16, 22, 29, 37, 46, 56],\n        rowBonus: [BONUS.ORANGE_5, BONUS.YELLOW, BONUS.FOX],\n        columnBonus: [BONUS.REFRESH, BONUS.GREEN, BONUS.PURPLE, BONUS.PLUS_1],\n    },\n    [Color.GREEN]: {\n        contents: [1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 6],\n        points: [1, 3, 6, 10, 15, 21, 28, 36, 45, 55, 66],\n        bonus: [\n            undefined,\n            undefined,\n            undefined,\n            BONUS.PLUS_1,\n            undefined,\n            BONUS.BLUE,\n            BONUS.FOX,\n            undefined,\n            BONUS.PURPLE,\n            BONUS.REFRESH,\n            undefined,\n        ],\n    },\n    [Color.ORANGE]: {\n        factors: orangeFactors,\n        contents: orangeFactors.map((f) => (f > 1 ? `x${f}` : '')),\n        bonus: [\n            undefined,\n            undefined,\n            BONUS.REFRESH,\n            undefined,\n            BONUS.YELLOW,\n            BONUS.PLUS_1,\n            undefined,\n            BONUS.FOX,\n            undefined,\n            BONUS.PURPLE,\n            undefined,\n        ],\n    },\n    [Color.PURPLE]: {\n        contents: ['', '', '', '', '', '', '', '', '', '', ''],\n        bonus: [\n            undefined,\n            undefined,\n            BONUS.REFRESH,\n            BONUS.BLUE,\n            BONUS.PLUS_1,\n            BONUS.YELLOW,\n            BONUS.FOX,\n            BONUS.REFRESH,\n            BONUS.GREEN,\n            BONUS.ORANGE_6,\n            BONUS.PLUS_1,\n        ],\n    },\n};\n","import React, { useCallback, useState } from 'react';\nimport { Morfi, FormData } from 'morfi';\nimport { FormInput } from '../../components/form/input';\nimport { __ } from 'first-intl';\nimport { PlayerStore } from './players-store';\n\ntype AddPlayerFormValues = { name: string; shortcut: string };\nconst initialValues: AddPlayerFormValues = { name: '', shortcut: '' };\nconst { Form, Fields } = Morfi.create<AddPlayerFormValues>(initialValues);\nconst initialData: FormData<AddPlayerFormValues> = { values: initialValues, errors: {} };\nconst validation = { name: { onChange: (v?: string) => (!v ? { id: 'SIT.addPlayer.name.required' } : undefined) } };\n\nexport const AddPlayerForm: React.FC<{ close: () => void }> = ({ close }) => {\n    const [data, setData] = useState(initialData);\n\n    const onSubmit = useCallback(\n        ({ name, shortcut }) => {\n            PlayerStore.add(name, shortcut);\n            close();\n        },\n        [close]\n    );\n\n    return (\n        <Form\n            className=\"startup add-players\"\n            onSubmit={onSubmit}\n            validation={validation}\n            data={data}\n            onChange={setData}>\n            <FormInput autoFocus Field={Fields.name} label=\"SIT.addPlayer.name\" />\n            <FormInput Field={Fields.shortcut} label=\"SIT.addPlayer.shortcut\" />\n            <button type=\"submit\">{__('SIT.addPlayer.submit')}</button>\n        </Form>\n    );\n};\n\nexport const AddPlayer: React.FC = () => {\n    const [focus, setFocus] = useState(false);\n\n    const onClick = useCallback(() => setFocus(true), []);\n    const close = useCallback(() => setFocus(false), []);\n\n    return focus ? (\n        <AddPlayerForm close={close} />\n    ) : (\n        <button className=\"add-player\" onClick={onClick} type=\"submit\">\n            {__('SIT.addPlayer')}\n        </button>\n    );\n};\n","import React, { useCallback } from 'react';\nimport { Player, PlayerStore } from './players-store';\nimport { Icon } from '../../components/icons/icon';\n\nexport const PlayerRow: React.FC<{ player: Player; pos: number }> = ({ player, pos }) => {\n    const { name, shortcut } = player;\n\n    const moveUp = useCallback(() => PlayerStore.moveUp(pos), [pos]);\n    const moveDown = useCallback(() => PlayerStore.moveDown(pos), [pos]);\n    const remove = useCallback(() => PlayerStore.remove(player), [player]);\n\n    return (\n        <tr className=\"player-row\">\n            <td className=\"player-pos\">\n                <span className=\"player-move-down\" onClick={moveDown}>\n                    <Icon.ArrowRight />\n                </span>\n                <span className=\"player-current-pos\">{pos + 1}</span>\n                <span className=\"player-move-up\" onClick={moveUp}>\n                    <Icon.ArrowRight />\n                </span>\n            </td>\n            <td className=\"player-name\">{name}</td>\n            <td className=\"player-shortcut\">{shortcut}</td>\n            <td className=\"player-actions\">\n                <span className=\"player-remove\" onClick={remove}>\n                    <Icon.Trash />\n                </span>\n            </td>\n        </tr>\n    );\n};\n","import React, { useState } from 'react';\nimport { Morfi, FormData } from 'morfi';\nimport { FormInput } from '../../components/form/input';\nimport { __ } from 'first-intl';\nimport { Util } from '../../util/util';\nimport { Player, PlayerState } from './players-store';\nimport { HistoryStore } from './history-store';\nimport { SpadeIsTrumpStore, useSpadeIsTrumpSub } from './spadeIsTrump-store';\nimport { AddPlayer } from './AddPlayer';\nimport { PlayerRow } from './PlayerRow';\n\nconst newPlayer = (player: Player, playerIdx: number, rounds: number): PlayerState => ({\n    player,\n    points: Util.array(rounds).map(() => ({})),\n    total: 0,\n});\n\nconst playersFromStartup = (startupInfo: StartupInfo): PlayerState[] => {\n    const rounds = Math.floor(startupInfo.numberOfCards / startupInfo.numberOfPlayers);\n    return SpadeIsTrumpStore.get()\n        .players.slice(0, startupInfo.numberOfPlayers)\n        .map((player, index) => newPlayer(player, index, rounds));\n};\n\nconst onChangeStartupInfo = (startupInfo: StartupInfo) => HistoryStore.set(playersFromStartup(startupInfo));\n\nexport type StartupInfo = { numberOfCards: number; numberOfPlayers: number };\nexport type StartupInfoValues = { numberOfCards: string; numberOfPlayers: string };\nconst StartupInfoValidations = {\n    numberOfCards: {\n        onChange: (v?: string) => {\n            const num = Number(v);\n            return isNaN(num) || num < 32 ? { id: 'SIT.startup.cartCount.invalid' } : undefined;\n        },\n    },\n    numberOfPlayers: {\n        onChange: (v?: string) => {\n            const num = Number(v);\n            if (isNaN(num) || num < 2 || num > 10) return { id: 'SIT.startup.playerCount.invalid' };\n            if (num > SpadeIsTrumpStore.get().players.length)\n                return { id: 'SIT.startup.playerCount.exceedsRegistered' };\n        },\n    },\n};\n\nconst submit = ({ numberOfCards, numberOfPlayers }: StartupInfoValues) => {\n    onChangeStartupInfo({ numberOfCards: +numberOfCards, numberOfPlayers: +numberOfPlayers });\n};\n\nconst initialValues: StartupInfoValues = { numberOfCards: '52', numberOfPlayers: '' };\nconst { Form, Fields } = Morfi.create<StartupInfoValues>(initialValues);\n\nexport const StartupInfoPicker = () => {\n    const { players } = useSpadeIsTrumpSub(({ players }) => ({ players }));\n\n    const [data, setData] = useState<FormData<StartupInfoValues>>({ values: initialValues, errors: {} });\n\n    return (\n        <div className=\"spade-is-trump\">\n            <div className=\"configs\">\n                <Form\n                    className=\"startup\"\n                    onSubmit={submit}\n                    validation={StartupInfoValidations}\n                    data={data}\n                    onChange={setData}>\n                    <FormInput Field={Fields.numberOfCards} label=\"SIT.startup.cardCount\" type=\"number\" />\n                    <FormInput Field={Fields.numberOfPlayers} label=\"SIT.startup.playerCount\" type=\"number\" />\n                    <button type=\"submit\">{__('SIT.startup.start')}</button>\n                </Form>\n            </div>\n            <div className=\"players\">\n                <div className=\"registered-players\">\n                    <table>\n                        <tbody>\n                            {players.map((player, index) => (\n                                <PlayerRow player={player} pos={index} key={player.uuid} />\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n                <AddPlayer />\n            </div>\n        </div>\n    );\n};\n","import React, { useState, useCallback, useEffect, FormEvent } from 'react';\nimport { Input } from '../../components/form/input';\n\nexport type PointsState = { tip?: number; checked?: boolean; earned?: number };\n\ntype PointsComponentProps = {\n    points: PointsState;\n    onChange: (player: PointsState) => void;\n    limit: number;\n    checkable?: boolean;\n    active: boolean;\n    activeRound: boolean;\n};\n\nconst parseNum = (v: string): number | undefined => {\n    if (v && v.trim()) {\n        const parsed = Number(v.trim());\n        if (!isNaN(parsed) && parsed >= 0) {\n            return parsed;\n        }\n    }\n};\n\nconst _tipToString = (tip?: number) => (tip !== undefined ? String(tip) : '');\n\nexport const Points = ({ points, activeRound, limit, onChange, checkable, active }: PointsComponentProps) => {\n    const [focus, setFocus] = useState(false);\n    const [currentTip, setCurrentTip] = useState<string>(() => _tipToString(points.tip));\n\n    const onFocus = useCallback(() => {\n        activeRound && setFocus(true);\n    }, [activeRound]);\n\n    const onChangeTip = useCallback(\n        (tip: string) => {\n            if (activeRound) {\n                const num = parseNum(tip);\n                if (num === undefined) {\n                    setCurrentTip('');\n                } else if (num >= 0 && num <= limit) {\n                    setCurrentTip(tip);\n                }\n            }\n        },\n        [activeRound, limit]\n    );\n\n    const onBlur = useCallback(\n        (tip: string) => {\n            if (activeRound) {\n                const num = parseNum(tip);\n                if (num !== undefined) {\n                    onChange({ ...points, tip: num });\n                }\n                setFocus(false);\n            }\n        },\n        [activeRound, points, onChange]\n    );\n\n    const onSubmit = useCallback(\n        (event: FormEvent) => {\n            event.preventDefault();\n            onBlur(currentTip);\n        },\n        [onBlur, currentTip]\n    );\n\n    const setEarned = useCallback(\n        (earned: number) => {\n            if (!activeRound || points.earned) return;\n            onChange({ ...points, earned });\n        },\n        [activeRound, points, onChange]\n    );\n\n    const onSuccess = useCallback(() => {\n        setEarned(Number(points.tip) + 10);\n    }, [setEarned, points]);\n\n    const onFailed = useCallback(() => {\n        setEarned(Number(points.tip) * -1);\n    }, [setEarned, points]);\n\n    useEffect(() => {\n        setCurrentTip(_tipToString(points.tip));\n    }, [points.tip]);\n\n    if (points.earned !== undefined) {\n        return points.earned > 0 ? (\n            <td className=\"points points-earned\">{points.earned}</td>\n        ) : (\n            <td className=\"points points-lost\">{points.earned}</td>\n        );\n    }\n\n    if (!focus) {\n        const clazzName = activeRound && active ? 'points active' : 'points';\n        const readyToPlay = activeRound && checkable;\n        return (\n            <td onClick={readyToPlay ? undefined : onFocus} className={clazzName}>\n                <div onClick={readyToPlay ? onFocus : undefined} className=\"points-tip\">\n                    {currentTip}\n                </div>\n                {readyToPlay && (\n                    <>\n                        <button className=\"points-success\" type=\"button\" onClick={onSuccess}>\n                            +\n                        </button>\n                        <button className=\"points-failed\" type=\"button\" onClick={onFailed}>\n                            -\n                        </button>\n                    </>\n                )}\n            </td>\n        );\n    }\n    return (\n        <td>\n            <form onSubmit={onSubmit}>\n                <Input\n                    className=\"points-input\"\n                    value={currentTip}\n                    autoFocus\n                    onChange={onChangeTip}\n                    onBlur={onBlur}\n                    type=\"number\"\n                />\n            </form>\n        </td>\n    );\n};\n","import React, { useCallback, useState } from 'react';\n\nexport type ClickableDescriptionProps = { desc: string; short?: string; className?: string; tag?: string };\n\nexport const ClickableDescription: React.FC<ClickableDescriptionProps> = ({ desc, short, className, tag = 'div' }) => {\n    const [showName, setShowName] = useState(false);\n    const displayed = showName ? desc : short || desc;\n\n    const onClick = useCallback(() => {\n        if (short) {\n            setShowName(true);\n            window.setTimeout(() => setShowName(false), 3000);\n        }\n    }, [short]);\n\n    return React.createElement(tag, { onClick, className }, displayed);\n};\n","import React from 'react';\nimport { __string } from 'first-intl';\nimport { Util } from '../../util/util';\nimport { Icon } from '../../components/icons/icon';\nimport { Points, PointsState } from './Points';\nimport { HistoryStore } from './history-store';\nimport { useSpadeIsTrumpSub } from './spadeIsTrump-store';\nimport { GameState, PlayerState } from './players-store';\nimport { ClickableDescription } from './ClickableDescription';\n\nconst getActiveRound = (gameState: GameState, rounds: number): number | undefined => {\n    const earnings = Util.array(rounds).map(() => 0);\n    for (let i = 0; i < gameState.length; i++) {\n        const points: PointsState[] = gameState[i].points;\n        for (let j = 0; j < points.length; j++) {\n            if (points[j].earned !== undefined) earnings[j]++;\n        }\n    }\n    const round = earnings.findIndex((num) => num < gameState.length);\n    return round === -1 ? undefined : round;\n};\n\nconst activeRoundReady = (gameState: GameState, activeRound?: number): boolean => {\n    if (activeRound === undefined) return true;\n    for (let i = 0; i < gameState.length; i++) {\n        const points = gameState[i].points[activeRound];\n        if (points.tip === undefined) return false;\n    }\n    return true;\n};\n\nconst roundHasError = (gameState: GameState, round: number, cards: number): boolean => {\n    const earnings = gameState.map(\n        (player) => player.points.map((points) => points.earned).filter((_, index) => index === round)[0]\n    );\n    if (earnings.filter((v) => v === undefined).length) return false; // only display warning if all earnings are known\n    const positives = earnings.map((e: any) => (e > 10 ? e - 10 : undefined)).reduce((r: number, v = 0) => r + v, 0);\n    return Boolean(positives > cards || (positives === cards && earnings.filter((v) => v === 0).length));\n};\n\nconst onPlayerChange = (player: PlayerState, playerIdx: number) =>\n    HistoryStore.set((gameState) => {\n        const next = [...gameState];\n        next[playerIdx] = player;\n        return next;\n    });\n\nconst onPointsChange = (player: PlayerState, playerIdx: number, roundIdx: number) => (points: PointsState) => {\n    const next = [...player.points];\n    next[roundIdx] = points;\n    onPlayerChange({ ...player, points: next }, playerIdx);\n};\n\nexport const SpadeIsTrumpStarted: React.FC = () => {\n    const { gameState } = useSpadeIsTrumpSub(({ gameState }) => ({ gameState }));\n    const rounds = gameState[0].points.length;\n    const activeRound = getActiveRound(gameState, rounds);\n    const earnedPoints = gameState.map((player) => player.points.reduce((res, val) => res + (val.earned || 0), 0));\n\n    return (\n        <table>\n            <thead>\n                <tr>\n                    <ClickableDescription desc={__string('SIT.cardCount')} short=\"#\" tag=\"th\" className=\"card-number\" />\n                    {gameState.map(({ player: { name, shortcut } }, playerIdx) => (\n                        <ClickableDescription desc={name} short={shortcut} key={playerIdx} tag=\"th\" />\n                    ))}\n                </tr>\n            </thead>\n            <tbody>\n                {Util.array(rounds).map((_, roundIdx: number) => {\n                    const isActiveRound = activeRound === roundIdx;\n                    const activeReady = activeRoundReady(gameState, activeRound);\n                    const cards = rounds - roundIdx;\n                    const hasError = roundHasError(gameState, roundIdx, cards);\n                    return (\n                        <tr\n                            key={cards}\n                            className={activeRound !== undefined && roundIdx > activeRound ? 'disabled' : undefined}>\n                            <td>\n                                {cards}\n                                {hasError && (\n                                    <span className=\"error-round\">\n                                        <Icon.Alert />\n                                    </span>\n                                )}\n                            </td>\n                            {gameState.map((player, playerIdx) => (\n                                <Points\n                                    key={playerIdx}\n                                    points={player.points[roundIdx]}\n                                    limit={cards}\n                                    checkable={activeReady}\n                                    onChange={onPointsChange(player, playerIdx, roundIdx)}\n                                    active={roundIdx % gameState.length === playerIdx}\n                                    activeRound={isActiveRound}\n                                />\n                            ))}\n                        </tr>\n                    );\n                })}\n                <tr className=\"sum\">\n                    <ClickableDescription desc={__string('SIT.points')} short=\"∑\" tag=\"td\" />\n                    {earnedPoints.map((earned, earnedIdx) => (\n                        <td key={earnedIdx}>\n                            {earned}\n                            {activeRound === undefined && earned === Math.max(...earnedPoints) && (\n                                <Icon.Crown className=\"winner\" />\n                            )}\n                        </td>\n                    ))}\n                </tr>\n            </tbody>\n        </table>\n    );\n};\n","import React from 'react';\nimport { StartupInfoPicker } from './StartupInfoPicker';\nimport { SpadeIsTrumpStarted } from './SpadeIsTrumpStarted';\nimport { ErrorBoundary } from '../../components/ErrorBoundary';\nimport { HistoryStore } from './history-store';\nimport { useSpadeIsTrumpSub } from './spadeIsTrump-store';\nimport { Footer, FooterButton } from '../../footer/Footer';\nimport { FooterUndo } from '../../footer/FooterUndo';\nimport { FooterRestart } from '../../footer/FooterRestart';\nimport { Icon } from '../../components/icons/icon';\n\ntype SpadeIsTrumpFooterProps = { started: boolean };\n\nconst SpadeIsTrumpFooter: React.FC<SpadeIsTrumpFooterProps> = ({ started }) => (\n    <Footer>\n        <FooterUndo onClick={HistoryStore.undo} />\n        {started && <FooterRestart onClick={HistoryStore.reset} />}\n        {started && (\n            <FooterButton onClick={HistoryStore.rearrange} description=\"Umsortieren\">\n                <Icon.Refresh />\n            </FooterButton>\n        )}\n    </Footer>\n);\n\nexport const SpadeIsTrump: React.FC = () => {\n    const started = useSpadeIsTrumpSub(({ gameState }) => !!gameState.length);\n\n    return (\n        <ErrorBoundary fix={HistoryStore.reset}>\n            <>\n                <div className=\"spade-is-trump\">{started ? <SpadeIsTrumpStarted /> : <StartupInfoPicker />}</div>\n                <SpadeIsTrumpFooter started={started} />\n            </>\n        </ErrorBoundary>\n    );\n};\n","import { Util } from '../../util/util';\nimport { createStore } from 'react-use-sub';\nimport { Persistore } from 'persistore';\nimport { BONUS, Color } from './data';\n\nconst _key = 'veryClever';\n\nexport type Crossed = boolean[];\nexport type Points = number[];\nexport type Highlight = { color: Color; index: number };\n\nconst _setHistoryLocal = (history: GameState[]) => Persistore.set(_key, JSON.stringify(history));\nconst _getHistory = () => {\n    try {\n        const history = JSON.parse(Persistore.get(_key) || '[]');\n        if (Array.isArray(history)) return history;\n    } catch (e) {\n        _setHistoryLocal([]);\n    }\n    return [];\n};\nconst _get = () => _getHistory().pop();\n\nexport type GameState = {\n    [Color.YELLOW]: Crossed;\n    [Color.BLUE]: Crossed;\n    [Color.GREEN]: Crossed;\n    [Color.ORANGE]: Points;\n    [Color.PURPLE]: Points;\n    earnedBonus: {\n        [Color.YELLOW]: BONUS[];\n        [Color.BLUE]: BONUS[];\n    };\n    reshuffle: Crossed;\n    plusOne: Crossed;\n    round: number;\n    selection: Color.ORANGE | Color.PURPLE | null;\n    highlight: null | Highlight;\n    bonus: BONUS[];\n    foxes: number;\n};\nexport const initialGameState = {\n    [Color.YELLOW]: Util.arrayFill(Util.array(16, false), [3, 6, 9, 12], true),\n    [Color.BLUE]: Util.arrayFill(Util.array(12, false), [0], true),\n    [Color.GREEN]: Util.array(11, false),\n    [Color.ORANGE]: Util.array(11, 0),\n    [Color.PURPLE]: Util.array(11, 0),\n    earnedBonus: {\n        [Color.YELLOW]: [],\n        [Color.BLUE]: [],\n    },\n    reshuffle: [false],\n    plusOne: [],\n    round: 1,\n    selection: null,\n    highlight: null,\n    bonus: [],\n    foxes: 0,\n};\nconst _setLocal = (state: GameState) => _setHistoryLocal([..._getHistory().slice(-9), state]);\n\nconst [useVeryCleverSub, _Store] = createStore<GameState>(initialGameState);\n\nconst _set: typeof _Store['set'] = (update) => {\n    _Store.set(update);\n    _setLocal(_Store.get());\n};\n\n_Store.set(_get() || {});\n\nconst undo = () => {\n    const history = _getHistory();\n    if (history.length > 1) {\n        history.pop();\n        _setHistoryLocal(history);\n        _Store.set(history[history.length - 1]);\n    }\n};\n\nconst reset = () => {\n    _setHistoryLocal([]);\n    _set(initialGameState);\n};\n\nexport const VeryCleverStore = {\n    get: _Store.get,\n    set: _set,\n    restart: () => _set(initialGameState),\n    undo,\n    reset,\n};\n\nexport { useVeryCleverSub };\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useDecryptoSub } from './Decrypto-store';\nimport { __ } from 'first-intl';\n\nenum Status {\n    WON = 'WON',\n    LOST = 'LOST',\n}\n\nexport const NotifyResult: React.FC = () => {\n    const [status, setStatus] = useState<Status | undefined>();\n    const { wins, losses } = useDecryptoSub(({ results }) => results);\n    const last = useRef({ wins, losses });\n\n    const close = useCallback(() => setStatus(undefined), []);\n\n    useEffect(() => {\n        if (last.current.wins === 1 && wins === 2) {\n            setStatus(Status.WON);\n        } else if (last.current.losses === 1 && losses === 2) {\n            setStatus(Status.LOST);\n        }\n        last.current = { wins, losses };\n    }, [wins, losses]);\n\n    if (!status) return null;\n\n    return (\n        <div className=\"result-overlay\" onClick={close}>\n            <span>{__(status === Status.WON ? 'DECRYPTO.won' : 'DECRYPTO.lost')}</span>\n        </div>\n    );\n};\n","import { Crossed, GameState, Points, VeryCleverStore } from './VeryClever-store';\nimport { Util } from '../../util/util';\nimport { BONUS, Color, Data } from './data';\n\nconst _takeBonus = (list: Crossed): Crossed => {\n    const firstFalse = list.findIndex((v) => !v);\n    return firstFalse >= 0 ? Util.nextArray(list, firstFalse, true) : list;\n};\n\nconst takeReshuffleBonus = () => VeryCleverStore.set(({ reshuffle }) => ({ reshuffle: _takeBonus(reshuffle) }));\nconst takePlusOneBonus = () => VeryCleverStore.set(({ plusOne }) => ({ plusOne: _takeBonus(plusOne) }));\n\nconst _allCrossed = (crossed: Crossed, ...nums: number[]): boolean => nums.every((num) => crossed[num]);\n\nconst _getYellowBonus = (crossed: Crossed, earned: BONUS[]): BONUS[] => {\n    const collected = [];\n\n    if (!earned.includes(BONUS.YELLOW_10) && _allCrossed(crossed, 0, 4, 8)) {\n        collected.push(BONUS.YELLOW_10);\n    }\n    if (!earned.includes(BONUS.YELLOW_14) && _allCrossed(crossed, 1, 5, 13)) {\n        collected.push(BONUS.YELLOW_14);\n    }\n    if (!earned.includes(BONUS.YELLOW_16) && _allCrossed(crossed, 2, 10, 14)) {\n        collected.push(BONUS.YELLOW_16);\n    }\n    if (!earned.includes(BONUS.YELLOW_20) && _allCrossed(crossed, 7, 11, 15)) {\n        collected.push(BONUS.YELLOW_20);\n    }\n    if (!earned.includes(BONUS.BLUE) && _allCrossed(crossed, 0, 1, 2)) {\n        collected.push(BONUS.BLUE);\n    }\n    if (!earned.includes(BONUS.ORANGE_4) && _allCrossed(crossed, 4, 5, 7)) {\n        collected.push(BONUS.ORANGE_4);\n    }\n    if (!earned.includes(BONUS.GREEN) && _allCrossed(crossed, 8, 10, 11)) {\n        collected.push(BONUS.GREEN);\n    }\n    if (!earned.includes(BONUS.FOX) && _allCrossed(crossed, 13, 14, 15)) {\n        collected.push(BONUS.FOX);\n    }\n    if (!earned.includes(BONUS.PLUS_1) && _allCrossed(crossed, 0, 5, 10, 15)) {\n        collected.push(BONUS.PLUS_1);\n    }\n\n    return collected;\n};\n\nconst _getBlueBonus = (crossed: Crossed, earned: BONUS[]): BONUS[] => {\n    const collected = [];\n\n    if (!earned.includes(BONUS.REFRESH) && _allCrossed(crossed, 4, 8)) {\n        collected.push(BONUS.REFRESH);\n    }\n    if (!earned.includes(BONUS.GREEN) && _allCrossed(crossed, 1, 5, 9)) {\n        collected.push(BONUS.GREEN);\n    }\n    if (!earned.includes(BONUS.PURPLE) && _allCrossed(crossed, 2, 6, 10)) {\n        collected.push(BONUS.PURPLE);\n    }\n    if (!earned.includes(BONUS.PLUS_1) && _allCrossed(crossed, 3, 7, 11)) {\n        collected.push(BONUS.PLUS_1);\n    }\n    if (!earned.includes(BONUS.ORANGE_5) && _allCrossed(crossed, 1, 2, 3)) {\n        collected.push(BONUS.ORANGE_5);\n    }\n    if (!earned.includes(BONUS.YELLOW) && _allCrossed(crossed, 4, 5, 6, 7)) {\n        collected.push(BONUS.YELLOW);\n    }\n    if (!earned.includes(BONUS.FOX) && _allCrossed(crossed, 8, 9, 10, 11)) {\n        collected.push(BONUS.FOX);\n    }\n\n    return collected;\n};\n\nconst _getRowBonus = (color: Color.GREEN | Color.ORANGE | Color.PURPLE, crossed: Crossed, index: number): BONUS[] => {\n    const bonus = Data[color].bonus[index];\n    return bonus ? [bonus] : [];\n};\n\nconst _getBonus = (\n    color: Color.YELLOW | Color.BLUE | Color.GREEN,\n    crossed: Crossed,\n    earned: BONUS[],\n    index: number\n): BONUS[] => {\n    if (color === Color.YELLOW) return _getYellowBonus(crossed, earned);\n    if (color === Color.BLUE) return _getBlueBonus(crossed, earned);\n    if (color === Color.GREEN) return _getRowBonus(Color.GREEN, crossed, index);\n\n    return undefined as never;\n};\n\nconst _crossableClicked = (color: Color.YELLOW | Color.BLUE | Color.GREEN, index: number, rest?: BONUS[]) =>\n    VeryCleverStore.set((state) => {\n        const crossed = Util.nextArray(state[color], index, true);\n        const earned = color === Color.GREEN ? [] : state.earnedBonus[color];\n        const collected = _getBonus(color, crossed, earned, index);\n\n        return {\n            [color]: crossed,\n            earnedBonus: {\n                ...state.earnedBonus,\n                [color]: [...earned, ...collected],\n            },\n            bonus: [...(rest || state.bonus), ...collected],\n            highlight: { color, index },\n        };\n    });\n\nconst _getNextIndex = (color: Color.GREEN | Color.ORANGE | Color.PURPLE): number =>\n    VeryCleverStore.get()[color].findIndex((v: any) => !v);\n\nconst _isCrossed = (color: Exclude<Color, Color.BLACK>, index: number): boolean =>\n    !!VeryCleverStore.get()[color][index];\n\nconst _isNextIndex = (color: Color.GREEN | Color.ORANGE | Color.PURPLE, index: number): boolean =>\n    _getNextIndex(color) === index;\n\nconst boxClicked = (color: Exclude<Color, Color.BLACK>, index: number) => {\n    if (_isCrossed(color, index)) return;\n    if (color === Color.ORANGE || color === Color.PURPLE || color === Color.GREEN) {\n        if (!_isNextIndex(color, index)) return;\n        if (color !== Color.GREEN) return VeryCleverStore.set({ selection: color });\n    }\n    return _crossableClicked(color, index);\n};\n\nconst clearSelection = () => VeryCleverStore.set({ selection: null });\n\nconst _selectValue = (color: Color.ORANGE | Color.PURPLE, value: number, rest?: BONUS[]) => {\n    const index = _getNextIndex(color);\n    const factor = color === Color.ORANGE ? Data[Color.ORANGE].factors[index] : 1;\n    VeryCleverStore.set((state) => {\n        const values = Util.nextArray(state[color], index, factor * value);\n        return {\n            [color]: values,\n            selection: null,\n            bonus: [...(rest || state.bonus), ..._getRowBonus(color, values.map(Boolean), index)],\n            highlight: { color: color, index },\n        };\n    });\n};\n\nconst selectValue = (value: number) => {\n    const { selection } = VeryCleverStore.get();\n    if (selection) {\n        _selectValue(selection, value);\n    }\n};\n\nconst _yellowPoints = (earned: BONUS[]) => {\n    const column1Points = earned.includes(BONUS.YELLOW_10) ? 10 : 0;\n    const column2Points = earned.includes(BONUS.YELLOW_14) ? 14 : 0;\n    const column3Points = earned.includes(BONUS.YELLOW_16) ? 16 : 0;\n    const column4Points = earned.includes(BONUS.YELLOW_20) ? 20 : 0;\n    return column1Points + column2Points + column3Points + column4Points;\n};\nconst _bluePoints = (crossed: Crossed) => Data[Color.BLUE].points[crossed.filter(Boolean).length - 1];\nconst _greenPoints = (crossed: Crossed): number | undefined =>\n    Data[Color.GREEN].points[crossed.filter(Boolean).length - 1];\nconst _sumPoints = (crossed: Points) => crossed.reduce((cur: number, red: number) => cur + red, 0);\n\nconst points = (state: GameState) => {\n    const yPoints = _yellowPoints(state.earnedBonus[Color.YELLOW]);\n    const bPoints = _bluePoints(state[Color.BLUE]);\n    const gPoints = _greenPoints(state[Color.GREEN]) || 0;\n    const oPoints = _sumPoints(state[Color.ORANGE]);\n    const pPoints = _sumPoints(state[Color.PURPLE]);\n    const foxPoints = Math.min(yPoints, bPoints, gPoints, oPoints, pPoints) * state.foxes;\n    return yPoints + bPoints + gPoints + oPoints + pPoints + foxPoints;\n};\n\nconst _useBonus = (bonus: BONUS, rest: BONUS[]) => {\n    if (bonus === BONUS.GREEN) _crossableClicked(Color.GREEN, _getNextIndex(Color.GREEN), rest);\n    else if (bonus === BONUS.ORANGE_4) _selectValue(Color.ORANGE, 4, rest);\n    else if (bonus === BONUS.ORANGE_5) _selectValue(Color.ORANGE, 5, rest);\n    else if (bonus === BONUS.ORANGE_6) _selectValue(Color.ORANGE, 6, rest);\n    else if (bonus === BONUS.PURPLE) _selectValue(Color.PURPLE, 6, rest);\n    else if (bonus === BONUS.FOX) VeryCleverStore.set(({ foxes }) => ({ foxes: foxes + 1, bonus: rest }));\n    else if (bonus === BONUS.PLUS_1)\n        VeryCleverStore.set(({ plusOne }) => ({ plusOne: [...plusOne, false], bonus: rest }));\n    else if (bonus === BONUS.REFRESH)\n        VeryCleverStore.set(({ reshuffle }) => ({ reshuffle: [...reshuffle, false], bonus: rest }));\n    else VeryCleverStore.set({ bonus: rest });\n};\n\nconst useBonus = () => {\n    const { bonus } = VeryCleverStore.get();\n    if (bonus) {\n        const [first, ...rest] = bonus;\n        _useBonus(first, rest);\n    }\n};\n\nconst ROUND_BONUS = [BONUS.REFRESH, BONUS.PLUS_1, BONUS.REFRESH, BONUS.ULTIMATE];\nconst _getRoundBonus = (round: number) => (ROUND_BONUS[round] ? [ROUND_BONUS[round]] : []);\n\nconst nextRound = () =>\n    VeryCleverStore.set(({ round }) => ({\n        round: round + 1,\n        bonus: _getRoundBonus(round),\n    }));\n\nexport const VeryCleverLogic = {\n    takeReshuffleBonus,\n    takePlusOneBonus,\n    boxClicked,\n    selectValue,\n    clearSelection,\n    points,\n    useBonus,\n    nextRound,\n};\n","import React, { ReactNode } from 'react';\nimport { Crossed, useVeryCleverSub } from './VeryClever-store';\nimport { VeryCleverLogic } from './VeryClever-logic';\nimport { Icon } from '../../components/icons/icon';\nimport { Util } from '../../util/util';\n\nexport type AvailableBonusProps = { children: ReactNode; crossed: Crossed; onClick: () => void };\n\nconst AvailableBonus: React.FC<AvailableBonusProps> = ({ children, crossed, onClick }) => (\n    <div className=\"grid-bonus-row\">\n        <div className=\"grid-item\">{children}</div>\n        {crossed.map((c, key) => (\n            <div key={key} className=\"grid-item\" onClick={onClick}>\n                <div className={Util.classNames('box', c && 'crossed')} />\n            </div>\n        ))}\n    </div>\n);\n\nexport const AvailableReshuffleBonus: React.FC = () => {\n    const { reshuffle } = useVeryCleverSub(({ reshuffle }) => ({ reshuffle }));\n\n    return (\n        <AvailableBonus crossed={reshuffle} onClick={VeryCleverLogic.takeReshuffleBonus}>\n            <Icon.Refresh2 />\n        </AvailableBonus>\n    );\n};\n\nexport const AvailablePlusOneBonus: React.FC = () => {\n    const { plusOne } = useVeryCleverSub(({ plusOne }) => ({ plusOne }));\n\n    return (\n        <AvailableBonus crossed={plusOne} onClick={VeryCleverLogic.takePlusOneBonus}>\n            <div className=\"content\">+1</div>\n        </AvailableBonus>\n    );\n};\n","import React from 'react';\nimport { useVeryCleverSub } from './VeryClever-store';\nimport { VeryCleverLogic } from './VeryClever-logic';\nimport { __ } from 'first-intl';\n\nexport const RoundOverview: React.FC = () => {\n    const { round } = useVeryCleverSub(({ round }) => ({ round }));\n    return (\n        <div className=\"round-overview\">\n            <span className=\"title\">\n                {__('VC.round')}\n                {round}\n            </span>\n            <button onClick={VeryCleverLogic.nextRound}>{__('VC.next')}</button>\n        </div>\n    );\n};\n","import React, { useCallback } from 'react';\nimport { VeryCleverLogic } from './VeryClever-logic';\nimport { useVeryCleverSub } from './VeryClever-store';\nimport { Color } from './data';\n\nexport type ValueSelectionOptionProps = { value: number; color: Color };\n\nexport const ValueSelectionOption: React.FC<ValueSelectionOptionProps> = ({ value, color }) => {\n    const onClick = useCallback(() => VeryCleverLogic.selectValue(value), [value]);\n    return (\n        <div className=\"value\" style={{ backgroundColor: color }} onClick={onClick}>\n            {value}\n        </div>\n    );\n};\n\ntype ValueSelectionProps = { color: Color };\n\nexport const ValueSelection: React.FC<ValueSelectionProps> = ({ color }) => {\n    const { prevVal } = useVeryCleverSub((state) => {\n        const currentIdx = color === Color.PURPLE ? state[Color.PURPLE].findIndex((v) => !v) - 1 : -1;\n        return { prevVal: currentIdx >= 0 ? state[Color.PURPLE][currentIdx] : 0 };\n    });\n\n    return (\n        <div className=\"value-selection\">\n            <div className=\"value-selection-inner\">\n                {[1, 2, 3, 4, 5, 6].slice(prevVal === 6 ? 0 : prevVal).map((v) => (\n                    <ValueSelectionOption key={v} color={color} value={v} />\n                ))}\n            </div>\n            <div className=\"value-selection-overlay\" onClick={VeryCleverLogic.clearSelection} />\n        </div>\n    );\n};\n","import React, { ReactNode } from 'react';\nimport { Icon } from '../../components/icons/icon';\nimport { BONUS, Color, CROSS } from './data';\n\nexport const FOX = '🦊';\nexport const PLUS_1 = '+1';\nexport const REFRESH = <Icon.Refresh2 />;\n\nconst CONTENT_AND_COLOR: { [bonus in BONUS]: { content: ReactNode; color: Color } } = {\n    [BONUS.FOX]: { content: FOX, color: Color.BLACK },\n    [BONUS.PLUS_1]: { content: PLUS_1, color: Color.BLACK },\n    [BONUS.REFRESH]: { content: REFRESH, color: Color.BLACK },\n    [BONUS.YELLOW]: { content: CROSS, color: Color.YELLOW },\n    [BONUS.YELLOW_10]: { content: 10, color: Color.YELLOW },\n    [BONUS.YELLOW_14]: { content: 14, color: Color.YELLOW },\n    [BONUS.YELLOW_16]: { content: 16, color: Color.YELLOW },\n    [BONUS.YELLOW_20]: { content: 20, color: Color.YELLOW },\n    [BONUS.BLUE]: { content: CROSS, color: Color.BLUE },\n    [BONUS.GREEN]: { content: CROSS, color: Color.GREEN },\n    [BONUS.ORANGE_4]: { content: 4, color: Color.ORANGE },\n    [BONUS.ORANGE_5]: { content: 5, color: Color.ORANGE },\n    [BONUS.ORANGE_6]: { content: 6, color: Color.ORANGE },\n    [BONUS.PURPLE]: { content: 6, color: Color.PURPLE },\n    [BONUS.ULTIMATE]: { content: CROSS + '/6', color: Color.BLACK },\n};\n\ntype BonusProps = { bonus: BONUS };\n\nexport const Bonus: React.FC<BonusProps> = ({ bonus }) => (\n    <div className=\"box bonus\" style={{ backgroundColor: CONTENT_AND_COLOR[bonus].color }}>\n        <div className=\"content\">{CONTENT_AND_COLOR[bonus].content}</div>\n    </div>\n);\n","import React, { ReactNode, useCallback } from 'react';\nimport { Highlight, useVeryCleverSub } from './VeryClever-store';\nimport { Util } from '../../util/util';\nimport { VeryCleverLogic } from './VeryClever-logic';\nimport { Color } from './data';\n\nconst _isHighLight = (highlight: null | Highlight, color: Color, index: number): boolean => {\n    if (!highlight) return false;\n    else return highlight.color === color && highlight.index === index;\n};\n\ntype BoxProps = { content: ReactNode; color: Exclude<Color, Color.BLACK>; gePrefix?: boolean; index: number };\n\nexport const Box = ({ content, color, gePrefix, index }: BoxProps) => {\n    const { crossed, newContent, highlight } = useVeryCleverSub((state) => {\n        const highlight = _isHighLight(state.highlight, color, index);\n        switch (color) {\n            case Color.ORANGE:\n            case Color.PURPLE:\n                return { crossed: false, newContent: state[color][index], highlight };\n            default:\n                return { crossed: state[color][index], highlight };\n        }\n    });\n\n    const onClick = useCallback(() => {\n        VeryCleverLogic.boxClicked(color, index);\n    }, [color, index]);\n\n    return (\n        <div\n            onClick={onClick}\n            className={Util.classNames('box', crossed && 'crossed', highlight && 'highlight')}\n            style={{ color, borderColor: color }}>\n            {gePrefix ? (\n                <div className=\"content\">\n                    &ge;\n                    {content}\n                </div>\n            ) : newContent ? (\n                <div className=\"picked\">{newContent}</div>\n            ) : (\n                <div className=\"content\">{content}</div>\n            )}\n        </div>\n    );\n};\n","import React, { ReactNode } from 'react';\nimport { Bonus } from './Bonus';\nimport { Util } from '../../util/util';\nimport { Box } from './Box';\nimport { BONUS, Color } from './data';\n\ntype BoxRowProps = {\n    color: Exclude<Color, Color.BLACK>;\n    contents: ReactNode[];\n    className?: string;\n    gePrefix?: boolean;\n    bonusList: Array<BONUS | undefined>;\n    points?: number[];\n};\n\nexport const BoxRow: React.FC<BoxRowProps> = ({ color, contents, className, gePrefix, bonusList, points = [] }) => (\n    <div className={Util.classNames('grid-row', className)} style={{ borderColor: color }}>\n        {contents.map((content, index) => {\n            const point = points[index];\n            const bonus = bonusList[index];\n            return (\n                <div key={index} className=\"grid-item\">\n                    <Box content={content} color={color} gePrefix={gePrefix} index={index} />\n                    {point && (\n                        <div className=\"points\" style={{ backgroundColor: color }}>\n                            {point}\n                        </div>\n                    )}\n                    {bonus && <Bonus bonus={bonus} />}\n                </div>\n            );\n        })}\n    </div>\n);\n","import React, { Fragment } from 'react';\nimport { Bonus } from './Bonus';\nimport { Util } from '../../util/util';\nimport { Box } from './Box';\nimport { Icon } from '../../components/icons/icon';\nimport { BONUS, Color } from './data';\n\ntype BoxGridProps = {\n    color: Exclude<Color, Color.BLACK>;\n    contents: Array<string | number>;\n    rowBonusList: BONUS[];\n    columnBonusList: BONUS[];\n};\n\nconst array6 = Util.array(6);\n\nexport const BoxGrid = ({ color, contents, rowBonusList, columnBonusList }: BoxGridProps) => (\n    <div className=\"grid-box-outer\">\n        <div className=\"grid-box\" style={{ borderColor: color, color }}>\n            {Util.array(contents.length / 4).map((_, row) => (\n                <Fragment key={row}>\n                    {contents.slice(row * 4, row * 4 + 4).map((content, key) => (\n                        <div className=\"grid-item\" key={key}>\n                            <Box key={key} content={content} color={color} index={4 * row + key} />\n                        </div>\n                    ))}\n                    <div className=\"grid-item grid-arrow\">\n                        <Icon.ArrowRight />\n                    </div>\n                    <div className=\"grid-item\">\n                        <Bonus bonus={rowBonusList[row]} />\n                    </div>\n                </Fragment>\n            ))}\n            {array6.map((_, i) => (\n                <div className=\"grid-item grid-arrow\" key={i}>\n                    {i < columnBonusList.length ? (\n                        i === 4 ? (\n                            <Icon.ArrowRight className=\"rotate-45\" />\n                        ) : (\n                            <Icon.ArrowDown />\n                        )\n                    ) : null}\n                </div>\n            ))}\n            {}\n            {columnBonusList.map((bonus, i) => (\n                <Fragment key={i}>\n                    {i === 4 && <div className=\"grid-item\" />}\n                    <div className=\"grid-item\">\n                        <Bonus bonus={bonus} />\n                    </div>\n                </Fragment>\n            ))}\n        </div>\n    </div>\n);\n","import React from 'react';\nimport { useVeryCleverSub } from './VeryClever-store';\nimport { VeryCleverLogic } from './VeryClever-logic';\nimport { __ } from 'first-intl';\n\nexport const Points: React.FC = () => {\n    const { points } = useVeryCleverSub((state) => ({ points: VeryCleverLogic.points(state) }));\n\n    return (\n        <div className=\"points-total\">\n            {__('VC.points')}\n            {points}\n        </div>\n    );\n};\n","import React from 'react';\nimport { Bonus } from './Bonus';\nimport { BONUS } from './data';\nimport { VeryCleverLogic } from './VeryClever-logic';\n\nexport type ActivatedBonusProps = { earned: BONUS[] };\n\nexport const ActivatedBonus: React.FC<ActivatedBonusProps> = ({ earned }) =>\n    earned.length ? (\n        <div className=\"bonus-splash\" onClick={VeryCleverLogic.useBonus}>\n            <div className=\"bonus-splash-overlay\" />\n            <div className=\"bonus-splash-inner\">\n                {earned.map((bonus: BONUS, index: number) => (\n                    <Bonus bonus={bonus} key={index} />\n                ))}\n            </div>\n        </div>\n    ) : null;\n","import React from 'react';\nimport { useVeryCleverSub } from './VeryClever-store';\nimport { AvailablePlusOneBonus, AvailableReshuffleBonus } from './AvailableBonus';\nimport { RoundOverview } from './RoundOverview';\nimport { ValueSelection } from './ValueSelection';\nimport { Color, Data } from './data';\nimport { BoxRow } from './BoxRow';\nimport { BoxGrid } from './BoxGrid';\nimport { Points } from './Points';\nimport { ActivatedBonus } from './ActivatedBonus';\n\nexport const VeryCleverInner: React.FC = () => {\n    const { selection, bonus } = useVeryCleverSub(({ selection, bonus }) => ({ selection, bonus }));\n    return (\n        <div className=\"very-clever-outer\">\n            <div className=\"very-clever\">\n                <RoundOverview />\n                <AvailableReshuffleBonus />\n                <AvailablePlusOneBonus />\n                <BoxGrid\n                    color={Color.YELLOW}\n                    contents={Data[Color.YELLOW].contents}\n                    rowBonusList={Data[Color.YELLOW].rowBonus}\n                    columnBonusList={Data[Color.YELLOW].columnBonus}\n                />\n                <BoxGrid\n                    color={Color.BLUE}\n                    contents={Data[Color.BLUE].contents}\n                    rowBonusList={Data[Color.BLUE].rowBonus}\n                    columnBonusList={Data[Color.BLUE].columnBonus}\n                />\n                <BoxRow\n                    color={Color.GREEN}\n                    contents={Data[Color.GREEN].contents}\n                    gePrefix\n                    bonusList={Data[Color.GREEN].bonus}\n                    points={Data[Color.GREEN].points}\n                />\n                <BoxRow\n                    color={Color.ORANGE}\n                    contents={Data[Color.ORANGE].contents}\n                    bonusList={Data[Color.ORANGE].bonus}\n                />\n                <BoxRow\n                    color={Color.PURPLE}\n                    contents={Data[Color.PURPLE].contents}\n                    className=\"growing\"\n                    bonusList={Data[Color.PURPLE].bonus}\n                />\n                <Points />\n                {selection && <ValueSelection color={selection} />}\n                {bonus && <ActivatedBonus earned={bonus} />}\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport { ErrorBoundary } from '../../components/ErrorBoundary';\nimport { VeryCleverInner } from './VeryCleverInner';\nimport { VeryCleverStore } from './VeryClever-store';\nimport { Footer } from '../../footer/Footer';\nimport { FooterUndo } from '../../footer/FooterUndo';\nimport { FooterRestart } from '../../footer/FooterRestart';\n\nconst VeryCleverFooter: React.FC = () => (\n    <Footer>\n        <FooterUndo onClick={VeryCleverStore.undo} />\n        <FooterRestart onClick={VeryCleverStore.reset} />\n    </Footer>\n);\n\nexport const VeryClever: React.FC = () => (\n    <ErrorBoundary fix={VeryCleverStore.reset}>\n        <VeryCleverInner />\n        <VeryCleverFooter />\n    </ErrorBoundary>\n);\n","import { Persistore } from 'persistore';\nimport { createStore } from 'react-use-sub';\n\nexport type CodePoint = 1 | 2 | 3 | 4;\nexport type Code = [CodePoint, CodePoint, CodePoint];\nexport type CodeWords = { first: string; second: string; third: string };\nexport type Results = { losses: number; wins: number };\nexport type Knowledge = [string[], string[], string[], string[]];\nconst NoKnowledge: Knowledge = [[], [], [], []];\nexport type PlayerState = { knowledge: Knowledge; code?: Code; guessed?: Code; codeWords?: CodeWords; round: number };\n\nexport type DecryptoState = { results: Results; me: PlayerState; enemy: PlayerState };\nconst initialDecryptoState: DecryptoState = {\n    results: { losses: 0, wins: 0 },\n    me: { knowledge: NoKnowledge, round: 0 },\n    enemy: { knowledge: NoKnowledge, round: 0 },\n};\n\nconst _key = 'decrypto';\n\nconst _fetch = (): DecryptoState => {\n    try {\n        const raw = Persistore.get(_key);\n        if (raw) {\n            return JSON.parse(raw);\n        }\n    } catch (e) {\n        // do nothing\n    }\n    return initialDecryptoState;\n};\nconst _persist = (state: DecryptoState) => Persistore.set(_key, JSON.stringify(state));\n\nconst [useDecryptoSub, Store] = createStore<DecryptoState>(_fetch());\nexport { useDecryptoSub };\n\nconst set: typeof Store['set'] = (update) => {\n    Store.set(update);\n    _persist(Store.get());\n};\n\nconst reset = () => set(initialDecryptoState);\n\nexport const DecryptoStore = { set, reset };\n","import React, { useState } from 'react';\nimport { FormInput } from '../../components/form/input';\nimport { FormData, Morfi } from 'morfi';\nimport { Code } from './Decrypto-store';\nimport { Icon } from '../../components/icons/icon';\nimport { __ } from 'first-intl';\n\ntype CodeWords = { first: string; second: string; third: string };\nconst initialCodeWords = { first: '', second: '', third: '' };\nconst initialCodeWordsData = { values: initialCodeWords, errors: {} };\nconst { Form, Fields } = Morfi.create<CodeWords>(initialCodeWords);\nconst codeWordValidator = (v?: string) => {\n    if (!v || !v.trim()) return { id: 'DECRYPTO.codeWord.required' };\n    try {\n        btoa(v);\n    } catch (e) {\n        return { id: 'DECRYPTO.codeWord.invalid' };\n    }\n};\nconst codeWordValidation = {\n    first: { onChange: codeWordValidator },\n    second: { onChange: codeWordValidator },\n    third: { onChange: codeWordValidator },\n};\n\nexport type CodeWordsSelectionProps = { onSubmit: (codeWords: CodeWords) => void; code?: Code };\n\nexport const CodeWordsSelection: React.FC<CodeWordsSelectionProps> = ({ onSubmit, code }) => {\n    const [codeWordsData, setCodeWordsData] = useState<FormData<CodeWords>>(initialCodeWordsData);\n    return (\n        <div className=\"code-words-selection\">\n            {code && (\n                <div className=\"code\">\n                    <span>{code.join('.')}</span>\n                </div>\n            )}\n            <Form onChange={setCodeWordsData} data={codeWordsData} onSubmit={onSubmit} validation={codeWordValidation}>\n                <FormInput Field={Fields.first} />\n                <FormInput Field={Fields.second} />\n                <FormInput Field={Fields.third} />\n                <button type=\"submit\" disabled={Morfi.hasErrors(codeWordsData)}>\n                    <Icon.Mask />\n                    <div className=\"description\">{__('DECRYPTO.btn.submit')}</div>\n                </button>\n            </Form>\n        </div>\n    );\n};\n","import React, { ReactNode, useCallback, useState } from 'react';\n\nexport type SelectOverlayValueProps<T> = {\n    value: T;\n    children: ReactNode;\n    onChange: (value: T) => void;\n    close: () => void;\n};\n\nexport const SelectOverlayValue = <T extends any>({ value, children, onChange, close }: SelectOverlayValueProps<T>) => {\n    const onClick = useCallback(() => {\n        onChange(value);\n        close();\n    }, [onChange, close, value]);\n    return (\n        <div className=\"value\" onClick={onClick}>\n            {children}\n        </div>\n    );\n};\n\nexport type SelectOverlayOption<T> = { value: T; node: ReactNode };\nexport type SelectOverlayProps<T> = {\n    children: ReactNode;\n    options: SelectOverlayOption<T>[];\n    onChange: (value: T) => void;\n};\n\nexport const SelectOverlay = <T extends any>({ children, options, onChange }: SelectOverlayProps<T>) => {\n    const [isOpen, setOpen] = useState<boolean>(false);\n\n    const close = useCallback(() => setOpen(false), []);\n    const open = useCallback(() => setOpen(true), []);\n\n    return (\n        <>\n            <span onClick={open}>{children}</span>\n            {isOpen && (\n                <div className=\"select-overlay\">\n                    <div className=\"select-overlay-inner\">\n                        {options.map(({ value, node }, index) => (\n                            <SelectOverlayValue key={index} close={close} onChange={onChange} value={value}>\n                                {node}\n                            </SelectOverlayValue>\n                        ))}\n                    </div>\n                    <div className=\"select-overlay-outer\" onClick={close} />\n                </div>\n            )}\n        </>\n    );\n};\n","import React, { useCallback, useMemo, useState } from 'react';\nimport { Code, CodePoint, CodeWords } from './Decrypto-store';\nimport { SelectOverlay, SelectOverlayOption } from '../../components/form/SelectOverlay';\nimport { Icon } from '../../components/icons/icon';\nimport { __ } from 'first-intl';\nimport { Util } from '../../util/util';\n\nexport type GuessCodeProps = { onSubmit: (guessed: Code) => void; codeWords: CodeWords };\nconst GuessOptions: SelectOverlayOption<CodePoint>[] = [\n    { value: 1 as CodePoint, node: 1 },\n    { value: 2 as CodePoint, node: 2 },\n    { value: 3 as CodePoint, node: 3 },\n    { value: 4 as CodePoint, node: 4 },\n];\n\nconst _getDuplicated = (first?: CodePoint, second?: CodePoint, third?: CodePoint): number | undefined => {\n    if (first && first === second) return first;\n    if (third && (third === second || third === first)) return third;\n};\nconst _getAllDuplicated = (first?: CodePoint, second?: CodePoint, third?: CodePoint): [boolean, boolean, boolean] => {\n    const duplicate = _getDuplicated(first, second, third);\n    return duplicate ? [duplicate === first, duplicate === second, duplicate === third] : [false, false, false];\n};\n\nexport const GuessCode: React.FC<GuessCodeProps> = ({ onSubmit, codeWords }) => {\n    const [first, setFirst] = useState<CodePoint | undefined>();\n    const [second, setSecond] = useState<CodePoint | undefined>();\n    const [third, setThird] = useState<CodePoint | undefined>();\n    const duplicated = _getAllDuplicated(first, second, third);\n\n    const wasGuessed = useMemo<boolean>(\n        () => !!(first && second && third && first !== second && first !== third && second !== third),\n        [first, second, third]\n    );\n\n    const onGuessedMe = useCallback(() => {\n        onSubmit([first!, second!, third!]);\n    }, [onSubmit, first, second, third]);\n\n    return (\n        <div className=\"guessing\">\n            <div className=\"guess\">\n                <div className=\"code-word\">{codeWords.first}</div>\n                <SelectOverlay options={GuessOptions} onChange={setFirst}>\n                    <span className={Util.classNames('code-guess', duplicated[0] && 'invalid')}>{first ?? '?'}</span>\n                </SelectOverlay>\n            </div>\n            <div className=\"guess\">\n                <div className=\"code-word\">{codeWords.second}</div>\n                <SelectOverlay options={GuessOptions} onChange={setSecond}>\n                    <span className={Util.classNames('code-guess', duplicated[1] && 'invalid')}>{second ?? '?'}</span>\n                </SelectOverlay>\n            </div>\n            <div className=\"guess\">\n                <div className=\"code-word\">{codeWords.third}</div>\n                <SelectOverlay options={GuessOptions} onChange={setThird}>\n                    <span className={Util.classNames('code-guess', duplicated[2] && 'invalid')}>{third ?? '?'}</span>\n                </SelectOverlay>\n            </div>\n            {wasGuessed && (\n                <button onClick={onGuessedMe} type=\"button\">\n                    <Icon.Key />\n                    <div className=\"description\">{__('DECRYPTO.btn.decode')}</div>\n                </button>\n            )}\n        </div>\n    );\n};\n","import React from 'react';\nimport { Code, CodeWords } from './Decrypto-store';\nimport { Util } from '../../util/util';\n\nexport type GuessResultProps = { codeWords: CodeWords; code: Code; guessed: Code };\n\nexport const GuessResult: React.FC<GuessResultProps> = ({ codeWords, code, guessed }) => {\n    const firstIncorrect = guessed[0] !== code[0];\n    const secondIncorrect = guessed[1] !== code[1];\n    const thirdIncorrect = guessed[2] !== code[2];\n\n    return (\n        <div className=\"guessed\">\n            <div className=\"guess\">\n                <div className=\"code-word\">{codeWords.first}</div>\n                <span className={Util.classNames('code-guess', firstIncorrect ? 'invalid' : 'valid')}>\n                    {guessed[0]}\n                </span>\n                {firstIncorrect && <span className=\"code-was\">{code[0]}</span>}\n            </div>\n            <div className=\"guess\">\n                <div className=\"code-word\">{codeWords.second}</div>\n                <span className={Util.classNames('code-guess', secondIncorrect ? 'invalid' : 'valid')}>\n                    {guessed[1]}\n                </span>\n                {secondIncorrect && <span className=\"code-was\">{code[1]}</span>}\n            </div>\n            <div className=\"guess\">\n                <div className=\"code-word\">{codeWords.third}</div>\n                <span className={Util.classNames('code-guess', thirdIncorrect ? 'invalid' : 'valid')}>\n                    {guessed[2]}\n                </span>\n                {thirdIncorrect && <span className=\"code-was\">{code[2]}</span>}\n            </div>\n        </div>\n    );\n};\n","import React, { useMemo } from 'react';\nimport { Knowledge } from './Decrypto-store';\n\nexport type KnowledgeViewProps = { knowledge: Knowledge };\n\nexport const KnowledgeView: React.FC<KnowledgeViewProps> = ({ knowledge }) => {\n    const rows = useMemo(() => {\n        const result = [];\n        const max = knowledge.reduce((red, cur) => Math.max(red, cur.length), 0);\n        for (let i = 0; i < max; i++) {\n            result.push(\n                <tr key={i}>\n                    {knowledge.map((k, idx) => (\n                        <td key={idx}>{k[i]}</td>\n                    ))}\n                </tr>\n            );\n        }\n        return result;\n    }, [knowledge]);\n\n    return (\n        <div className=\"knowledge\">\n            <table>\n                <thead>\n                    <tr>\n                        <td>1</td>\n                        <td>2</td>\n                        <td>3</td>\n                        <td>4</td>\n                    </tr>\n                </thead>\n                <tbody>{rows}</tbody>\n            </table>\n        </div>\n    );\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport QRCode from 'qrcode';\n\ntype ColorOption = { dark?: string; light?: string };\nconst transparent = '#0000';\n// we always choose transparent bg if any color of the qr code itself was chosen,\n// because the bg can be better regulated by the outer css styles\nexport const QrCodeColorOptions = {\n    white: { dark: '#FFF', light: transparent },\n    black: { dark: '#000', light: transparent },\n};\n\nexport type QrCodeOptions = { margin?: number; width?: number; color?: ColorOption };\n\ntype QrCodeProps = { info: string; options: QrCodeOptions };\n\nexport const QrCode: React.FC<QrCodeProps> = ({ info, options }) => {\n    const [error, setError] = useState<Error | undefined>();\n    const canvas = useRef<HTMLCanvasElement | null>(null);\n\n    useEffect(() => {\n        QRCode.toCanvas(canvas.current, info, options, (error) => {\n            if (error) setError(error);\n        });\n    }, [info, options]);\n\n    if (error) return <>Ups, something went wrong (Code: QR1)</>;\n\n    return <canvas ref={canvas} />;\n};\n","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport QrCode from 'qrcode-reader';\nimport { Code, CodeWords } from './Decrypto-store';\nimport { __ } from 'first-intl';\n\nconst openStream = (): Promise<MediaStream> =>\n    navigator.mediaDevices.getUserMedia({ audio: false, video: { facingMode: 'environment' } });\n\ntype QrCodeScannerProps = { onInput: (input: { code: Code; codeWords: CodeWords }) => void; prepareClose: boolean };\n\nexport const QrCodeScanner: React.FC<QrCodeScannerProps> = ({ onInput, prepareClose }) => {\n    const [permissionDenied, setPermissionDenied] = useState(false);\n    const [error, setError] = useState<Error | undefined>();\n    const [stream, setStream] = useState<MediaStream | undefined>();\n    const streamRef = useRef<MediaStream | undefined>();\n    streamRef.current = stream;\n    const { width, height } = useMemo(\n        () => ({\n            width: window.innerWidth,\n            height: window.innerHeight,\n        }),\n        []\n    );\n    const canvas = useRef<HTMLCanvasElement | null>(null);\n    const video = useRef<HTMLVideoElement | null>(null);\n    const isRunning = useRef(false);\n    const createSnap = useRef(() => {});\n\n    const clearStream = useCallback((): void => {\n        streamRef.current!.getTracks().forEach((track) => streamRef.current!.removeTrack(track));\n        video.current!.srcObject = null;\n        video.current!.src = '';\n    }, []);\n\n    useEffect(() => {\n        openStream()\n            .then(setStream)\n            .catch((e) => {\n                if (e.name === 'NotAllowedError') {\n                    // if encountered first time show the user the warning and consequently fail by trying to open\n                    // the media stream, because that helps to notify him that we want to open the stream.\n                    setPermissionDenied(true);\n                } else {\n                    // clear the interval, because will not be solved soon\n                    setError(e);\n                }\n            });\n    }, [clearStream]);\n\n    useEffect(() => {\n        if (prepareClose) {\n            video.current!.pause(); // eslint-disable-line react-hooks/exhaustive-deps\n            clearStream();\n        }\n    }, [prepareClose, clearStream]);\n\n    const startScanning = useCallback((): void => {\n        window.requestAnimationFrame(createSnap.current);\n    }, []);\n\n    useEffect(() => {\n        const videoElem = video.current!;\n        if (stream && !isRunning.current) {\n            isRunning.current = true;\n            if ('srcObject' in videoElem) {\n                videoElem.srcObject = stream;\n            } else {\n                // Avoid using this in new browsers, as it is going away.\n                videoElem!.src = window.URL.createObjectURL(stream);\n            }\n            // we have to set those attributes to empty strings, to ensure that\n            // the video displays anything on safari ios\n            videoElem.setAttribute('autoplay', '');\n            videoElem.setAttribute('muted', '');\n            videoElem.setAttribute('playsinline', '');\n            startScanning();\n        }\n    }, [startScanning, stream]);\n\n    const handleQrCodeResult = useCallback(\n        (error: any, result: { result: string }) => {\n            if (error || prepareClose) return startScanning();\n            try {\n                const { code, codeWords } = JSON.parse(atob(result.result));\n                if (\n                    code.every((p: any) => typeof p === 'number') &&\n                    typeof codeWords.first === 'string' &&\n                    typeof codeWords.second === 'string' &&\n                    typeof codeWords.third === 'string'\n                ) {\n                    onInput({ code, codeWords });\n                }\n            } catch (e) {\n                // do nothing\n            }\n            // in every case we need to start scanning again, because\n            // the video stream needs to be active to get closed accordingly\n            // else the browser does not know the stream can be removed\n            startScanning();\n        },\n        [onInput, startScanning, prepareClose]\n    );\n\n    createSnap.current = useCallback((): void => {\n        const context = canvas.current && canvas.current.getContext('2d');\n\n        if (context) {\n            const qr = new QrCode();\n            (context as any).drawImage(video.current, 0, 0, width, height, 0, 0, width, height);\n            const imageData = context.getImageData(0, 0, width, height);\n            qr.callback = handleQrCodeResult;\n            qr.decode(imageData);\n        }\n    }, [handleQrCodeResult, height, width]);\n\n    if (permissionDenied) return <>{__('media.camAccess.required')}</>;\n    if (error) return <>Ups, something went wrong (Code: QR2)</>;\n\n    return (\n        <div className=\"scanner\">\n            {stream && (\n                <div>\n                    <video ref={video} />\n                    <canvas width={width} height={height} ref={canvas} />\n                </div>\n            )}\n        </div>\n    );\n};\n","import React from 'react';\nimport { createStore } from 'react-use-sub';\nimport { QrCode, QrCodeColorOptions } from './QrCode';\nimport { QrCodeScanner } from './QrCodeScanner';\nimport { Code, CodeWords, DecryptoStore } from './Decrypto-store';\nimport { Icon } from '../../components/icons/icon';\n\ntype QrCodeState = { info: string | null; scanning: boolean; closingScanner: boolean };\nconst initialQrCodeState = { info: null, scanning: false, closingScanner: false };\n\nconst [useQrCodeInfo, qrCodeInfoStore] = createStore<QrCodeState>(initialQrCodeState);\n\nexport const closeQrCodeOverlay = () => {\n    const { closingScanner, scanning } = qrCodeInfoStore.get();\n    if (closingScanner) return;\n    else if (scanning) {\n        qrCodeInfoStore.set({ closingScanner: true });\n        // we need to close the scanner in two different phases\n        // 1. notify the scanner to clear the active video stream\n        // 2. remove the HTML elements by closing the React component\n        // this has to be done with a certain delay, which is quite high, but\n        // the user will be displayed immediate feedback by hiding the HTML elements\n        setTimeout(() => qrCodeInfoStore.set(initialQrCodeState), 1000);\n    } else {\n        qrCodeInfoStore.set(initialQrCodeState);\n    }\n};\nexport const openQrCodeInfoOverlay = (info: string) => qrCodeInfoStore.set({ info });\nexport const openQrCodeScannerOverlay = () => qrCodeInfoStore.set({ scanning: true });\n\nconst _onScanInput = ({ code, codeWords }: { code: Code; codeWords: CodeWords }) => {\n    closeQrCodeOverlay();\n    DecryptoStore.set(({ enemy }) => ({ enemy: { ...enemy, code, codeWords, round: enemy.round + 1 } }));\n};\n\nexport const QrCodeOverlay: React.FC = () => {\n    const { info, scanning, closingScanner } = useQrCodeInfo((state) => state);\n    const width = Math.min(window.innerWidth, window.innerHeight);\n\n    return info ? (\n        <div className=\"qr-code\">\n            <QrCode info={info} options={{ color: QrCodeColorOptions.black, width }} />\n            <button onClick={closeQrCodeOverlay}>\n                <Icon.Times />\n            </button>\n        </div>\n    ) : scanning ? (\n        <div className=\"qr-scanning\" style={closingScanner ? { display: 'none' } : undefined}>\n            <QrCodeScanner onInput={_onScanInput} prepareClose={closingScanner} />\n            <button onClick={closeQrCodeOverlay}>\n                <Icon.Times />\n            </button>\n        </div>\n    ) : null;\n};\n","import React, { useCallback } from 'react';\nimport { Code, CodeWords } from './Decrypto-store';\nimport { openQrCodeInfoOverlay } from './QrCodeOverlay';\nimport { Icon } from '../../components/icons/icon';\nimport { __ } from 'first-intl';\n\nexport type ShowQrCodeProps = { code: Code; codeWords: CodeWords };\n\nexport const ShowQrCode: React.FC<ShowQrCodeProps> = ({ codeWords, code }) => {\n    const onClick = useCallback(() => openQrCodeInfoOverlay(btoa(JSON.stringify({ code, codeWords }))), [\n        code,\n        codeWords,\n    ]);\n\n    return (\n        <button className=\"open-qr-code\" onClick={onClick} type=\"button\">\n            <Icon.QrCode />\n            <div className=\"description\">{__('DECRYPTO.btn.transfer')}</div>\n        </button>\n    );\n};\n","import React from 'react';\nimport { Util } from '../../util/util';\nimport { Code, CodeWords, DecryptoStore, useDecryptoSub } from './Decrypto-store';\nimport { CodeWordsSelection } from './CodeWordsSelection';\nimport { GuessCode } from './GuessCode';\nimport { GuessResult } from './GuessResult';\nimport { KnowledgeView } from './KnowledgeView';\nimport { ShowQrCode } from './ShowQrCode';\nimport { __ } from 'first-intl';\n\nconst _randomCode = (): Code => Util.arrayShuffle([1, 2, 3, 4]).slice(0, 3) as Code;\nconst _generateCode = () =>\n    DecryptoStore.set(({ me }) => ({\n        me: { ...me, code: _randomCode(), codeWords: undefined, guessed: undefined, round: me.round + 1 },\n    }));\nconst _setCodeWords = (codeWords: CodeWords) => DecryptoStore.set(({ me }) => ({ me: { ...me, codeWords } }));\nconst _setGuessed = (guessed: Code) =>\n    DecryptoStore.set(({ me, results: { wins, losses } }) => {\n        const { codeWords, code } = me;\n        const { first, second, third } = codeWords!;\n        const wrongGuess = guessed[0] !== code![0] || guessed[1] !== code![1] || guessed[2] !== code![2];\n        const knowledge: any = [...me.knowledge].map((arr) => [...arr]);\n        knowledge[code![0] - 1].push(first);\n        knowledge[code![1] - 1].push(second);\n        knowledge[code![2] - 1].push(third);\n        const updatedMe = { me: { ...me, knowledge, guessed } };\n        return wrongGuess ? { ...updatedMe, results: { wins, losses: losses + 1 } } : updatedMe;\n    });\n\nexport const DecryptoMe: React.FC = () => {\n    const { code, codeWords, guessed, knowledge, round } = useDecryptoSub(({ me }) => me);\n    const disableGeneration = useDecryptoSub(({ enemy: { guessed, round }, me, results: { wins, losses } }) => {\n        const finishedEnemyRound = guessed ? round : round - 1;\n        const meRound = me.round;\n        const lostOrWon = losses > 1 || wins > 1;\n        return lostOrWon || (meRound > 0 && finishedEnemyRound !== meRound);\n    });\n\n    const noCodeOrFinishedGuessing = !code || !!(code && codeWords && guessed);\n\n    return (\n        <>\n            {round > 0 && (\n                <div className=\"round\">\n                    {__('DECRYPTO.round')} {round}\n                </div>\n            )}\n            {noCodeOrFinishedGuessing && (\n                <div className=\"generate-code\">\n                    <button onClick={_generateCode} type=\"button\" disabled={disableGeneration}>\n                        ?.?.?\n                        <div className=\"description\">{__('DECRYPTO.btn.generate')}</div>\n                    </button>\n                </div>\n            )}\n            {code && !codeWords && <CodeWordsSelection onSubmit={_setCodeWords} code={code} />}\n            {code && codeWords && !guessed && <GuessCode onSubmit={_setGuessed} codeWords={codeWords} />}\n            {code && codeWords && guessed && <GuessResult codeWords={codeWords} code={code} guessed={guessed} />}\n            {code && codeWords && <ShowQrCode code={code} codeWords={codeWords} />}\n            <KnowledgeView knowledge={knowledge} />\n        </>\n    );\n};\n","import React, { useCallback } from 'react';\nimport { Code, DecryptoStore, PlayerState, useDecryptoSub } from './Decrypto-store';\nimport { GuessCode } from './GuessCode';\nimport { GuessResult } from './GuessResult';\nimport { KnowledgeView } from './KnowledgeView';\nimport { openQrCodeScannerOverlay } from './QrCodeOverlay';\nimport { Icon } from '../../components/icons/icon';\nimport { __ } from 'first-intl';\n\nconst _setEnemy = (meUpdates: Partial<PlayerState>) =>\n    DecryptoStore.set(({ enemy }) => ({ enemy: { ...enemy, ...meUpdates } }));\nconst _setGuessed = (guessed: Code) =>\n    DecryptoStore.set(({ enemy, results: { wins, losses } }) => {\n        const { codeWords, code } = enemy;\n        const { first, second, third } = codeWords!;\n        const correctGuess = guessed[0] === code![0] && guessed[1] === code![1] && guessed[2] === code![2];\n        const knowledge: any = [...enemy.knowledge].map((arr) => [...arr]);\n        knowledge[code![0] - 1].push(first);\n        knowledge[code![1] - 1].push(second);\n        knowledge[code![2] - 1].push(third);\n        const updatedEnemy = { enemy: { ...enemy, knowledge, guessed } };\n        return correctGuess ? { ...updatedEnemy, results: { wins: wins + 1, losses } } : updatedEnemy;\n    });\n\nexport const DecryptoEnemy: React.FC = () => {\n    const { code, codeWords, guessed, knowledge, round } = useDecryptoSub(({ enemy }) => enemy);\n    const disableCatch = useDecryptoSub(({ me: { round, codeWords }, enemy, results: { wins, losses } }) => {\n        const readyMeRound = codeWords ? round : round - 1;\n        return readyMeRound <= enemy.round;\n    });\n\n    const onClick = useCallback(() => {\n        _setEnemy({ code: undefined, codeWords: undefined, guessed: undefined });\n        openQrCodeScannerOverlay();\n    }, []);\n\n    const noCodeOrFinishedGuessing = !code || !!(code && codeWords && guessed);\n\n    return (\n        <>\n            {round > 0 && (\n                <div className=\"round\">\n                    {__('DECRYPTO.round')} {round}\n                </div>\n            )}\n            {noCodeOrFinishedGuessing && (\n                <div className=\"scan-code\">\n                    <button onClick={onClick} type=\"button\" disabled={disableCatch}>\n                        <Icon.Glasses />\n                        <div className=\"description\">{__('DECRYPTO.btn.catch')}</div>\n                    </button>\n                </div>\n            )}\n            {code && codeWords && !guessed && <GuessCode onSubmit={_setGuessed} codeWords={codeWords} />}\n            {code && codeWords && guessed && <GuessResult codeWords={codeWords} code={code} guessed={guessed} />}\n            <KnowledgeView knowledge={knowledge} />\n        </>\n    );\n};\n","import React, { useCallback, MouseEvent } from 'react';\nimport { createStore } from 'react-use-sub';\nimport { UrlUtil } from './util/url';\nimport { App } from './App';\nimport { Again } from './games/Again';\nimport { MissionControl } from './mission/MissionControl';\nimport { SpadeIsTrump } from './games/SpadeIsTrump';\nimport { VeryClever } from './games/VeryClever';\nimport { Decrypto } from './games/Decrypto';\n\nexport enum NavLoc {\n    AGAIN = 'again',\n    DECRYPTO = 'decrypto',\n    MISSION = 'mission',\n    SIT = 'spade-is-trump',\n    VERY_CLEVER = 'very-clever',\n}\nconst _getCurrentNavLoc = (): NavLoc | null => {\n    const { loc } = UrlUtil.locationSearchToQuery(window.location.search);\n    return Object.values(NavLoc).includes(loc) ? loc : null;\n};\n\nconst [useNavSub, NavStore] = createStore<{ loc: NavLoc | null }>({ loc: _getCurrentNavLoc() });\n\nconst Root: React.FC = () => {\n    const loc = useNavSub(({ loc }) => loc);\n\n    if (loc === NavLoc.AGAIN) return <Again />;\n    if (loc === NavLoc.DECRYPTO) return <Decrypto />;\n    if (loc === NavLoc.MISSION) return <MissionControl />;\n    if (loc === NavLoc.SIT) return <SpadeIsTrump />;\n    if (loc === NavLoc.VERY_CLEVER) return <VeryClever />;\n\n    return <App />;\n};\n\nconst onLocationChange = () => {\n    const loc = _getCurrentNavLoc();\n    if (loc !== NavStore.get().loc) NavStore.set({ loc });\n};\nwindow.addEventListener('popstate', onLocationChange);\n\nconst Link: React.FC<{ children: React.ReactNode; loc: NavLoc }> = ({ children, loc }) => {\n    const href = '?loc=' + loc;\n\n    const onClick = useCallback(\n        (event: MouseEvent<HTMLAnchorElement>) => {\n            event.preventDefault();\n            NavStore.set({ loc });\n            window.history.pushState(null, loc, href);\n        },\n        [loc, href]\n    );\n\n    return (\n        <a href={href} onClick={onClick}>\n            {children}\n        </a>\n    );\n};\n\nexport const AppNavigation = { Root, Link };\n","import React, { useCallback, useState } from 'react';\nimport { Util } from '../../util/util';\nimport { useDecryptoSub } from './Decrypto-store';\nimport { DecryptoMe } from './DecryptoMe';\nimport { QrCodeOverlay } from './QrCodeOverlay';\nimport { DecryptoEnemy } from './DecryptoEnemy';\nimport { Icon } from '../../components/icons/icon';\nimport { NotifyResult } from './NotifyResult';\n\nexport const DecryptoInternal: React.FC = () => {\n    const [showEnemy, setShowEnemy] = useState<boolean>(false);\n    const { losses, wins } = useDecryptoSub(({ results }) => results);\n\n    const onSwitch = useCallback(() => setShowEnemy((s) => !s), []);\n\n    return (\n        <div\n            className={Util.classNames('decrypto', showEnemy && 'enemy', losses > 0 && 'alarm', wins > 0 && 'success')}>\n            <div className=\"decrypto-inner\">\n                <NotifyResult />\n                <div className=\"navigation\">\n                    <button type=\"button\" onClick={onSwitch}>\n                        <Icon.Exchange />\n                    </button>\n                </div>\n                <div className=\"content\">{showEnemy ? <DecryptoEnemy /> : <DecryptoMe />}</div>\n                <QrCodeOverlay />\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport { ErrorBoundary } from '../../components/ErrorBoundary';\nimport { DecryptoStore } from './Decrypto-store';\nimport { DecryptoInternal } from './Decrypto';\nimport { Footer } from '../../footer/Footer';\nimport { FooterRestart } from '../../footer/FooterRestart';\n\nconst DecryptoFooter: React.FC = () => (\n    <Footer>\n        <FooterRestart onClick={DecryptoStore.reset} />\n    </Footer>\n);\n\nexport const Decrypto: React.FC = () => (\n    <ErrorBoundary fix={DecryptoStore.reset}>\n        <DecryptoInternal />\n        <DecryptoFooter />\n    </ErrorBoundary>\n);\n","import './assets/main.scss';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Globals } from './globals';\nimport { ServiceWorkerUpdater } from './sw-logic';\nimport { IntlRoot } from './intl';\nimport { AppNavigation } from './AppNavigation';\n\nReactDOM.render(\n    <IntlRoot>\n        <AppNavigation.Root />\n        <ServiceWorkerUpdater />\n    </IntlRoot>,\n    Globals.document().getElementById('root')\n);\n"],"sourceRoot":""}